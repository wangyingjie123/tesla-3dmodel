var N$=Object.defineProperty,E$=Object.defineProperties;var I$=Object.getOwnPropertyDescriptors;var ha=Object.getOwnPropertySymbols;var Sm=Object.prototype.hasOwnProperty,Tm=Object.prototype.propertyIsEnumerable;var $m=(n,e,t)=>e in n?N$(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,Vt=(n,e)=>{for(var t in e||(e={}))Sm.call(e,t)&&$m(n,t,e[t]);if(ha)for(var t of ha(e))Tm.call(e,t)&&$m(n,t,e[t]);return n},Un=(n,e)=>E$(n,I$(e));var Cm=(n,e)=>{var t={};for(var r in n)Sm.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(n!=null&&ha)for(var r of ha(n))e.indexOf(r)<0&&Tm.call(n,r)&&(t[r]=n[r]);return t};var H=(n,e,t)=>new Promise((r,s)=>{var o=u=>{try{i(t.next(u))}catch(c){s(c)}},a=u=>{try{i(t.throw(u))}catch(c){s(c)}},i=u=>u.done?r(u.value):Promise.resolve(u.value).then(o,a);i((t=t.apply(n,e)).next())});import{aJ as yi,aK as jr,aL as Gc,aM as k$,aN as Ey,aO as _$,aP as Do,aQ as xi,aR as R$,aA as jc,aS as A$,aT as Hc,aU as za,aV as O$,aW as Cs,aX as Nm,k as Iy,l as Bu,aY as ky,aZ as D$,aa as co,a_ as _y,r as At,H as Qe,d as Ns,an as Ry,u as Fo,D as Ga,G as Ay,aB as lo,aC as qc,a$ as Kc,o as fo,c as ja,q as Pa,n as Zs,m as je,y as Oy,ac as Dy,az as F$,J as Ha,b0 as Vu,b1 as P$,f as Xc,b2 as Fy,b3 as L$,a6 as B$,a as mn,F as V$,au as bi,ak as M$,b4 as U$,b5 as W$,b6 as Em,b7 as xu,w as zn,W as z$,Z as G$,x as Im,b as Mu,t as Uu,s as km,e as qa,X as Py,z as j$,Q as H$,b8 as q$,b9 as qs,i as Ly,O as K$,ba as Ka,a2 as X$,ad as Y$,bb as Ks,bc as _m,Y as By,bd as Q$,be as Z$,bf as _n,bg as J$,g as e2,K as t2,L as n2,E as r2,_ as s2}from"./index-94e44db4.js";import{E as o2}from"./el-input-1b2c714d.js";import{c as Wu}from"./castArray-0cecb430.js";function a2(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const o=Object.getOwnPropertyDescriptor(r,s);o&&Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}var i2=yi(jr,"WeakMap");const zu=i2;var Rm=Object.create,u2=function(){function n(){}return function(e){if(!Gc(e))return{};if(Rm)return Rm(e);n.prototype=e;var t=new n;return n.prototype=void 0,t}}();const c2=u2;function l2(n,e){var t=-1,r=n.length;for(e||(e=Array(r));++t<r;)e[t]=n[t];return e}function d2(n,e){for(var t=-1,r=n==null?0:n.length;++t<r&&e(n[t],t,n)!==!1;);return n}function vi(n,e,t,r){var s=!t;t||(t={});for(var o=-1,a=e.length;++o<a;){var i=e[o],u=r?r(t[i],n[i],i,t,n):void 0;u===void 0&&(u=n[i]),s?k$(t,i,u):Ey(t,i,u)}return t}var f2=9007199254740991;function Vy(n){return typeof n=="number"&&n>-1&&n%1==0&&n<=f2}function My(n){return n!=null&&Vy(n.length)&&!_$(n)}var p2=Object.prototype;function Yc(n){var e=n&&n.constructor,t=typeof e=="function"&&e.prototype||p2;return n===t}function h2(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}var m2="[object Arguments]";function Am(n){return Do(n)&&xi(n)==m2}var Uy=Object.prototype,g2=Uy.hasOwnProperty,y2=Uy.propertyIsEnumerable,x2=Am(function(){return arguments}())?Am:function(n){return Do(n)&&g2.call(n,"callee")&&!y2.call(n,"callee")};const b2=x2;function v2(){return!1}var Wy=typeof exports=="object"&&exports&&!exports.nodeType&&exports,Om=Wy&&typeof module=="object"&&module&&!module.nodeType&&module,w2=Om&&Om.exports===Wy,Dm=w2?jr.Buffer:void 0,$2=Dm?Dm.isBuffer:void 0,S2=$2||v2;const zy=S2;var T2="[object Arguments]",C2="[object Array]",N2="[object Boolean]",E2="[object Date]",I2="[object Error]",k2="[object Function]",_2="[object Map]",R2="[object Number]",A2="[object Object]",O2="[object RegExp]",D2="[object Set]",F2="[object String]",P2="[object WeakMap]",L2="[object ArrayBuffer]",B2="[object DataView]",V2="[object Float32Array]",M2="[object Float64Array]",U2="[object Int8Array]",W2="[object Int16Array]",z2="[object Int32Array]",G2="[object Uint8Array]",j2="[object Uint8ClampedArray]",H2="[object Uint16Array]",q2="[object Uint32Array]",Ve={};Ve[V2]=Ve[M2]=Ve[U2]=Ve[W2]=Ve[z2]=Ve[G2]=Ve[j2]=Ve[H2]=Ve[q2]=!0;Ve[T2]=Ve[C2]=Ve[L2]=Ve[N2]=Ve[B2]=Ve[E2]=Ve[I2]=Ve[k2]=Ve[_2]=Ve[R2]=Ve[A2]=Ve[O2]=Ve[D2]=Ve[F2]=Ve[P2]=!1;function K2(n){return Do(n)&&Vy(n.length)&&!!Ve[xi(n)]}function Qc(n){return function(e){return n(e)}}var Gy=typeof exports=="object"&&exports&&!exports.nodeType&&exports,ao=Gy&&typeof module=="object"&&module&&!module.nodeType&&module,X2=ao&&ao.exports===Gy,bu=X2&&R$.process,Y2=function(){try{var n=ao&&ao.require&&ao.require("util").types;return n||bu&&bu.binding&&bu.binding("util")}catch(e){}}();const ps=Y2;var Fm=ps&&ps.isTypedArray,Q2=Fm?Qc(Fm):K2;const Z2=Q2;var J2=Object.prototype,eS=J2.hasOwnProperty;function jy(n,e){var t=jc(n),r=!t&&b2(n),s=!t&&!r&&zy(n),o=!t&&!r&&!s&&Z2(n),a=t||r||s||o,i=a?h2(n.length,String):[],u=i.length;for(var c in n)(e||eS.call(n,c))&&!(a&&(c=="length"||s&&(c=="offset"||c=="parent")||o&&(c=="buffer"||c=="byteLength"||c=="byteOffset")||A$(c,u)))&&i.push(c);return i}function Hy(n,e){return function(t){return n(e(t))}}var tS=Hy(Object.keys,Object);const nS=tS;var rS=Object.prototype,sS=rS.hasOwnProperty;function oS(n){if(!Yc(n))return nS(n);var e=[];for(var t in Object(n))sS.call(n,t)&&t!="constructor"&&e.push(t);return e}function Zc(n){return My(n)?jy(n):oS(n)}function aS(n){var e=[];if(n!=null)for(var t in Object(n))e.push(t);return e}var iS=Object.prototype,uS=iS.hasOwnProperty;function cS(n){if(!Gc(n))return aS(n);var e=Yc(n),t=[];for(var r in n)r=="constructor"&&(e||!uS.call(n,r))||t.push(r);return t}function Jc(n){return My(n)?jy(n,!0):cS(n)}function qy(n,e){for(var t=-1,r=e.length,s=n.length;++t<r;)n[s+t]=e[t];return n}var lS=Hy(Object.getPrototypeOf,Object);const Ky=lS;function dS(){this.__data__=new Hc,this.size=0}function fS(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}function pS(n){return this.__data__.get(n)}function hS(n){return this.__data__.has(n)}var mS=200;function gS(n,e){var t=this.__data__;if(t instanceof Hc){var r=t.__data__;if(!za||r.length<mS-1)return r.push([n,e]),this.size=++t.size,this;t=this.__data__=new O$(r)}return t.set(n,e),this.size=t.size,this}function Es(n){var e=this.__data__=new Hc(n);this.size=e.size}Es.prototype.clear=dS;Es.prototype.delete=fS;Es.prototype.get=pS;Es.prototype.has=hS;Es.prototype.set=gS;function yS(n,e){return n&&vi(e,Zc(e),n)}function xS(n,e){return n&&vi(e,Jc(e),n)}var Xy=typeof exports=="object"&&exports&&!exports.nodeType&&exports,Pm=Xy&&typeof module=="object"&&module&&!module.nodeType&&module,bS=Pm&&Pm.exports===Xy,Lm=bS?jr.Buffer:void 0,Bm=Lm?Lm.allocUnsafe:void 0;function vS(n,e){if(e)return n.slice();var t=n.length,r=Bm?Bm(t):new n.constructor(t);return n.copy(r),r}function wS(n,e){for(var t=-1,r=n==null?0:n.length,s=0,o=[];++t<r;){var a=n[t];e(a,t,n)&&(o[s++]=a)}return o}function Yy(){return[]}var $S=Object.prototype,SS=$S.propertyIsEnumerable,Vm=Object.getOwnPropertySymbols,TS=Vm?function(n){return n==null?[]:(n=Object(n),wS(Vm(n),function(e){return SS.call(n,e)}))}:Yy;const el=TS;function CS(n,e){return vi(n,el(n),e)}var NS=Object.getOwnPropertySymbols,ES=NS?function(n){for(var e=[];n;)qy(e,el(n)),n=Ky(n);return e}:Yy;const Qy=ES;function IS(n,e){return vi(n,Qy(n),e)}function Zy(n,e,t){var r=e(n);return jc(n)?r:qy(r,t(n))}function kS(n){return Zy(n,Zc,el)}function _S(n){return Zy(n,Jc,Qy)}var RS=yi(jr,"DataView");const Gu=RS;var AS=yi(jr,"Promise");const ju=AS;var OS=yi(jr,"Set");const Hu=OS;var Mm="[object Map]",DS="[object Object]",Um="[object Promise]",Wm="[object Set]",zm="[object WeakMap]",Gm="[object DataView]",FS=Cs(Gu),PS=Cs(za),LS=Cs(ju),BS=Cs(Hu),VS=Cs(zu),Tr=xi;(Gu&&Tr(new Gu(new ArrayBuffer(1)))!=Gm||za&&Tr(new za)!=Mm||ju&&Tr(ju.resolve())!=Um||Hu&&Tr(new Hu)!=Wm||zu&&Tr(new zu)!=zm)&&(Tr=function(n){var e=xi(n),t=e==DS?n.constructor:void 0,r=t?Cs(t):"";if(r)switch(r){case FS:return Gm;case PS:return Mm;case LS:return Um;case BS:return Wm;case VS:return zm}return e});const tl=Tr;var MS=Object.prototype,US=MS.hasOwnProperty;function WS(n){var e=n.length,t=new n.constructor(e);return e&&typeof n[0]=="string"&&US.call(n,"index")&&(t.index=n.index,t.input=n.input),t}var zS=jr.Uint8Array;const jm=zS;function nl(n){var e=new n.constructor(n.byteLength);return new jm(e).set(new jm(n)),e}function GS(n,e){var t=e?nl(n.buffer):n.buffer;return new n.constructor(t,n.byteOffset,n.byteLength)}var jS=/\w*$/;function HS(n){var e=new n.constructor(n.source,jS.exec(n));return e.lastIndex=n.lastIndex,e}var Hm=Nm?Nm.prototype:void 0,qm=Hm?Hm.valueOf:void 0;function qS(n){return qm?Object(qm.call(n)):{}}function KS(n,e){var t=e?nl(n.buffer):n.buffer;return new n.constructor(t,n.byteOffset,n.length)}var XS="[object Boolean]",YS="[object Date]",QS="[object Map]",ZS="[object Number]",JS="[object RegExp]",eT="[object Set]",tT="[object String]",nT="[object Symbol]",rT="[object ArrayBuffer]",sT="[object DataView]",oT="[object Float32Array]",aT="[object Float64Array]",iT="[object Int8Array]",uT="[object Int16Array]",cT="[object Int32Array]",lT="[object Uint8Array]",dT="[object Uint8ClampedArray]",fT="[object Uint16Array]",pT="[object Uint32Array]";function hT(n,e,t){var r=n.constructor;switch(e){case rT:return nl(n);case XS:case YS:return new r(+n);case sT:return GS(n,t);case oT:case aT:case iT:case uT:case cT:case lT:case dT:case fT:case pT:return KS(n,t);case QS:return new r;case ZS:case tT:return new r(n);case JS:return HS(n);case eT:return new r;case nT:return qS(n)}}function mT(n){return typeof n.constructor=="function"&&!Yc(n)?c2(Ky(n)):{}}var gT="[object Map]";function yT(n){return Do(n)&&tl(n)==gT}var Km=ps&&ps.isMap,xT=Km?Qc(Km):yT;const bT=xT;var vT="[object Set]";function wT(n){return Do(n)&&tl(n)==vT}var Xm=ps&&ps.isSet,$T=Xm?Qc(Xm):wT;const ST=$T;var TT=1,CT=2,NT=4,Jy="[object Arguments]",ET="[object Array]",IT="[object Boolean]",kT="[object Date]",_T="[object Error]",ex="[object Function]",RT="[object GeneratorFunction]",AT="[object Map]",OT="[object Number]",tx="[object Object]",DT="[object RegExp]",FT="[object Set]",PT="[object String]",LT="[object Symbol]",BT="[object WeakMap]",VT="[object ArrayBuffer]",MT="[object DataView]",UT="[object Float32Array]",WT="[object Float64Array]",zT="[object Int8Array]",GT="[object Int16Array]",jT="[object Int32Array]",HT="[object Uint8Array]",qT="[object Uint8ClampedArray]",KT="[object Uint16Array]",XT="[object Uint32Array]",Oe={};Oe[Jy]=Oe[ET]=Oe[VT]=Oe[MT]=Oe[IT]=Oe[kT]=Oe[UT]=Oe[WT]=Oe[zT]=Oe[GT]=Oe[jT]=Oe[AT]=Oe[OT]=Oe[tx]=Oe[DT]=Oe[FT]=Oe[PT]=Oe[LT]=Oe[HT]=Oe[qT]=Oe[KT]=Oe[XT]=!0;Oe[_T]=Oe[ex]=Oe[BT]=!1;function La(n,e,t,r,s,o){var a,i=e&TT,u=e&CT,c=e&NT;if(t&&(a=s?t(n,r,s,o):t(n)),a!==void 0)return a;if(!Gc(n))return n;var l=jc(n);if(l){if(a=WS(n),!i)return l2(n,a)}else{var d=tl(n),f=d==ex||d==RT;if(zy(n))return vS(n,i);if(d==tx||d==Jy||f&&!s){if(a=u||f?{}:mT(n),!i)return u?IS(n,xS(a,n)):CS(n,yS(a,n))}else{if(!Oe[d])return s?n:{};a=hT(n,d,i)}}o||(o=new Es);var h=o.get(n);if(h)return h;o.set(n,a),ST(n)?n.forEach(function(y){a.add(La(y,e,t,y,n,o))}):bT(n)&&n.forEach(function(y,b){a.set(b,La(y,e,t,b,n,o))});var m=c?u?_S:kS:u?Jc:Zc,g=l?void 0:m(n);return d2(g||n,function(y,b){g&&(b=y,y=n[b]),Ey(a,b,La(y,e,t,b,n,o))}),a}var YT=4;function Ym(n){return La(n,YT)}const QT=Iy({model:Object,rules:{type:Bu(Object)},labelPosition:{type:String,values:["left","right","top"],default:"right"},requireAsteriskPosition:{type:String,values:["left","right"],default:"left"},labelWidth:{type:[String,Number],default:""},labelSuffix:{type:String,default:""},inline:Boolean,inlineMessage:Boolean,statusIcon:Boolean,showMessage:{type:Boolean,default:!0},size:{type:String,values:ky},disabled:Boolean,validateOnRuleChange:{type:Boolean,default:!0},hideRequiredAsterisk:{type:Boolean,default:!1},scrollToError:Boolean}),ZT={validate:(n,e,t)=>(D$(n)||co(n))&&_y(e)&&co(t)};function JT(){const n=At([]),e=Qe(()=>{if(!n.value.length)return"0";const o=Math.max(...n.value);return o?`${o}px`:""});function t(o){const a=n.value.indexOf(o);return a===-1&&e.value,a}function r(o,a){if(o&&a){const i=t(a);n.value.splice(i,1,o)}else o&&n.value.push(o)}function s(o){const a=t(o);a>-1&&n.value.splice(a,1)}return{autoLabelWidth:e,registerLabelWidth:r,deregisterLabelWidth:s}}const ma=(n,e)=>{const t=Wu(e);return t.length>0?n.filter(r=>r.prop&&t.includes(r.prop)):n},eC="ElForm",tC=Ns({name:eC}),nC=Ns(Un(Vt({},tC),{props:QT,emits:ZT,setup(n,{expose:e,emit:t}){const r=n,s=[],o=Ry(),a=Fo("form"),i=Qe(()=>{const{labelPosition:$,inline:S}=r;return[a.b(),a.m(o.value||"default"),{[a.m(`label-${$}`)]:$,[a.m("inline")]:S}]}),u=$=>{s.push($)},c=$=>{$.prop&&s.splice(s.indexOf($),1)},l=($=[])=>{r.model&&ma(s,$).forEach(S=>S.resetField())},d=($=[])=>{ma(s,$).forEach(S=>S.clearValidate())},f=Qe(()=>!!r.model),h=$=>{if(s.length===0)return[];const S=ma(s,$);return S.length?S:[]},m=$=>H(this,null,function*(){return y(void 0,$)}),g=(...S)=>H(this,[...S],function*($=[]){if(!f.value)return!1;const C=h($);if(C.length===0)return!0;let I={};for(const A of C)try{yield A.validate("")}catch(L){I=Vt(Vt({},I),L)}return Object.keys(I).length===0?!0:Promise.reject(I)}),y=(...C)=>H(this,[...C],function*($=[],S){const I=!Dy(S);try{const A=yield g($);return A===!0&&(S==null||S(A)),A}catch(A){if(A instanceof Error)throw A;const L=A;return r.scrollToError&&b(Object.keys(L)[0]),S==null||S(!1,L),I&&Promise.reject(L)}}),b=$=>{var S;const C=ma(s,$)[0];C&&((S=C.$el)==null||S.scrollIntoView())};return Ga(()=>r.rules,()=>{r.validateOnRuleChange&&m().catch($=>F$())},{deep:!0}),Ay(Kc,lo(Vt(Un(Vt({},qc(r)),{emit:t,resetFields:l,clearValidate:d,validateField:y,addField:u,removeField:c}),JT()))),e({validate:m,validateField:y,resetFields:l,clearValidate:d,scrollToField:b}),($,S)=>(fo(),ja("form",{class:Zs(je(i))},[Pa($.$slots,"default")],2))}}));var rC=Oy(nC,[["__file","/home/runner/work/element-plus/element-plus/packages/components/form/src/form.vue"]]);function Ir(){return Ir=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Ir.apply(this,arguments)}function sC(n,e){n.prototype=Object.create(e.prototype),n.prototype.constructor=n,po(n,e)}function qu(n){return qu=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},qu(n)}function po(n,e){return po=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,s){return r.__proto__=s,r},po(n,e)}function oC(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(n){return!1}}function Ba(n,e,t){return oC()?Ba=Reflect.construct.bind():Ba=function(s,o,a){var i=[null];i.push.apply(i,o);var u=Function.bind.apply(s,i),c=new u;return a&&po(c,a.prototype),c},Ba.apply(null,arguments)}function aC(n){return Function.toString.call(n).indexOf("[native code]")!==-1}function Ku(n){var e=typeof Map=="function"?new Map:void 0;return Ku=function(r){if(r===null||!aC(r))return r;if(typeof r!="function")throw new TypeError("Super expression must either be null or a function");if(typeof e!="undefined"){if(e.has(r))return e.get(r);e.set(r,s)}function s(){return Ba(r,arguments,qu(this).constructor)}return s.prototype=Object.create(r.prototype,{constructor:{value:s,enumerable:!1,writable:!0,configurable:!0}}),po(s,r)},Ku(n)}var iC=/%[sdj%]/g,uC=function(){};typeof process!="undefined"&&process.env;function Xu(n){if(!n||!n.length)return null;var e={};return n.forEach(function(t){var r=t.field;e[r]=e[r]||[],e[r].push(t)}),e}function Mt(n){for(var e=arguments.length,t=new Array(e>1?e-1:0),r=1;r<e;r++)t[r-1]=arguments[r];var s=0,o=t.length;if(typeof n=="function")return n.apply(null,t);if(typeof n=="string"){var a=n.replace(iC,function(i){if(i==="%%")return"%";if(s>=o)return i;switch(i){case"%s":return String(t[s++]);case"%d":return Number(t[s++]);case"%j":try{return JSON.stringify(t[s++])}catch(u){return"[Circular]"}break;default:return i}});return a}return n}function cC(n){return n==="string"||n==="url"||n==="hex"||n==="email"||n==="date"||n==="pattern"}function et(n,e){return!!(n==null||e==="array"&&Array.isArray(n)&&!n.length||cC(e)&&typeof n=="string"&&!n)}function lC(n,e,t){var r=[],s=0,o=n.length;function a(i){r.push.apply(r,i||[]),s++,s===o&&t(r)}n.forEach(function(i){e(i,a)})}function Qm(n,e,t){var r=0,s=n.length;function o(a){if(a&&a.length){t(a);return}var i=r;r=r+1,i<s?e(n[i],o):t([])}o([])}function dC(n){var e=[];return Object.keys(n).forEach(function(t){e.push.apply(e,n[t]||[])}),e}var Zm=function(n){sC(e,n);function e(t,r){var s;return s=n.call(this,"Async Validation Error")||this,s.errors=t,s.fields=r,s}return e}(Ku(Error));function fC(n,e,t,r,s){if(e.first){var o=new Promise(function(f,h){var m=function(b){return r(b),b.length?h(new Zm(b,Xu(b))):f(s)},g=dC(n);Qm(g,t,m)});return o.catch(function(f){return f}),o}var a=e.firstFields===!0?Object.keys(n):e.firstFields||[],i=Object.keys(n),u=i.length,c=0,l=[],d=new Promise(function(f,h){var m=function(y){if(l.push.apply(l,y),c++,c===u)return r(l),l.length?h(new Zm(l,Xu(l))):f(s)};i.length||(r(l),f(s)),i.forEach(function(g){var y=n[g];a.indexOf(g)!==-1?Qm(y,t,m):lC(y,t,m)})});return d.catch(function(f){return f}),d}function pC(n){return!!(n&&n.message!==void 0)}function hC(n,e){for(var t=n,r=0;r<e.length;r++){if(t==null)return t;t=t[e[r]]}return t}function Jm(n,e){return function(t){var r;return n.fullFields?r=hC(e,n.fullFields):r=e[t.field||n.fullField],pC(t)?(t.field=t.field||n.fullField,t.fieldValue=r,t):{message:typeof t=="function"?t():t,fieldValue:r,field:t.field||n.fullField}}}function eg(n,e){if(e){for(var t in e)if(e.hasOwnProperty(t)){var r=e[t];typeof r=="object"&&typeof n[t]=="object"?n[t]=Ir({},n[t],r):n[t]=r}}return n}var nx=function(e,t,r,s,o,a){e.required&&(!r.hasOwnProperty(e.field)||et(t,a||e.type))&&s.push(Mt(o.messages.required,e.fullField))},mC=function(e,t,r,s,o){(/^\s+$/.test(t)||t==="")&&s.push(Mt(o.messages.whitespace,e.fullField))},ga,gC=function(){if(ga)return ga;var n="[a-fA-F\\d:]",e=function(C){return C&&C.includeBoundaries?"(?:(?<=\\s|^)(?="+n+")|(?<="+n+")(?=\\s|$))":""},t="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",r="[a-fA-F\\d]{1,4}",s=(`
(?:
(?:`+r+":){7}(?:"+r+`|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:`+r+":){6}(?:"+t+"|:"+r+`|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:`+r+":){5}(?::"+t+"|(?::"+r+`){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:`+r+":){4}(?:(?::"+r+"){0,1}:"+t+"|(?::"+r+`){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:`+r+":){3}(?:(?::"+r+"){0,2}:"+t+"|(?::"+r+`){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:`+r+":){2}(?:(?::"+r+"){0,3}:"+t+"|(?::"+r+`){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:`+r+":){1}(?:(?::"+r+"){0,4}:"+t+"|(?::"+r+`){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::`+r+"){0,5}:"+t+"|(?::"+r+`){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`).replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),o=new RegExp("(?:^"+t+"$)|(?:^"+s+"$)"),a=new RegExp("^"+t+"$"),i=new RegExp("^"+s+"$"),u=function(C){return C&&C.exact?o:new RegExp("(?:"+e(C)+t+e(C)+")|(?:"+e(C)+s+e(C)+")","g")};u.v4=function(S){return S&&S.exact?a:new RegExp(""+e(S)+t+e(S),"g")},u.v6=function(S){return S&&S.exact?i:new RegExp(""+e(S)+s+e(S),"g")};var c="(?:(?:[a-z]+:)?//)",l="(?:\\S+(?::\\S*)?@)?",d=u.v4().source,f=u.v6().source,h="(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)",m="(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*",g="(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))",y="(?::\\d{2,5})?",b='(?:[/?#][^\\s"]*)?',$="(?:"+c+"|www\\.)"+l+"(?:localhost|"+d+"|"+f+"|"+h+m+g+")"+y+b;return ga=new RegExp("(?:^"+$+"$)","i"),ga},tg={email:/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,hex:/^#?([a-f0-9]{6}|[a-f0-9]{3})$/i},Js={integer:function(e){return Js.number(e)&&parseInt(e,10)===e},float:function(e){return Js.number(e)&&!Js.integer(e)},array:function(e){return Array.isArray(e)},regexp:function(e){if(e instanceof RegExp)return!0;try{return!!new RegExp(e)}catch(t){return!1}},date:function(e){return typeof e.getTime=="function"&&typeof e.getMonth=="function"&&typeof e.getYear=="function"&&!isNaN(e.getTime())},number:function(e){return isNaN(e)?!1:typeof e=="number"},object:function(e){return typeof e=="object"&&!Js.array(e)},method:function(e){return typeof e=="function"},email:function(e){return typeof e=="string"&&e.length<=320&&!!e.match(tg.email)},url:function(e){return typeof e=="string"&&e.length<=2048&&!!e.match(gC())},hex:function(e){return typeof e=="string"&&!!e.match(tg.hex)}},yC=function(e,t,r,s,o){if(e.required&&t===void 0){nx(e,t,r,s,o);return}var a=["integer","float","array","regexp","object","method","email","number","date","url","hex"],i=e.type;a.indexOf(i)>-1?Js[i](t)||s.push(Mt(o.messages.types[i],e.fullField,e.type)):i&&typeof t!==e.type&&s.push(Mt(o.messages.types[i],e.fullField,e.type))},xC=function(e,t,r,s,o){var a=typeof e.len=="number",i=typeof e.min=="number",u=typeof e.max=="number",c=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,l=t,d=null,f=typeof t=="number",h=typeof t=="string",m=Array.isArray(t);if(f?d="number":h?d="string":m&&(d="array"),!d)return!1;m&&(l=t.length),h&&(l=t.replace(c,"_").length),a?l!==e.len&&s.push(Mt(o.messages[d].len,e.fullField,e.len)):i&&!u&&l<e.min?s.push(Mt(o.messages[d].min,e.fullField,e.min)):u&&!i&&l>e.max?s.push(Mt(o.messages[d].max,e.fullField,e.max)):i&&u&&(l<e.min||l>e.max)&&s.push(Mt(o.messages[d].range,e.fullField,e.min,e.max))},rs="enum",bC=function(e,t,r,s,o){e[rs]=Array.isArray(e[rs])?e[rs]:[],e[rs].indexOf(t)===-1&&s.push(Mt(o.messages[rs],e.fullField,e[rs].join(", ")))},vC=function(e,t,r,s,o){if(e.pattern){if(e.pattern instanceof RegExp)e.pattern.lastIndex=0,e.pattern.test(t)||s.push(Mt(o.messages.pattern.mismatch,e.fullField,t,e.pattern));else if(typeof e.pattern=="string"){var a=new RegExp(e.pattern);a.test(t)||s.push(Mt(o.messages.pattern.mismatch,e.fullField,t,e.pattern))}}},ye={required:nx,whitespace:mC,type:yC,range:xC,enum:bC,pattern:vC},wC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t,"string")&&!e.required)return r();ye.required(e,t,s,a,o,"string"),et(t,"string")||(ye.type(e,t,s,a,o),ye.range(e,t,s,a,o),ye.pattern(e,t,s,a,o),e.whitespace===!0&&ye.whitespace(e,t,s,a,o))}r(a)},$C=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t)&&!e.required)return r();ye.required(e,t,s,a,o),t!==void 0&&ye.type(e,t,s,a,o)}r(a)},SC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(t===""&&(t=void 0),et(t)&&!e.required)return r();ye.required(e,t,s,a,o),t!==void 0&&(ye.type(e,t,s,a,o),ye.range(e,t,s,a,o))}r(a)},TC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t)&&!e.required)return r();ye.required(e,t,s,a,o),t!==void 0&&ye.type(e,t,s,a,o)}r(a)},CC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t)&&!e.required)return r();ye.required(e,t,s,a,o),et(t)||ye.type(e,t,s,a,o)}r(a)},NC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t)&&!e.required)return r();ye.required(e,t,s,a,o),t!==void 0&&(ye.type(e,t,s,a,o),ye.range(e,t,s,a,o))}r(a)},EC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t)&&!e.required)return r();ye.required(e,t,s,a,o),t!==void 0&&(ye.type(e,t,s,a,o),ye.range(e,t,s,a,o))}r(a)},IC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(t==null&&!e.required)return r();ye.required(e,t,s,a,o,"array"),t!=null&&(ye.type(e,t,s,a,o),ye.range(e,t,s,a,o))}r(a)},kC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t)&&!e.required)return r();ye.required(e,t,s,a,o),t!==void 0&&ye.type(e,t,s,a,o)}r(a)},_C="enum",RC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t)&&!e.required)return r();ye.required(e,t,s,a,o),t!==void 0&&ye[_C](e,t,s,a,o)}r(a)},AC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t,"string")&&!e.required)return r();ye.required(e,t,s,a,o),et(t,"string")||ye.pattern(e,t,s,a,o)}r(a)},OC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t,"date")&&!e.required)return r();if(ye.required(e,t,s,a,o),!et(t,"date")){var u;t instanceof Date?u=t:u=new Date(t),ye.type(e,u,s,a,o),u&&ye.range(e,u.getTime(),s,a,o)}}r(a)},DC=function(e,t,r,s,o){var a=[],i=Array.isArray(t)?"array":typeof t;ye.required(e,t,s,a,o,i),r(a)},vu=function(e,t,r,s,o){var a=e.type,i=[],u=e.required||!e.required&&s.hasOwnProperty(e.field);if(u){if(et(t,a)&&!e.required)return r();ye.required(e,t,s,i,o,a),et(t,a)||ye.type(e,t,s,i,o)}r(i)},FC=function(e,t,r,s,o){var a=[],i=e.required||!e.required&&s.hasOwnProperty(e.field);if(i){if(et(t)&&!e.required)return r();ye.required(e,t,s,a,o)}r(a)},io={string:wC,method:$C,number:SC,boolean:TC,regexp:CC,integer:NC,float:EC,array:IC,object:kC,enum:RC,pattern:AC,date:OC,url:vu,hex:vu,email:vu,required:DC,any:FC};function Yu(){return{default:"Validation error on field %s",required:"%s is required",enum:"%s must be one of %s",whitespace:"%s cannot be empty",date:{format:"%s date %s is invalid for format %s",parse:"%s date could not be parsed, %s is invalid ",invalid:"%s date %s is invalid"},types:{string:"%s is not a %s",method:"%s is not a %s (function)",array:"%s is not an %s",object:"%s is not an %s",number:"%s is not a %s",date:"%s is not a %s",boolean:"%s is not a %s",integer:"%s is not an %s",float:"%s is not a %s",regexp:"%s is not a valid %s",email:"%s is not a valid %s",url:"%s is not a valid %s",hex:"%s is not a valid %s"},string:{len:"%s must be exactly %s characters",min:"%s must be at least %s characters",max:"%s cannot be longer than %s characters",range:"%s must be between %s and %s characters"},number:{len:"%s must equal %s",min:"%s cannot be less than %s",max:"%s cannot be greater than %s",range:"%s must be between %s and %s"},array:{len:"%s must be exactly %s in length",min:"%s cannot be less than %s in length",max:"%s cannot be greater than %s in length",range:"%s must be between %s and %s in length"},pattern:{mismatch:"%s value %s does not match pattern %s"},clone:function(){var e=JSON.parse(JSON.stringify(this));return e.clone=this.clone,e}}}var Qu=Yu(),Po=function(){function n(t){this.rules=null,this._messages=Qu,this.define(t)}var e=n.prototype;return e.define=function(r){var s=this;if(!r)throw new Error("Cannot configure a schema with no rules");if(typeof r!="object"||Array.isArray(r))throw new Error("Rules must be an object");this.rules={},Object.keys(r).forEach(function(o){var a=r[o];s.rules[o]=Array.isArray(a)?a:[a]})},e.messages=function(r){return r&&(this._messages=eg(Yu(),r)),this._messages},e.validate=function(r,s,o){var a=this;s===void 0&&(s={}),o===void 0&&(o=function(){});var i=r,u=s,c=o;if(typeof u=="function"&&(c=u,u={}),!this.rules||Object.keys(this.rules).length===0)return c&&c(null,i),Promise.resolve(i);function l(g){var y=[],b={};function $(C){if(Array.isArray(C)){var I;y=(I=y).concat.apply(I,C)}else y.push(C)}for(var S=0;S<g.length;S++)$(g[S]);y.length?(b=Xu(y),c(y,b)):c(null,i)}if(u.messages){var d=this.messages();d===Qu&&(d=Yu()),eg(d,u.messages),u.messages=d}else u.messages=this.messages();var f={},h=u.keys||Object.keys(this.rules);h.forEach(function(g){var y=a.rules[g],b=i[g];y.forEach(function($){var S=$;typeof S.transform=="function"&&(i===r&&(i=Ir({},i)),b=i[g]=S.transform(b)),typeof S=="function"?S={validator:S}:S=Ir({},S),S.validator=a.getValidationMethod(S),S.validator&&(S.field=g,S.fullField=S.fullField||g,S.type=a.getType(S),f[g]=f[g]||[],f[g].push({rule:S,value:b,source:i,field:g}))})});var m={};return fC(f,u,function(g,y){var b=g.rule,$=(b.type==="object"||b.type==="array")&&(typeof b.fields=="object"||typeof b.defaultField=="object");$=$&&(b.required||!b.required&&g.value),b.field=g.field;function S(A,L){return Ir({},L,{fullField:b.fullField+"."+A,fullFields:b.fullFields?[].concat(b.fullFields,[A]):[A]})}function C(A){A===void 0&&(A=[]);var L=Array.isArray(A)?A:[A];!u.suppressWarning&&L.length&&n.warning("async-validator:",L),L.length&&b.message!==void 0&&(L=[].concat(b.message));var F=L.map(Jm(b,i));if(u.first&&F.length)return m[b.field]=1,y(F);if(!$)y(F);else{if(b.required&&!g.value)return b.message!==void 0?F=[].concat(b.message).map(Jm(b,i)):u.error&&(F=[u.error(b,Mt(u.messages.required,b.field))]),y(F);var V={};b.defaultField&&Object.keys(g.value).map(function(G){V[G]=b.defaultField}),V=Ir({},V,g.rule.fields);var W={};Object.keys(V).forEach(function(G){var K=V[G],te=Array.isArray(K)?K:[K];W[G]=te.map(S.bind(null,G))});var U=new n(W);U.messages(u.messages),g.rule.options&&(g.rule.options.messages=u.messages,g.rule.options.error=u.error),U.validate(g.value,g.rule.options||u,function(G){var K=[];F&&F.length&&K.push.apply(K,F),G&&G.length&&K.push.apply(K,G),y(K.length?K:null)})}}var I;if(b.asyncValidator)I=b.asyncValidator(b,g.value,C,g.source,u);else if(b.validator){try{I=b.validator(b,g.value,C,g.source,u)}catch(A){console.error==null||console.error(A),u.suppressValidatorError||setTimeout(function(){throw A},0),C(A.message)}I===!0?C():I===!1?C(typeof b.message=="function"?b.message(b.fullField||b.field):b.message||(b.fullField||b.field)+" fails"):I instanceof Array?C(I):I instanceof Error&&C(I.message)}I&&I.then&&I.then(function(){return C()},function(A){return C(A)})},function(g){l(g)},i)},e.getType=function(r){if(r.type===void 0&&r.pattern instanceof RegExp&&(r.type="pattern"),typeof r.validator!="function"&&r.type&&!io.hasOwnProperty(r.type))throw new Error(Mt("Unknown rule type %s",r.type));return r.type||"string"},e.getValidationMethod=function(r){if(typeof r.validator=="function")return r.validator;var s=Object.keys(r),o=s.indexOf("message");return o!==-1&&s.splice(o,1),s.length===1&&s[0]==="required"?io.required:io[this.getType(r)]||void 0},n}();Po.register=function(e,t){if(typeof t!="function")throw new Error("Cannot register a validator by type, validator is not a function");io[e]=t};Po.warning=uC;Po.messages=Qu;Po.validators=io;const PC=["","error","validating","success"],LC=Iy({label:String,labelWidth:{type:[String,Number],default:""},prop:{type:Bu([String,Array])},required:{type:Boolean,default:void 0},rules:{type:Bu([Object,Array])},error:String,validateStatus:{type:String,values:PC},for:String,inlineMessage:{type:[String,Boolean],default:""},showMessage:{type:Boolean,default:!0},size:{type:String,values:ky}}),ng="ElLabelWrap";var BC=Ns({name:ng,props:{isAutoWidth:Boolean,updateAll:Boolean},setup(n,{slots:e}){const t=Ha(Kc,void 0),r=Ha(Vu);r||P$(ng,"usage: <el-form-item><label-wrap /></el-form-item>");const s=Fo("form"),o=At(),a=At(0),i=()=>{var l;if((l=o.value)!=null&&l.firstElementChild){const d=window.getComputedStyle(o.value.firstElementChild).width;return Math.ceil(Number.parseFloat(d))}else return 0},u=(l="update")=>{bi(()=>{e.default&&n.isAutoWidth&&(l==="update"?a.value=i():l==="remove"&&(t==null||t.deregisterLabelWidth(a.value)))})},c=()=>u("update");return Xc(()=>{c()}),Fy(()=>{u("remove")}),L$(()=>c()),Ga(a,(l,d)=>{n.updateAll&&(t==null||t.registerLabelWidth(l,d))}),B$(Qe(()=>{var l,d;return(d=(l=o.value)==null?void 0:l.firstElementChild)!=null?d:null}),c),()=>{var l,d;if(!e)return null;const{isAutoWidth:f}=n;if(f){const h=t==null?void 0:t.autoLabelWidth,m=r==null?void 0:r.hasLabel,g={};if(m&&h&&h!=="auto"){const y=Math.max(0,Number.parseInt(h,10)-a.value),b=t.labelPosition==="left"?"marginRight":"marginLeft";y&&(g[b]=`${y}px`)}return mn("div",{ref:o,class:[s.be("item","label-wrap")],style:g},[(l=e.default)==null?void 0:l.call(e)])}else return mn(V$,{ref:o},[(d=e.default)==null?void 0:d.call(e)])}}});const VC=["role","aria-labelledby"],MC=Ns({name:"ElFormItem"}),UC=Ns(Un(Vt({},MC),{props:LC,setup(n,{expose:e}){const t=n,r=M$(),s=Ha(Kc,void 0),o=Ha(Vu,void 0),a=Ry(void 0,{formItem:!1}),i=Fo("form-item"),u=U$().value,c=At([]),l=At(""),d=W$(l,100),f=At(""),h=At();let m,g=!1;const y=Qe(()=>{if((s==null?void 0:s.labelPosition)==="top")return{};const re=Em(t.labelWidth||(s==null?void 0:s.labelWidth)||"");return re?{width:re}:{}}),b=Qe(()=>{if((s==null?void 0:s.labelPosition)==="top"||s!=null&&s.inline)return{};if(!t.label&&!t.labelWidth&&V)return{};const re=Em(t.labelWidth||(s==null?void 0:s.labelWidth)||"");return!t.label&&!r.label?{marginLeft:re}:{}}),$=Qe(()=>[i.b(),i.m(a.value),i.is("error",l.value==="error"),i.is("validating",l.value==="validating"),i.is("success",l.value==="success"),i.is("required",te.value||t.required),i.is("no-asterisk",s==null?void 0:s.hideRequiredAsterisk),(s==null?void 0:s.requireAsteriskPosition)==="right"?"asterisk-right":"asterisk-left",{[i.m("feedback")]:s==null?void 0:s.statusIcon}]),S=Qe(()=>_y(t.inlineMessage)?t.inlineMessage:(s==null?void 0:s.inlineMessage)||!1),C=Qe(()=>[i.e("error"),{[i.em("error","inline")]:S.value}]),I=Qe(()=>t.prop?co(t.prop)?t.prop:t.prop.join("."):""),A=Qe(()=>!!(t.label||r.label)),L=Qe(()=>t.for||c.value.length===1?c.value[0]:void 0),F=Qe(()=>!L.value&&A.value),V=!!o,W=Qe(()=>{const re=s==null?void 0:s.model;if(!(!re||!t.prop))return xu(re,t.prop).value}),U=Qe(()=>{const{required:re}=t,ge=[];t.rules&&ge.push(...Wu(t.rules));const Pe=s==null?void 0:s.rules;if(Pe&&t.prop){const Le=xu(Pe,t.prop).value;Le&&ge.push(...Wu(Le))}if(re!==void 0){const Le=ge.map((Xe,dn)=>[Xe,dn]).filter(([Xe])=>Object.keys(Xe).includes("required"));if(Le.length>0)for(const[Xe,dn]of Le)Xe.required!==re&&(ge[dn]=Un(Vt({},Xe),{required:re}));else ge.push({required:re})}return ge}),G=Qe(()=>U.value.length>0),K=re=>U.value.filter(Pe=>!Pe.trigger||!re?!0:Array.isArray(Pe.trigger)?Pe.trigger.includes(re):Pe.trigger===re).map(Xe=>{var dn=Xe,{trigger:Pe}=dn,Le=Cm(dn,["trigger"]);return Le}),te=Qe(()=>U.value.some(re=>re.required)),oe=Qe(()=>{var re;return d.value==="error"&&t.showMessage&&((re=s==null?void 0:s.showMessage)!=null?re:!0)}),le=Qe(()=>`${t.label||""}${(s==null?void 0:s.labelSuffix)||""}`),fe=re=>{l.value=re},me=re=>{var ge,Pe;const{errors:Le,fields:Xe}=re;(!Le||!Xe)&&console.error(re),fe("error"),f.value=Le?(Pe=(ge=Le==null?void 0:Le[0])==null?void 0:ge.message)!=null?Pe:`${t.prop} is required`:"",s==null||s.emit("validate",t.prop,!1,f.value)},$e=()=>{fe("success"),s==null||s.emit("validate",t.prop,!0,"")},tt=re=>H(this,null,function*(){const ge=I.value;return new Po({[ge]:re}).validate({[ge]:W.value},{firstFields:!0}).then(()=>($e(),!0)).catch(Le=>(me(Le),Promise.reject(Le)))}),it=(re,ge)=>H(this,null,function*(){if(g||!t.prop)return!1;const Pe=Dy(ge);if(!G.value)return ge==null||ge(!1),!1;const Le=K(re);return Le.length===0?(ge==null||ge(!0),!0):(fe("validating"),tt(Le).then(()=>(ge==null||ge(!0),!0)).catch(Xe=>{const{fields:dn}=Xe;return ge==null||ge(!1,dn),Pe?!1:Promise.reject(dn)}))}),nt=()=>{fe(""),f.value="",g=!1},qe=()=>H(this,null,function*(){const re=s==null?void 0:s.model;if(!re||!t.prop)return;const ge=xu(re,t.prop);g=!0,ge.value=Ym(m),yield bi(),nt(),g=!1}),ht=re=>{c.value.includes(re)||c.value.push(re)},ut=re=>{c.value=c.value.filter(ge=>ge!==re)};Ga(()=>t.error,re=>{f.value=re||"",fe(re?"error":"")},{immediate:!0}),Ga(()=>t.validateStatus,re=>fe(re||""));const Ke=lo(Un(Vt({},qc(t)),{$el:h,size:a,validateState:l,labelId:u,inputIds:c,isGroup:F,hasLabel:A,addInputId:ht,removeInputId:ut,resetField:qe,clearValidate:nt,validate:it}));return Ay(Vu,Ke),Xc(()=>{t.prop&&(s==null||s.addField(Ke),m=Ym(W.value))}),Fy(()=>{s==null||s.removeField(Ke)}),e({size:a,validateMessage:f,validateState:l,validate:it,clearValidate:nt,resetField:qe}),(re,ge)=>{var Pe;return fo(),ja("div",{ref_key:"formItemRef",ref:h,class:Zs(je($)),role:je(F)?"group":void 0,"aria-labelledby":je(F)?je(u):void 0},[mn(je(BC),{"is-auto-width":je(y).width==="auto","update-all":((Pe=je(s))==null?void 0:Pe.labelWidth)==="auto"},{default:zn(()=>[je(A)?(fo(),z$(G$(je(L)?"label":"div"),{key:0,id:je(u),for:je(L),class:Zs(je(i).e("label")),style:Im(je(y))},{default:zn(()=>[Pa(re.$slots,"label",{label:je(le)},()=>[Mu(Uu(je(le)),1)])]),_:3},8,["id","for","class","style"])):km("v-if",!0)]),_:3},8,["is-auto-width","update-all"]),qa("div",{class:Zs(je(i).e("content")),style:Im(je(b))},[Pa(re.$slots,"default"),mn(Py,{name:`${je(i).namespace.value}-zoom-in-top`},{default:zn(()=>[je(oe)?Pa(re.$slots,"error",{key:0,error:f.value},()=>[qa("div",{class:Zs(je(C))},Uu(f.value),3)]):km("v-if",!0)]),_:3},8,["name"])],6)],10,VC)}}}));var rx=Oy(UC,[["__file","/home/runner/work/element-plus/element-plus/packages/components/form/src/form-item.vue"]]);const WC=j$(rC,{FormItem:rx}),zC=H$(rx);function GC(n){let e;const t=Fo("loading"),r=At(!1),s=lo(Un(Vt({},n),{originalPosition:"",originalOverflow:"",visible:!1}));function o(h){s.text=h}function a(){const h=s.parent;if(!h.vLoadingAddClassList){let m=h.getAttribute("loading-number");m=Number.parseInt(m)-1,m?h.setAttribute("loading-number",m.toString()):(Ka(h,t.bm("parent","relative")),h.removeAttribute("loading-number")),Ka(h,t.bm("parent","hidden"))}i(),d.unmount()}function i(){var h,m;(m=(h=f.$el)==null?void 0:h.parentNode)==null||m.removeChild(f.$el)}function u(){var h;n.beforeClose&&!n.beforeClose()||(r.value=!0,clearTimeout(e),e=window.setTimeout(c,400),s.visible=!1,(h=n.closed)==null||h.call(n))}function c(){if(!r.value)return;const h=s.parent;r.value=!1,h.vLoadingAddClassList=void 0,a()}const d=q$({name:"ElLoading",setup(){return()=>{const h=s.spinner||s.svg,m=qs("svg",Vt({class:"circular",viewBox:s.svgViewBox?s.svgViewBox:"0 0 50 50"},h?{innerHTML:h}:{}),[qs("circle",{class:"path",cx:"25",cy:"25",r:"20",fill:"none"})]),g=s.text?qs("p",{class:t.b("text")},[s.text]):void 0;return qs(Py,{name:t.b("fade"),onAfterLeave:c},{default:zn(()=>[Ly(mn("div",{style:{backgroundColor:s.background||""},class:[t.b("mask"),s.customClass,s.fullscreen?"is-fullscreen":""]},[qs("div",{class:t.b("spinner")},[m,g])]),[[K$,s.visible]])])})}}}),f=d.mount(document.createElement("div"));return Un(Vt({},qc(s)),{setText:o,removeElLoadingChild:i,close:u,handleAfterLeave:c,vm:f,get $el(){return f.$el}})}let ya;const jC=function(n={}){if(!X$)return;const e=HC(n);if(e.fullscreen&&ya)return ya;const t=GC(Un(Vt({},e),{closed:()=>{var s;(s=e.closed)==null||s.call(e),e.fullscreen&&(ya=void 0)}}));qC(e,e.parent,t),rg(e,e.parent,t),e.parent.vLoadingAddClassList=()=>rg(e,e.parent,t);let r=e.parent.getAttribute("loading-number");return r?r=`${Number.parseInt(r)+1}`:r="1",e.parent.setAttribute("loading-number",r),e.parent.appendChild(t.$el),bi(()=>t.visible.value=e.visible),e.fullscreen&&(ya=t),t},HC=n=>{var e,t,r,s;let o;return co(n.target)?o=(e=document.querySelector(n.target))!=null?e:document.body:o=n.target||document.body,{parent:o===document.body||n.body?document.body:o,background:n.background||"",svg:n.svg||"",svgViewBox:n.svgViewBox||"",spinner:n.spinner||!1,text:n.text||"",fullscreen:o===document.body&&((t=n.fullscreen)!=null?t:!0),lock:(r=n.lock)!=null?r:!1,customClass:n.customClass||"",visible:(s=n.visible)!=null?s:!0,target:o}},qC=(n,e,t)=>H(void 0,null,function*(){const{nextZIndex:r}=Y$(),s={};if(n.fullscreen)t.originalPosition.value=Ks(document.body,"position"),t.originalOverflow.value=Ks(document.body,"overflow"),s.zIndex=r();else if(n.parent===document.body){t.originalPosition.value=Ks(document.body,"position"),yield bi();for(const o of["top","left"]){const a=o==="top"?"scrollTop":"scrollLeft";s[o]=`${n.target.getBoundingClientRect()[o]+document.body[a]+document.documentElement[a]-Number.parseInt(Ks(document.body,`margin-${o}`),10)}px`}for(const o of["height","width"])s[o]=`${n.target.getBoundingClientRect()[o]}px`}else t.originalPosition.value=Ks(e,"position");for(const[o,a]of Object.entries(s))t.$el.style[o]=a}),rg=(n,e,t)=>{const r=Fo("loading");["absolute","fixed","sticky"].includes(t.originalPosition.value)?Ka(e,r.bm("parent","relative")):_m(e,r.bm("parent","relative")),n.fullscreen&&n.lock?_m(e,r.bm("parent","hidden")):Ka(e,r.bm("parent","hidden"))},Zu=Symbol("ElLoading"),sg=(n,e)=>{var t,r,s,o;const a=e.instance,i=f=>By(e.value)?e.value[f]:void 0,u=f=>{const h=co(f)&&(a==null?void 0:a[f])||f;return h&&At(h)},c=f=>u(i(f)||n.getAttribute(`element-loading-${Z$(f)}`)),l=(t=i("fullscreen"))!=null?t:e.modifiers.fullscreen,d={text:c("text"),svg:c("svg"),svgViewBox:c("svgViewBox"),spinner:c("spinner"),background:c("background"),customClass:c("customClass"),fullscreen:l,target:(r=i("target"))!=null?r:l?void 0:n,body:(s=i("body"))!=null?s:e.modifiers.body,lock:(o=i("lock"))!=null?o:e.modifiers.lock};n[Zu]={options:d,instance:jC(d)}},KC=(n,e)=>{for(const t of Object.keys(e))Q$(e[t])&&(e[t].value=n[t])},XC={mounted(n,e){e.value&&sg(n,e)},updated(n,e){const t=n[Zu];e.oldValue!==e.value&&(e.value&&!e.oldValue?sg(n,e):e.value&&e.oldValue?By(e.value)&&KC(e.value,t.options):t==null||t.instance.close())},unmounted(n){var e;(e=n[Zu])==null||e.instance.close()}};const YC="/video/dance.mp4";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QC=1e-7,ZC=1e-4;class sx{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class rl{refCount(e){return It("refCount")}incRef(e){return It("incRef")}timerAvailable(){return!0}time(e){return It("time")}read(e){return It("read")}readSync(e){return It("readSync")}readToGPU(e,t){return It("readToGPU")}numDataIds(){return It("numDataIds")}disposeData(e,t){return It("disposeData")}write(e,t,r){return It("write")}move(e,t,r,s,o){return It("move")}createTensorFromGPUData(e,t,r){return It("createTensorFromGPUData")}memory(){return It("memory")}floatPrecision(){return It("floatPrecision")}epsilon(){return this.floatPrecision()===32?QC:ZC}dispose(){return It("dispose")}}function It(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ox(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Gn(n,e,t)}function JC(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,r=0;for(;t>0;)r=Math.random()*t|0,t--,Gn(n,t,r),Gn(e,t,r)}function ho(n,e,t){return Math.max(n,Math.min(e,t))}function wi(n){return n%2===0?n:n+1}function Gn(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function ax(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function eN(n,e){const t=Math.random();return e*t+(1-t)*n}function tN(n,e){let t=0;for(let r=0;r<n.length;r++){const s=Number(n[r])-Number(e[r]);t+=s*s}return t}function E(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function ft(n,e,t=""){E(Me(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Hr(n){E(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function q(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function nN(n){return n.length===0}function Me(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Fr(n){return n%1===0}function rN(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function Xa(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function sN(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return ox(e),e}function Rr(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Ju(n,e=s=>0,t,r){return new Promise((s,o)=>{let a=0;const i=()=>{if(n()){s();return}a++;const u=e(a);if(t!=null&&a>=t){o();return}r!=null?r(i,u):setTimeout(i,u)};i()})}function ix(n,e){let t=1,r=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function He(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),E(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),E(n.every(r=>Fr(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function Qn(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:He(e,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(t.push(n[i]),r.push(i)),o[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),r.push(i))}return{newShape:t,keptDims:r}}function On(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${n}`);return t}function ot(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function ux(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function cx(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function lx(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function mo(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function dx(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Hn(n){return typeof n=="string"||n instanceof String}function fx(n){return typeof n=="boolean"}function px(n){return typeof n=="number"}function Lo(n){return Array.isArray(n)?Lo(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":px(n)?"float32":Hn(n)?"string":fx(n)?"bool":"float32"}function ir(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Ya(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Je(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function hx(n,e,t,r=!1){const s=new Array;if(e.length===1){const o=e[0]*(r?2:1);for(let a=0;a<o;a++)s[a]=t[n+a]}else{const o=e[0],a=e.slice(1),i=a.reduce((u,c)=>u*c)*(r?2:1);for(let u=0;u<o;u++)s[u]=hx(n+u*i,a,t,r)}return s}function Ar(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,o)=>s*o)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return hx(0,n,e,t)}function oN(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function sl(n,e){const t=Xn(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function Xn(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function aN(n,e){const t=n.reduce((r,s)=>r*s,1);if(e==null||e==="float32")return Ar(n,new Float32Array(t));if(e==="int32")return Ar(n,new Int32Array(t));if(e==="bool")return Ar(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Pt(n){n.forEach(e=>{E(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Qa(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function $i(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function ur(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const og="tfjsflags";class mx{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=iN,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}getAsync(e){return H(this,null,function*(){return e in this.flags?this.flags[e]:(this.flags[e]=yield this.evaluateFlag(e),this.flags[e])})}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ur(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;const e=this.getQueryParams(this.global.location.search);og in e&&e[og].split(",").forEach(r=>{const[s,o]=r.split(":");this.urlFlags[s]=cN(s,o)})}}function iN(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(uN(e,r[0],r[1]),r.join("="))),e}function uN(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function cN(n,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${n}.`)}function B(){return ol}let ol=null;function lN(n){ol=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wu;function gx(){if(wu==null){let n;if(typeof window!="undefined")n=window;else if(typeof global!="undefined")n=global;else if(typeof process!="undefined")n=process;else if(typeof self!="undefined")n=self;else throw new Error("Could not find a global object");wu=n}return wu}function dN(){const n=gx();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function al(n,e){const t=dN();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const il="Abs",ul="Acos",cl="Acosh",Si="Add",ll="AddN",dl="All",fl="Any",pl="ArgMax",hl="ArgMin",ml="Asin",gl="Asinh",yl="Atan",xl="Atanh",bl="Atan2",vl="AvgPool",yx="AvgPoolGrad",wl="AvgPool3D",xx="AvgPool3DGrad",$l="BatchMatMul",Sl="BatchToSpaceND",Tl="Bincount",fN="BroadcastTo",Cl="BroadcastArgs",Ti="Cast",Nl="Ceil",El="ClipByValue",Il="Complex",kl="ComplexAbs",_l="Concat",Rl="Conv2D",Al="Conv2DBackpropFilter",Ol="Conv2DBackpropInput",Dl="Conv3D",bx="Conv3DBackpropFilterV2",Fl="Conv3DBackpropInputV2",Pl="Cos",Ll="Cosh",Bl="Cumprod",Vl="Cumsum",Ml="CropAndResize",Ul="DenseBincount",Wl="DepthToSpace",zl="DepthwiseConv2dNative",Gl="DepthwiseConv2dNativeBackpropFilter",jl="DepthwiseConv2dNativeBackpropInput",Hl="Diag",ql="Dilation2D",pN="Dilation2DBackpropInput",hN="Dilation2DBackpropFilter",Kl="RealDiv",Xl="Einsum",Yl="Elu",vx="EluGrad",Ql="Erf",Zl="Equal",Jl="Exp",ed="ExpandDims",td="Expm1",nd="FFT",rd="Fill",sd="FlipLeftRight",od="Floor",ad="FloorDiv",id="FusedBatchNorm",ud="GatherV2",cd="GatherNd",ld="Greater",dd="GreaterEqual",Ci="Identity",fd="IFFT",pd="Imag",hd="IsFinite",md="IsInf",gd="IsNan",yd="LeakyRelu",xd="Less",bd="LessEqual",vd="LinSpace",wd="Log",$d="Log1p",Sd="LogicalAnd",Td="LogicalNot",Cd="LogicalOr",mN="LogicalXor",gN="LogSoftmax",yN="LowerBound",Nd="LRN",wx="LRNGrad",Ed="Max",Id="Maximum",kd="MaxPool",$x="MaxPoolGrad",_d="MaxPool3D",Sx="MaxPool3DGrad",Rd="MaxPoolWithArgmax",Ad="Mean",Od="Min",Dd="Minimum",Fd="MirrorPad",Pd="Mod",Ld="Multinomial",Bd="Multiply",Vd="Neg",Md="NotEqual",Ud="NonMaxSuppressionV3",Wd="NonMaxSuppressionV4",zd="NonMaxSuppressionV5",Gd="OnesLike",jd="OneHot",Hd="Pack",qd="PadV2",xN="Pool",Kd="Pow",Xd="Prelu",Yd="Prod",Qd="RaggedGather",Zd="RaggedRange",Jd="RaggedTensorToTensor",ef="Range",tf="Real",nf="Reciprocal",rf="Relu",sf="Reshape",of="ResizeNearestNeighbor",Tx="ResizeNearestNeighborGrad",af="ResizeBilinear",Cx="ResizeBilinearGrad",uf="Relu6",cf="Reverse",lf="Round",df="Rsqrt",ff="ScatterNd",pf="SearchSorted",hf="Select",mf="Selu",gf="Slice",yf="Sin",xf="Sinh",bf="Sign",vf="Sigmoid",wf="Softplus",$f="Sqrt",Sf="Sum",Tf="SpaceToBatchND",Cf="SplitV",Nf="Softmax",Ef="SparseFillEmptyRows",If="SparseReshape",kf="SparseSegmentMean",_f="SparseSegmentSum",Rf="SparseToDense",Af="SquaredDifference",Nx="Square",Of="StridedSlice",Df="StringNGrams",Ff="StringSplit",Pf="StringToHashBucketFast",Lf="Sub",Bf="Tan",Vf="Tanh",Ni="Tile",Mf="TopK",Uf="Transform",uo="Transpose",Wf="Unique",zf="Unpack",Gf="UnsortedSegmentSum",bN="UpperBound",jf="ZerosLike",Hf="Step",Za="FromPixels",qf="RotateWithOffset",Ja="_FusedMatMul",ei="FusedConv2D",ti="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qt(...n){B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(...n)}function vN(...n){B().getBool("IS_TEST")||B().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hs=al("kernelRegistry",()=>new Map),go=al("gradRegistry",()=>new Map);function ni(n,e){const t=Xf(n,e);return hs.get(t)}function ec(n){return go.get(n)}function ri(n){const e=hs.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===n&&t.push(a)}return t}function Kf(n){const{kernelName:e,backendName:t}=n,r=Xf(e,t);hs.has(r)&&Qt(`The kernel '${e}' for backend '${t}' is already registered`),hs.set(r,n)}function wN(n){const{kernelName:e}=n;go.has(e)&&B().getBool("DEBUG")&&Qt(`Overriding the gradient for '${e}'`),go.set(e,n)}function $N(n,e){const t=Xf(n,e);if(!hs.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);hs.delete(t)}function SN(n){if(!go.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);go.delete(n)}function TN(n,e){ri(n).forEach(r=>{const s=Object.assign({},r,{backendName:e});Kf(s)})}function Xf(n,e){return`${e}_${n}`}var tc=De,Zt=null;try{Zt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(n){}function De(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}De.prototype.__isLong__;Object.defineProperty(De.prototype,"__isLong__",{value:!0});function Lt(n){return(n&&n.__isLong__)===!0}De.isLong=Lt;var ag={},ig={};function qr(n,e){var t,r,s;return e?(n>>>=0,(s=0<=n&&n<256)&&(r=ig[n],r)?r:(t=Fe(n,(n|0)<0?-1:0,!0),s&&(ig[n]=t),t)):(n|=0,(s=-128<=n&&n<128)&&(r=ag[n],r)?r:(t=Fe(n,n<0?-1:0,!1),s&&(ag[n]=t),t))}De.fromInt=qr;function Jt(n,e){if(isNaN(n))return e?kr:en;if(e){if(n<0)return kr;if(n>=Ex)return _x}else{if(n<=-cg)return Ot;if(n+1>=cg)return kx}return n<0?Jt(-n,e).neg():Fe(n%ms|0,n/ms|0,e)}De.fromNumber=Jt;function Fe(n,e,t){return new De(n,e,t)}De.fromBits=Fe;var si=Math.pow;function Yf(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return en;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var r;if((r=n.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return Yf(n.substring(1),e,t).neg();for(var s=Jt(si(t,8)),o=en,a=0;a<n.length;a+=8){var i=Math.min(8,n.length-a),u=parseInt(n.substring(a,a+i),t);if(i<8){var c=Jt(si(t,i));o=o.mul(c).add(Jt(u))}else o=o.mul(s),o=o.add(Jt(u))}return o.unsigned=e,o}De.fromString=Yf;function wn(n,e){return typeof n=="number"?Jt(n,e):typeof n=="string"?Yf(n,e):Fe(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}De.fromValue=wn;var ug=1<<16,CN=1<<24,ms=ug*ug,Ex=ms*ms,cg=Ex/2,lg=qr(CN),en=qr(0);De.ZERO=en;var kr=qr(0,!0);De.UZERO=kr;var us=qr(1);De.ONE=us;var Ix=qr(1,!0);De.UONE=Ix;var nc=qr(-1);De.NEG_ONE=nc;var kx=Fe(-1,2147483647,!1);De.MAX_VALUE=kx;var _x=Fe(-1,-1,!0);De.MAX_UNSIGNED_VALUE=_x;var Ot=Fe(0,-2147483648,!1);De.MIN_VALUE=Ot;var Q=De.prototype;Q.toInt=function(){return this.unsigned?this.low>>>0:this.low};Q.toNumber=function(){return this.unsigned?(this.high>>>0)*ms+(this.low>>>0):this.high*ms+(this.low>>>0)};Q.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Ot)){var t=Jt(e),r=this.div(t),s=r.mul(t).sub(this);return r.toString(e)+s.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=Jt(si(e,6),this.unsigned),a=this,i="";;){var u=a.div(o),c=a.sub(u.mul(o)).toInt()>>>0,l=c.toString(e);if(a=u,a.isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}};Q.getHighBits=function(){return this.high};Q.getHighBitsUnsigned=function(){return this.high>>>0};Q.getLowBits=function(){return this.low};Q.getLowBitsUnsigned=function(){return this.low>>>0};Q.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ot)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};Q.isZero=function(){return this.high===0&&this.low===0};Q.eqz=Q.isZero;Q.isNegative=function(){return!this.unsigned&&this.high<0};Q.isPositive=function(){return this.unsigned||this.high>=0};Q.isOdd=function(){return(this.low&1)===1};Q.isEven=function(){return(this.low&1)===0};Q.equals=function(e){return Lt(e)||(e=wn(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Q.eq=Q.equals;Q.notEquals=function(e){return!this.eq(e)};Q.neq=Q.notEquals;Q.ne=Q.notEquals;Q.lessThan=function(e){return this.comp(e)<0};Q.lt=Q.lessThan;Q.lessThanOrEqual=function(e){return this.comp(e)<=0};Q.lte=Q.lessThanOrEqual;Q.le=Q.lessThanOrEqual;Q.greaterThan=function(e){return this.comp(e)>0};Q.gt=Q.greaterThan;Q.greaterThanOrEqual=function(e){return this.comp(e)>=0};Q.gte=Q.greaterThanOrEqual;Q.ge=Q.greaterThanOrEqual;Q.compare=function(e){if(Lt(e)||(e=wn(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Q.comp=Q.compare;Q.negate=function(){return!this.unsigned&&this.eq(Ot)?Ot:this.not().add(us)};Q.neg=Q.negate;Q.add=function(e){Lt(e)||(e=wn(e));var t=this.high>>>16,r=this.high&65535,s=this.low>>>16,o=this.low&65535,a=e.high>>>16,i=e.high&65535,u=e.low>>>16,c=e.low&65535,l=0,d=0,f=0,h=0;return h+=o+c,f+=h>>>16,h&=65535,f+=s+u,d+=f>>>16,f&=65535,d+=r+i,l+=d>>>16,d&=65535,l+=t+a,l&=65535,Fe(f<<16|h,l<<16|d,this.unsigned)};Q.subtract=function(e){return Lt(e)||(e=wn(e)),this.add(e.neg())};Q.sub=Q.subtract;Q.multiply=function(e){if(this.isZero())return en;if(Lt(e)||(e=wn(e)),Zt){var t=Zt.mul(this.low,this.high,e.low,e.high);return Fe(t,Zt.get_high(),this.unsigned)}if(e.isZero())return en;if(this.eq(Ot))return e.isOdd()?Ot:en;if(e.eq(Ot))return this.isOdd()?Ot:en;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(lg)&&e.lt(lg))return Jt(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=this.high&65535,o=this.low>>>16,a=this.low&65535,i=e.high>>>16,u=e.high&65535,c=e.low>>>16,l=e.low&65535,d=0,f=0,h=0,m=0;return m+=a*l,h+=m>>>16,m&=65535,h+=o*l,f+=h>>>16,h&=65535,h+=a*c,f+=h>>>16,h&=65535,f+=s*l,d+=f>>>16,f&=65535,f+=o*c,d+=f>>>16,f&=65535,f+=a*u,d+=f>>>16,f&=65535,d+=r*l+s*c+o*u+a*i,d&=65535,Fe(h<<16|m,d<<16|f,this.unsigned)};Q.mul=Q.multiply;Q.divide=function(e){if(Lt(e)||(e=wn(e)),e.isZero())throw Error("division by zero");if(Zt){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Zt.div_u:Zt.div_s)(this.low,this.high,e.low,e.high);return Fe(t,Zt.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?kr:en;var r,s,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return kr;if(e.gt(this.shru(1)))return Ix;o=kr}else{if(this.eq(Ot)){if(e.eq(us)||e.eq(nc))return Ot;if(e.eq(Ot))return us;var a=this.shr(1);return r=a.div(e).shl(1),r.eq(en)?e.isNegative()?us:nc:(s=this.sub(e.mul(r)),o=r.add(s.div(e)),o)}else if(e.eq(Ot))return this.unsigned?kr:en;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=en}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(r)/Math.LN2),u=i<=48?1:si(2,i-48),c=Jt(r),l=c.mul(e);l.isNegative()||l.gt(s);)r-=u,c=Jt(r,this.unsigned),l=c.mul(e);c.isZero()&&(c=us),o=o.add(c),s=s.sub(l)}return o};Q.div=Q.divide;Q.modulo=function(e){if(Lt(e)||(e=wn(e)),Zt){var t=(this.unsigned?Zt.rem_u:Zt.rem_s)(this.low,this.high,e.low,e.high);return Fe(t,Zt.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Q.mod=Q.modulo;Q.rem=Q.modulo;Q.not=function(){return Fe(~this.low,~this.high,this.unsigned)};Q.and=function(e){return Lt(e)||(e=wn(e)),Fe(this.low&e.low,this.high&e.high,this.unsigned)};Q.or=function(e){return Lt(e)||(e=wn(e)),Fe(this.low|e.low,this.high|e.high,this.unsigned)};Q.xor=function(e){return Lt(e)||(e=wn(e)),Fe(this.low^e.low,this.high^e.high,this.unsigned)};Q.shiftLeft=function(e){return Lt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Fe(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Fe(0,this.low<<e-32,this.unsigned)};Q.shl=Q.shiftLeft;Q.shiftRight=function(e){return Lt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Fe(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Fe(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Q.shr=Q.shiftRight;Q.shiftRightUnsigned=function(e){if(Lt(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var r=this.low;return Fe(r>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Fe(t,0,this.unsigned):Fe(t>>>e-32,0,this.unsigned)};Q.shru=Q.shiftRightUnsigned;Q.shr_u=Q.shiftRightUnsigned;Q.toSigned=function(){return this.unsigned?Fe(this.low,this.high,!1):this};Q.toUnsigned=function(){return this.unsigned?this:Fe(this.low,this.high,!0)};Q.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Q.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Q.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};De.fromBytes=function(e,t,r){return r?De.fromBytesLE(e,t):De.fromBytesBE(e,t)};De.fromBytesLE=function(e,t){return new De(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};De.fromBytesBE=function(e,t){return new De(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const NN=a2({__proto__:null,default:tc},[tc]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr=tc||NN;function Bo(n){return Nr.fromString(n,!0,16)}const Rx=Bo("c3a5c85c97cb3127"),Cr=Bo("b492b66fbe98f273"),yt=Bo("9ae16a3b2f90404f");function rc(n){return n.xor(n.shru(47))}function Ax(n,e,t){const r=n.slice(e,e+t);return Nr.fromBytes(Array.from(r),!0,!0)}function ke(n,e){return Ax(n,e,8)}function dg(n,e){return Ax(n,e,4)}function Ze(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function ar(n,e,t=Bo("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function EN(n,e,t,r,s,o){s=s.add(n),o=Ze(o.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(t),o=o.add(Ze(s,44)),[s.add(r),o.add(a)]}function xa(n,e,t,r){return EN(ke(n,e),ke(n,e+8),ke(n,e+16),ke(n,e+24),t,r)}function IN(n,e=n.length){if(e>=8){const t=yt.add(e*2),r=ke(n,0).add(yt),s=ke(n,e-8),o=Ze(s,37).mul(t).add(r),a=Ze(r,25).add(s).mul(t);return ar(o,a,t)}if(e>=4){const t=yt.add(e*2),r=dg(n,0);return ar(r.shl(3).add(e),dg(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],o=t+(r<<8),a=e+(s<<2);return rc(yt.mul(o).xor(Rx.mul(a))).mul(yt)}return yt}function kN(n,e=n.length){const t=yt.add(e*2),r=ke(n,0).mul(Cr),s=ke(n,8),o=ke(n,e-8).mul(t),a=ke(n,e-16).mul(yt);return ar(Ze(r.add(s),43).add(Ze(o,30)).add(a),r.add(Ze(s.add(yt),18)).add(o),t)}function _N(n,e=n.length){const t=yt.add(e*2),r=ke(n,0).mul(yt),s=ke(n,8),o=ke(n,e-8).mul(t),a=ke(n,e-16).mul(yt),i=Ze(r.add(s),43).add(Ze(o,30)).add(a),u=ar(i,r.add(Ze(s.add(yt),18)).add(o),t),c=ke(n,16).mul(t),l=ke(n,24),d=i.add(ke(n,e-32)).mul(t),f=u.add(ke(n,e-24)).mul(t);return ar(Ze(c.add(l),43).add(Ze(d,30)).add(f),c.add(Ze(l.add(r),18)).add(d),t)}function Ox(n,e=n.length){const t=Nr.fromNumber(81,!0);if(e<=32)return e<=16?IN(n,e):kN(n,e);if(e<=64)return _N(n,e);let r=t,s=t.mul(Cr).add(113),o=rc(s.mul(yt).add(113)).mul(yt),a=[Nr.UZERO,Nr.UZERO],i=[Nr.UZERO,Nr.UZERO];r=r.mul(yt).add(ke(n,0));let u=0;const c=(e-1>>6)*64,l=c+(e-1&63)-63;do r=Ze(r.add(s).add(a[0]).add(ke(n,u+8)),37).mul(Cr),s=Ze(s.add(a[1]).add(ke(n,u+48)),42).mul(Cr),r=r.xor(i[1]),s=s.add(a[0]).add(ke(n,u+40)),o=Ze(o.add(i[0]),33).mul(Cr),a=xa(n,u,a[1].mul(Cr),r.add(i[0])),i=xa(n,u+32,o.add(i[1]),s.add(ke(n,u+16))),[o,r]=[r,o],u+=64;while(u!==c);const d=Cr.add(o.and(255).shl(1));return u=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=Ze(r.add(s).add(a[0]).add(ke(n,u+8)),37).mul(d),s=Ze(s.add(a[1]).add(ke(n,u+48)),42).mul(d),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(ke(n,u+40))),o=Ze(o.add(i[0]),33).mul(d),a=xa(n,u,a[1].mul(d),r.add(i[0])),i=xa(n,u+32,o.add(i[1]),s.add(ke(n,u+16))),[o,r]=[r,o],ar(ar(a[0],i[0],d).add(rc(s).mul(Rx)).add(o),ar(a[1],i[1],d).add(r),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kr(n,e){return e==="string"?qn(n):Vo([n],e)}function RN(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Vo(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Dn(n)),B().getBool("DEBUG")&&ux(n,e),RN(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Yt(){return B().platform.now()}function AN(n,e){return B().platform.fetch(n,e)}function qn(n,e="utf-8"){return e=e||"utf-8",B().platform.encode(n,e)}function Pr(n,e="utf-8"){return e=e||"utf-8",B().platform.decode(n,e)}function rt(n){return B().platform.isTypedArray(n)}function Dn(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||ur(n)||n==null||rt(n)&&t)e.push(n);else if(Array.isArray(n)||rt(n))for(let r=0;r<n.length;++r)Dn(n[r],e,t);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)Dn(n[s],e,t)}return e}const ON=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:Me,assert:E,assertNonNegativeIntegerDimensions:Pt,assertNonNull:Hr,assertShapesMatch:ft,bytesFromStringArray:dx,bytesPerElement:mo,checkConversionForErrors:ux,clamp:ho,computeStrides:Je,convertBackendValuesAndArrayBuffer:oN,createScalarValue:Kr,createShuffledIndices:sN,decodeString:Pr,distSquared:tN,encodeString:qn,fetch:AN,fingerPrint64:Ox,flatten:Dn,getArrayFromDType:ot,getTypedArrayFromDType:On,hasEncodingLoss:lx,hexToLong:Bo,indexToLoc:$i,inferDtype:Lo,inferFromImplicitShape:ix,isBoolean:fx,isFunction:ir,isInt:Fr,isNumber:px,isPromise:ur,isScalarShape:nN,isString:Hn,isTypedArray:rt,isValidDtype:cx,locToIndex:Qa,makeOnesTypedArray:sl,makeZerosNestedTypedArray:aN,makeZerosTypedArray:Xn,nearestDivisor:Ya,nearestLargerEven:wi,now:Yt,parseAxisParam:He,randUniform:eN,repeatedTry:Ju,rightPad:Rr,shuffle:ox,shuffleCombo:JC,sizeFromShape:q,sizeToSquarishShape:Xa,squeezeShape:Qn,sum:ax,swap:Gn,tanh:rN,toNestedArray:Ar,toTypedArray:Vo},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DN{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new PN)}profileKernel(e,t,r){let s;const o=()=>{s=r()};let a;const i=Yt();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const c of s)c.dataSync();a=Promise.resolve({kernelMs:Yt()-i})}if(B().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<s.length;c++){const l=s[c];l.data().then(d=>{FN(d,l.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:o,extraInfo:a}=e;r.forEach(i=>{Promise.all([i.data(),s,a]).then(u=>{this.logger.logKernelProfile(t,i,u[0],u[1],o,u[2])})})}}function FN(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class PN{logKernelProfile(e,t,r,s,o,a){const i=typeof s=="number"?Rr(`${s}ms`,9):s.error,u=Rr(e,25),c=t.rank,l=t.size,d=Rr(t.shape.toString(),14);let f="";for(const h in o){const m=o[h];if(m!=null){const g=m.shape||t.shape,y=g.length;f+=`${h}: ${y}D ${y>0?g:""} `}}console.log(`%c${u}	%c${i}	%c${c}D ${d}	%c${l}	%c${f}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(n,e,t){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<n.length;u++){const c=n[u],l=c.inputs;for(const d in l){const f=l[d];let h=!1;for(let m=0;m<e.length;m++)if(r[f.id]){c.outputs.forEach(g=>r[g.id]=!0),h=!0,s[c.id]=!0;break}if(h)break}}const o={};o[t.id]=!0;const a={};for(let u=n.length-1;u>=0;u--){const c=n[u],l=c.inputs;for(let d=0;d<c.outputs.length;d++)if(o[c.outputs[d].id]){for(const f in l)o[l[f].id]=!0,a[c.id]=!0;break}}const i=[];for(let u=0;u<n.length;u++){const c=n[u];if(s[c.id]&&a[c.id]){const l={};for(const f in c.inputs){const h=c.inputs[f];r[h.id]&&(l[f]=h)}const d=Object.assign({},c);d.inputs=l,d.outputs=c.outputs,i.push(d)}}return i}function BN(n,e,t,r){for(let s=e.length-1;s>=0;s--){const o=e[s],a=[];if(o.outputs.forEach(u=>{const c=n[u.id];c!=null?a.push(c):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const u in o.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);const c=t(()=>i[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const l=o.inputs[u];if(!Me(c.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=c;else{const d=n[l.id];n[l.id]=r(d,c),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fg=20,Xs=3,$u=7;function VN(n,e,t,r){const s=Je(e),o=MN(n,e,t,s),a=e.length,i=Va(n,e,t,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(c=>"    "+c).join(`
`)),u.join(`
`)}function MN(n,e,t,r){const s=q(e),o=r[r.length-1],a=new Array(o).fill(0),i=e.length,u=t==="complex64"?to(n):n;if(i>1)for(let c=0;c<s/o;c++){const l=c*o;for(let d=0;d<o;d++)a[d]=Math.max(a[d],eo(u[l+d],0,t).length)}return a}function eo(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed($u))} + ${parseFloat(n[1].toFixed($u))}j`:Hn(n)?r=`'${n}'`:t==="bool"?r=Dx(n):r=parseFloat(n.toFixed($u)).toString(),Rr(r,e)}function Dx(n){return n===0?"false":"true"}function Va(n,e,t,r,s,o=!0){const a=t==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(t==="complex64"){const g=to(n);return[eo(g[0],0,t)]}return t==="bool"?[Dx(n[0])]:[n[0].toString()]}if(u===1){if(i>fg){const y=Xs*a;let b=Array.from(n.slice(0,y)),$=Array.from(n.slice((i-Xs)*a,i*a));return t==="complex64"&&(b=to(b),$=to($)),["["+b.map((S,C)=>eo(S,s[C],t)).join(", ")+", ..., "+$.map((S,C)=>eo(S,s[i-Xs+C],t)).join(", ")+"]"]}return["["+(t==="complex64"?to(n):Array.from(n)).map((y,b)=>eo(y,s[b],t)).join(", ")+"]"]}const c=e.slice(1),l=r.slice(1),d=r[0]*a,f=[];if(i>fg){for(let g=0;g<Xs;g++){const y=g*d,b=y+d;f.push(...Va(n.slice(y,b),c,t,l,s,!1))}f.push("...");for(let g=i-Xs;g<i;g++){const y=g*d,b=y+d;f.push(...Va(n.slice(y,b),c,t,l,s,g===i-1))}}else for(let g=0;g<i;g++){const y=g*d,b=y+d;f.push(...Va(n.slice(y,b),c,t,l,s,g===i-1))}const h=u===2?",":"";f[0]="["+(i>0?f[0]+h:"");for(let g=1;g<f.length-1;g++)f[g]=" "+f[g]+h;let m=`,
`;for(let g=2;g<u;g++)m+=`
`;return f[f.length-1]=" "+f[f.length-1]+"]"+(o?"":m),f}function to(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gs{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=q(e),r!=null){const s=r.length;E(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||ot(t,this.size),this.strides=Je(e)}set(e,...t){t.length===0&&(t=[0]),E(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return gn().makeTensor(this.values,this.shape,this.dtype)}}let gn=null,as=null;function UN(n){gn=n}function WN(n){as=n}class Te{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=q(e),this.strides=Je(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return H(this,null,function*(){const e=yield this.data();return as.buffer(this.shape,this.dtype,e)})}bufferSync(){return as.buffer(this.shape,this.dtype,this.dataSync())}array(){return H(this,null,function*(){const e=yield this.data();return Ar(this.shape,e,this.dtype==="complex64")})}arraySync(){return Ar(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return H(this,null,function*(){this.throwIfDisposed();const e=gn().read(this.dataId);if(this.dtype==="string"){const t=yield e;try{return t.map(r=>Pr(r))}catch(r){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e})}dataToGPU(e){return this.throwIfDisposed(),gn().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=gn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Pr(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}bytes(){return H(this,null,function*(){this.throwIfDisposed();const e=yield gn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)})}dispose(){this.isDisposed||(gn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return as.print(this,e)}clone(){return this.throwIfDisposed(),as.clone(this)}toString(e=!1){const t=this.dataSync();return VN(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),as.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),gn().makeVariable(this,e,t,r)}}Object.defineProperty(Te,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function zN(){return al("Tensor",()=>Te)}zN();class yo extends Te{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Me(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);gn().disposeTensor(this),this.dataId=e.dataId,gn().incRef(this,null)}dispose(){gn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(yo,Symbol.hasInstance,{value:n=>n instanceof Te&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var sc;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(sc||(sc={}));var oc;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(oc||(oc={}));var ac;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(ac||(ac={}));var ic;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(ic||(ic={}));var uc;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(uc||(uc={}));const GN={float32:ic,int32:oc,bool:ac,complex64:uc};function bn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return GN[n][e]}function Ei(n){return bn(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ze(n,e){if(n.dtype===e.dtype)return[n,e];const t=bn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function Fx(n,e){E(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function jN(n,e){return e.some(t=>t.id===n.id)}function Qf(n){const e=[];return Px(n,e,new Set),e}function Px(n,e,t){if(n==null)return;if(n instanceof Te){e.push(n);return}if(!HN(n))return;const r=n;for(const s in r){const o=r[s];t.has(o)||(t.add(o),Px(o,e,t))}}function HN(n){return Array.isArray(n)||typeof n=="object"}const qN=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:Fx,getTensorsInContainer:Qf,isTensorInList:jN,makeTypesMatch:ze},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Su(n){return n.kernelName!=null}class pg{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ys{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new pg}ready(){return H(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(yield this.initializeBackend(r).success){yield this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(Qt(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}setBackend(e){return H(this,null,function*(){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?yield t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new DN(this.backendInstance),!0})}setupRegisteredKernels(){ri(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ri(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof rl)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,o=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Qt(`Initialization of backend ${e} failed`),Qt(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Qt(`Initialization of backend ${e} failed`),Qt(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:o}=this.initializeBackend(r);if(o||s)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,o=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,o,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return ys.nextTensorId++}nextVariableId(){return ys.nextVariableId++}clone(e){const t=D.runKernel(Ci,{x:e}),r={x:e},s=a=>({x:()=>{const i="float32",u={x:a},c={dtype:i};return D.runKernel(Ti,u,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,o,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,!(ni(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let o=0;r.forEach(u=>{o+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u;const c=Su(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Su(e)){const{kernelName:m,inputs:g,attrs:y}=e;this.backendName==null&&this.backend;const b=ni(m,this.backendName);E(b!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),i=()=>{const $=this.backend.numDataIds();u=b.kernelFunc({inputs:g,attrs:y,backend:this.backend});const S=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,$,S);const C=S.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(s){const I=this.getTensorsForGradient(m,g,C);r=this.saveTensorsForBackwardMode(I)}return C}}else{const{forwardFunc:m}=e,g=y=>{s&&(r=y.map(b=>this.keep(this.clone(b))))};i=()=>{const y=this.backend.numDataIds();u=this.tidy(()=>m(this.backend,g));const b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b),b}}const{inputs:l,attrs:d}=e,f=Su(e)?null:e.backwardsFunc;let h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(h=this.profiler.profileKernel(c,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs)}),s&&this.addTapeNode(c,l,t,f,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(m=>l[m]!=null?l[m].shape:null),outputShapes:t.map(m=>m.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,t,r){const s=ec(e);if(s!=null){const o=s.inputsToSave||[],a=s.outputsToSave||[];let i;s.saveAllInputs?(E(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(c=>t[c])):i=o.map(c=>t[c]);const u=r.filter((c,l)=>a[l]);return i.concat(u)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let o=e;r==="string"&&Hn(e[0])&&(o=e.map(u=>qn(u)));const a=s.write(o,t,r),i=new Te(t,r,a,this.nextTensorId());if(this.trackTensor(i,s),r==="string"){const u=this.state.tensorInfo.get(a),c=dx(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return i}makeTensorFromDataId(e,t,r,s){r=r||"float32";const o={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(o,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:o}=e,a=new Te(s,o,r,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const o=new yo(e,t,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*mo(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof yo||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*mo(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){return H(this,null,function*(){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=yield s.kernelTimeMs,s.extraInfo=yield s.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:o},u=ec(e);u!=null&&(s=u.gradFunc),s!=null&&(i.gradient=c=>(c=c.map((l,d)=>{if(l==null){const f=r[d],h=Xn(f.size,f.dtype);return this.makeTensor(h,f.shape,f.dtype)}return l}),s(c.length>1?c:c[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Qf(e),r=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===s.id&&this.track(o)})}gradients(e,t,r,s=!1){if(E(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));E(o instanceof Te,()=>"The result y returned by f() must be a tensor.");const a=LN(this.state.activeTape,t,o);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=r==null?KN(o.shape):r,BN(i,a,c=>this.tidy(c),XN);const u=t.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return E(ir(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{E(t.every(i=>i instanceof Te),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((i,u)=>{s[u]=i});const o=(i,u)=>(r=e(...t,u),E(r.value instanceof Te,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),E(ir(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(i,u)=>{const c=r.gradFunc(i,u),l=Array.isArray(c)?c:[c];E(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),E(l.every(f=>f instanceof Te),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return l.forEach((f,h)=>{d[h]=()=>f}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}time(e){return H(this,null,function*(){const t=Yt(),r=yield this.backend.time(e);return r.wallMs=Yt()-t,r})}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new pg;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}ys.nextTensorId=0;ys.nextVariableId=0;function KN(n){const e=sl(q(n),"float32");return D.makeTensor(e,n,"float32")}function Lx(){const n=gx();if(n._tfengine==null){const e=new mx(n);n._tfengine=new ys(e)}return lN(n._tfengine.ENV),UN(()=>n._tfengine),n._tfengine}const D=Lx();function XN(n,e){const t={a:n,b:e};return D.runKernel(Si,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(){return typeof navigator!="undefined"&&navigator!=null}let cc;function QN(n){cc=n}function Zf(n){if(cc!==void 0)return cc;if(n||YN()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window!="undefined"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Jf(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}const ZN=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:Jf,isMobile:Zf,mockIsMobile:QN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wt=B();Wt.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Wt.registerFlag("IS_BROWSER",()=>Jf());Wt.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Wt.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Wt.registerFlag("PROD",()=>!1);Wt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Wt.getBool("DEBUG"));Wt.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Wt.registerFlag("IS_TEST",()=>!1);Wt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Wt.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Wt.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Wt.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fn(n,e){let t=n;if(rt(n))return e==="string"?[]:[n.length];if(typeof n=="object"){if("texture"in n){const o=n.channels||"RGBA";return[n.height,n.width*o.length]}else if("buffer"in n&&!(n.buffer instanceof ArrayBuffer))return[n.buffer.size/(e==null?4:mo(e))]}if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||rt(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&B().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Bx(n,s,[]),s}function Bx(n,e,t){if(t=t||[],!Array.isArray(n)&&!rt(n)){E(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}E(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),E(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)Bx(n[s],r,t.concat(s))}function hg(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function N(n,e,t,r="numeric"){if(n instanceof Te)return hg(r,n.dtype,e,t),n;let s=Lo(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),hg(r,s,e,t),n==null||!rt(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}const o=Fn(n,s);!rt(n)&&!Array.isArray(n)&&(n=[n]);const i=s!=="string"?Vo(n,s):Dn(n,[],!0);return D.makeTensor(i,o,s)}function xo(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>N(o,`${e}[${a}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ep="__op";function O(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+ep;const s=(...o)=>{D.startScope(t);try{const a=r(...o);return ur(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(n,e){const t=N(n,"real","complex"),r=N(e,"imag","complex");ft(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return D.runKernel(Il,s)}const Yn=O({complex_:JN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pr(n,e,t,r){if(r==null)r=Lo(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof n=="object"&&("texture"in n||"buffer"in n&&!(n.buffer instanceof ArrayBuffer))){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return D.backend.createTensorFromGPUData(n,e||t,r)}if(!rt(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Pt(e);const s=q(e),o=q(t);E(s===o,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${o}`);for(let a=0;a<t.length;++a){const i=t[a],u=a===t.length-1?i!==q(e.slice(a)):!0;E(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!rt(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?Vo(n,r):Dn(n,[],!0),D.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sn(n,e,t){const r=Fn(n,t);return pr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lc={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oi=4;function eE(n,e){return H(this,null,function*(){const t=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){const i=s[a],u=Array.isArray(n)?n[a].tensor:n[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);const c={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const l=new Promise(d=>H(this,null,function*(){const f=yield u.bytes(),h=f.reduce((y,b)=>y+b.length,0)+oi*f.length,m=new Uint8Array(h);let g=0;for(let y=0;y<f.length;y++){const b=f[y],$=new Uint8Array(new Uint32Array([b.length]).buffer);m.set($,g),g+=oi,m.set(b,g),g+=b.length}d(m)}));r.push(l)}else r.push(u.data());e!=null&&(c.group=e),t.push(c)}const o=yield Promise.all(r);return{data:tE(o),specs:t}})}function Vx(n,e){const t={};let r,s=0;for(const o of e){const a=o.name,i=o.dtype,u=o.shape,c=q(u);let l;if("quantization"in o){const d=o.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${o.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${o.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${o.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const f=lc[d.dtype],h=n.slice(s,s+c*f),m=d.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){l=new Float32Array(m.length);for(let g=0;g<m.length;g++){const y=m[g];l[g]=y*d.scale+d.min}}else if(d.dtype==="float16")r===void 0&&(r=iE()),l=r(m);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);l=new Int32Array(m.length);for(let g=0;g<m.length;g++){const y=m[g];l[g]=Math.round(y*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);s+=c*f}else if(i==="string"){const d=q(o.shape);l=[];for(let f=0;f<d;f++){const h=new Uint32Array(n.slice(s,s+oi))[0];s+=oi;const m=new Uint8Array(n.slice(s,s+h));l.push(m),s+=h}}else{const d=lc[i],f=n.slice(s,s+c*d);if(i==="float32")l=new Float32Array(f);else if(i==="int32")l=new Int32Array(f);else if(i==="bool")l=new Uint8Array(f);else if(i==="complex64"){l=new Float32Array(f);const h=new Float32Array(l.length/2),m=new Float32Array(l.length/2);for(let b=0;b<h.length;b++)h[b]=l[b*2],m[b]=l[b*2+1];const g=sn(h,u,"float32"),y=sn(m,u,"float32");t[a]=Yn(g,y),g.dispose(),y.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);s+=c*d}i!=="complex64"&&(t[a]=sn(l,u,i))}return t}function tE(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(o=>{r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}const tp=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function mg(n){return tp?Buffer.byteLength(n):new Blob([n]).size}function nE(n){if(tp)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function rE(n){if(tp){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function np(n){if(n.length===1)return n[0];let e=0;n.forEach(s=>{e+=s.byteLength});const t=new Uint8Array(e);let r=0;return n.forEach(s=>{t.set(new Uint8Array(s),r),r+=s.byteLength}),t.buffer}function gg(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function Mx(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function Ux(n,e,t){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=t}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(r.initializerSignature=n.initializerSignature),r}function rp(n,e){return H(this,null,function*(){let t,r;return n.weightsManifest!=null&&([t,r]=yield e(n.weightsManifest)),Ux(n,t,r)})}function Mo(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:mg(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:mg(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function Wx(n){const e=[];for(const t of n)e.push(...t.weights);return e}function sE(){const n=t=>{let r=t<<13,s=0;for(;!(r&8388608);)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function oE(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function aE(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function iE(){const n=sE(),e=oE(),t=aE();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let a=0;a<r.length;a++){const i=r[a],u=n[t[i>>10]+(i&1023)]+e[i>>10];o[a]=u}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class We{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return We.instance==null&&(We.instance=new We),We.instance}static registerSaveRouter(e){We.getInstance().saveRouters.push(e)}static registerLoadRouter(e){We.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return We.getHandlers(e,"save")}static getLoadHandlers(e,t){return We.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?We.getInstance().loadRouters:We.getInstance().saveRouters).forEach(a=>{const i=a(e,r);i!==null&&s.push(i)}),s}}const uE=n=>We.registerSaveRouter(n),cE=n=>We.registerLoadRouter(n),lE=n=>We.getSaveHandlers(n),dE=(n,e)=>We.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dc="tensorflowjs",fc=1,_r="models_store",rr="model_info_store";function zx(){if(!B().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window=="undefined"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function pc(n){const e=n.result;e.createObjectStore(_r,{keyPath:"modelPath"}),e.createObjectStore(rr,{keyPath:"modelPath"})}class Lr{constructor(e){if(this.indexedDB=zx(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){return H(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)})}load(){return H(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(e,t){return new Promise((r,s)=>{const o=this.indexedDB.open(dc,fc);o.onupgradeneeded=()=>pc(o),o.onsuccess=()=>{const a=o.result;if(t==null){const i=a.transaction(_r,"readonly"),c=i.objectStore(_r).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=l=>(a.close(),s(c.error)),i.oncomplete=()=>a.close()}else{const i=Mo(t),u=a.transaction(rr,"readwrite");let c=u.objectStore(rr);const l=c.put({modelPath:this.modelPath,modelArtifactsInfo:i});let d;l.onsuccess=()=>{d=a.transaction(_r,"readwrite");const h=d.objectStore(_r).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});h.onsuccess=()=>r({modelArtifactsInfo:i}),h.onerror=m=>{c=u.objectStore(rr);const g=c.delete(this.modelPath);g.onsuccess=()=>(a.close(),s(h.error)),g.onerror=y=>(a.close(),s(h.error))}},l.onerror=f=>(a.close(),s(l.error)),u.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},o.onerror=a=>s(o.error)})}}Lr.URL_SCHEME="indexeddb://";const Gx=n=>B().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Lr.URL_SCHEME)?fE(n.slice(Lr.URL_SCHEME.length)):null;We.registerSaveRouter(Gx);We.registerLoadRouter(Gx);function fE(n){return new Lr(n)}function pE(n){return n.startsWith(Lr.URL_SCHEME)?n.slice(Lr.URL_SCHEME.length):n}class hE{constructor(){this.indexedDB=zx()}listModels(){return H(this,null,function*(){return new Promise((e,t)=>{const r=this.indexedDB.open(dc,fc);r.onupgradeneeded=()=>pc(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(rr,"readonly"),i=o.objectStore(rr).getAll();i.onsuccess=()=>{const u={};for(const c of i.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},i.onerror=u=>(s.close(),t(i.error)),o.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})})}removeModel(e){return H(this,null,function*(){return e=pE(e),new Promise((t,r)=>{const s=this.indexedDB.open(dc,fc);s.onupgradeneeded=()=>pc(s),s.onsuccess=()=>{const o=s.result,a=o.transaction(rr,"readwrite"),i=a.objectStore(rr),u=i.get(e);let c;u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const l=i.delete(e),d=()=>{c=o.transaction(_r,"readwrite");const h=c.objectStore(_r).delete(e);h.onsuccess=()=>t(u.result.modelArtifactsInfo),h.onerror=m=>r(u.error)};l.onsuccess=d,l.onerror=f=>(d(),o.close(),r(u.error))}},u.onerror=l=>(o.close(),r(u.error)),a.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},s.onerror=o=>r(s.error)})})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jn="/",is="tensorflowjs_models",jx="info",mE="model_topology",gE="weight_specs",yE="weight_data",xE="model_metadata";function Hx(n){return{info:[is,n,jx].join(jn),topology:[is,n,mE].join(jn),weightSpecs:[is,n,gE].join(jn),weightData:[is,n,yE].join(jn),modelMetadata:[is,n,xE].join(jn)}}function qx(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function bE(n){const e=n.split(jn);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(jn)}function vE(n){return n.startsWith(Br.URL_SCHEME)?n.slice(Br.URL_SCHEME.length):n}class Br{constructor(e){if(!B().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Hx(this.modelPath)}save(e){return H(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Mo(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,nE(e.weightData));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:s}}catch(o){throw qx(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}})}load(){return H(this,null,function*(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=rE(a),t})}}Br.URL_SCHEME="localstorage://";const Kx=n=>B().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Br.URL_SCHEME)?wE(n.slice(Br.URL_SCHEME.length)):null;We.registerSaveRouter(Kx);We.registerLoadRouter(Kx);function wE(n){return new Br(n)}class $E{constructor(){E(B().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),E(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return H(this,null,function*(){const e={},t=is+jn,r=jn+jx;for(let s=0;s<this.LS.length;++s){const o=this.LS.key(s);if(o.startsWith(t)&&o.endsWith(r)){const a=bE(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e})}removeModel(e){return H(this,null,function*(){e=vE(e);const t=Hx(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return qx(t),r})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cs="://";class gt{constructor(){this.managers={}}static getInstance(){return gt.instance==null&&(gt.instance=new gt),gt.instance}static registerManager(e,t){E(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(cs)&&(e=e.slice(0,e.indexOf(cs))),E(e.length>0,()=>"scheme must not be an empty string.");const r=gt.getInstance();E(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=gt.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(gt.getInstance().managers)}}function Ma(n){if(n.indexOf(cs)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${gt.getSchemes().join(",")}`);return{scheme:n.split(cs)[0],path:n.split(cs)[1]}}function Xx(n,e,t=!1){return H(this,null,function*(){E(n!==e,()=>`Old path and new path are the same: '${n}'`);const r=We.getLoadHandlers(n);E(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),E(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],o=We.getSaveHandlers(e);E(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),E(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=o[0],i=Ma(n).scheme,u=Ma(n).path,c=i===Ma(n).scheme,l=yield s.load();t&&c&&(yield gt.getManager(i).removeModel(u));const d=yield a.save(l);return t&&!c&&(yield gt.getManager(i).removeModel(u)),d.modelArtifactsInfo})}function SE(){return H(this,null,function*(){const n=gt.getSchemes(),e={};for(const t of n){const r=yield gt.getManager(t).listModels();for(const s in r){const o=t+cs+s;e[o]=r[s]}}return e})}function TE(n){return H(this,null,function*(){const e=Ma(n);return gt.getManager(e.scheme).removeModel(e.path)})}function CE(n,e){return H(this,null,function*(){return Xx(n,e,!1)})}function NE(n,e){return H(this,null,function*(){return Xx(n,e,!0)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EE{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window=="undefined"||!B().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}}if(B().get("IS_BROWSER")){B().setPlatform("browser",new EE);try{gt.registerManager(Br.URL_SCHEME,new $E)}catch(n){}try{gt.registerManager(Lr.URL_SCHEME,new hE)}catch(n){}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IE={importFetch:()=>require("node-fetch")};let Tu;class kE{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return B().global.fetch!=null?B().global.fetch(e,t):(Tu==null&&(Tu=IE.importFetch()),Tu(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}B().get("IS_NODE")&&!B().get("IS_BROWSER")&&B().setPlatform("node",new kE);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(n,e="float32",t){return e=e||"float32",Pt(n),new gs(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(n,e){const t=N(n,"x","cast");if(!cx(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return D.runKernel(Ti,r,s)}const Se=O({cast_:_E});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(n){const t={x:N(n,"x","clone","string_or_numeric")};return D.runKernel(Ci,t)}const Kn=O({clone_:RE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sp(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Lx();const AE={buffer:Ue,cast:Se,clone:Kn,print:sp};WN(AE);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(){B().set("PROD",!0)}function DE(){B().set("DEBUG",!0)}function FE(){B().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function PE(n){B().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function LE(){D.disposeVariables()}function hn(){return D}function BE(){return D.memory()}function VE(n){return D.profile(n)}function ie(n,e){return D.tidy(n,e)}function Ct(n){Qf(n).forEach(t=>t.dispose())}function In(n){return D.keep(n)}function ME(n){return D.time(n)}function UE(n){return D.setBackend(n)}function WE(){return D.ready()}function Yx(){return D.backendName}function zE(n){D.removeBackend(n)}function GE(n){return D.findBackend(n)}function jE(n){return D.findBackendFactory(n)}function Qx(n,e,t=1){return D.registerBackend(n,e,t)}function Zx(){return D.backend}function HE(n,e){B().setPlatform(n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qE(n,e){let t=N(n,"a","add"),r=N(e,"b","add");[t,r]=ze(t,r);const s={a:t,b:r};return D.runKernel(Si,s)}const ae=O({add_:qE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(n,e){let t=N(n,"a","floorDiv"),r=N(e,"b","floorDiv");[t,r]=ze(t,r);const s={a:t,b:r};return D.runKernel(ad,s)}const op=O({floorDiv_:KE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE(n,e){let t=N(n,"a","div"),r=N(e,"b","div");if([t,r]=ze(t,r),t.dtype==="int32"&&r.dtype==="int32")return op(t,r);const s={a:t,b:r},o={};return D.runKernel(Kl,s,o)}const Ie=O({div_:XE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YE(n,e){let t=N(n,"a","mul"),r=N(e,"b","mul");[t,r]=ze(t,r);const s={a:t,b:r};return D.runKernel(Bd,s)}const Y=O({mul_:YE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QE(n){const e=N(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return D.runKernel(kl,t)}else{const t={x:e};return D.runKernel(il,t)}}const _t=O({abs_:QE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZE(n){const t={x:N(n,"x","acos")};return D.runKernel(ul,t)}const Jx=O({acos_:ZE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JE(n){const t={x:N(n,"x","acosh")};return D.runKernel(cl,t)}const e0=O({acosh_:JE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eI(n){E(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),E(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((s,o)=>N(s,`tensors${o}`,"addN")),t=e[0];e.forEach(s=>{if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!Me(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return D.runKernel(ll,r)}const t0=O({addN_:eI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tI(n,e=null,t=!1){const s={x:N(n,"x","all","bool")},o={axis:e,keepDims:t};return D.runKernel(dl,s,o)}const n0=O({all_:tI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nI(n,e=null,t=!1){const s={x:N(n,"x","any","bool")},o={axis:e,keepDims:t};return D.runKernel(fl,s,o)}const r0=O({any_:nI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rI(n,e=0){const r={x:N(n,"x","argMax")},s={axis:e};return D.runKernel(pl,r,s)}const ap=O({argMax_:rI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sI(n,e=0){const r={x:N(n,"x","argMin")},s={axis:e};return D.runKernel(hl,r,s)}const s0=O({argMin_:sI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oI(n){const t={x:N(n,"x","asin")};return D.runKernel(ml,t)}const o0=O({asin_:oI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aI(n){const t={x:N(n,"x","asinh")};return D.runKernel(gl,t)}const a0=O({asinh_:aI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iI(n){const t={x:N(n,"x","atan")};return D.runKernel(yl,t)}const i0=O({atan_:iI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(n,e){let t=N(n,"a","atan2"),r=N(e,"b","atan2");[t,r]=ze(t,r);const s={a:t,b:r};return D.runKernel(bl,s)}const u0=O({atan2_:uI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cI(n){const t={x:N(n,"x","atanh")};return D.runKernel(xl,t)}const c0=O({atanh_:cI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l0(n,e,t,r,s="NHWC",o){const a=n[3],i=[...e,a],u=Is(s);return zt(n,i,t,o,r,null,null,u)}function Xr(n,e,t,r,s,o,a="channelsLast"){const[i,u]=bo(e);let c;if(a==="channelsLast")c=[i,u,n[3],n[3]];else if(a==="channelsFirst")c=[i,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return zt(n,c,t,r,s,o,!1,a)}function Uo(n,e,t,r,s,o,a="NDHWC"){const[i,u,c]=hc(e);let l,d;if(a==="NDHWC")d="channelsLast",l=[i,u,c,n[4],n[4]];else if(a==="NCDHW")d="channelsFirst",l=[i,u,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Wo(n,l,t,r,s,!1,d,o)}function zt(n,e,t,r,s,o,a=!1,i="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,d]=n;else if(i==="channelsFirst")[u,d,c,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[f,h,,m]=e,[g,y]=bo(t),[b,$]=bo(r),S=ls(f,b),C=ls(h,$),{padInfo:I,outHeight:A,outWidth:L}=fI(s,c,l,g,y,S,C,o,i),F=a?m*d:m;let V;return i==="channelsFirst"?V=[u,F,A,L]:i==="channelsLast"&&(V=[u,A,L,F]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:d,outHeight:A,outWidth:L,outChannels:F,padInfo:I,strideHeight:g,strideWidth:y,filterHeight:f,filterWidth:h,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationHeight:b,dilationWidth:$,inShape:n,outShape:V,filterShape:e}}function Wo(n,e,t,r,s,o=!1,a="channelsLast",i){let[u,c,l,d,f]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,c,l,d,f]=n;else if(a==="channelsFirst")[u,f,c,l,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[h,m,g,,y]=e,[b,$,S]=hc(t),[C,I,A]=hc(r),L=ls(h,C),F=ls(m,I),V=ls(g,A),{padInfo:W,outDepth:U,outHeight:G,outWidth:K}=pI(s,c,l,d,b,$,S,L,F,V,i),te=o?y*f:y;let oe;return a==="channelsFirst"?oe=[u,te,U,G,K]:a==="channelsLast"&&(oe=[u,U,G,K,te]),{batchSize:u,dataFormat:a,inDepth:c,inHeight:l,inWidth:d,inChannels:f,outDepth:U,outHeight:G,outWidth:K,outChannels:te,padInfo:W,strideDepth:b,strideHeight:$,strideWidth:S,filterDepth:h,filterHeight:m,filterWidth:g,effectiveFilterDepth:L,effectiveFilterHeight:F,effectiveFilterWidth:V,dilationDepth:C,dilationHeight:I,dilationWidth:A,inShape:n,outShape:oe,filterShape:e}}function lI(n,e,t,r,s){r==null&&(r=ip(n,e,t));const o=n[0],a=n[1],i=vo((o-e+2*r)/t+1,s),u=vo((a-e+2*r)/t+1,s);return[i,u]}function dI(n,e,t,r,s,o){s==null&&(s=ip(n,e[0],r[0]));const a=[0,0,0,t];for(let i=0;i<3;i++)n[i]+2*s>=e[i]&&(a[i]=vo((n[i]-e[i]+2*s)/r[i]+1,o));return a}function ip(n,e,t,r=1){const s=ls(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function bo(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function hc(n){return typeof n=="number"?[n,n,n]:n}function ls(n,e){return e<=1?n:n+(n-1)*(e-1)}function fI(n,e,t,r,s,o,a,i,u){let c,l,d;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const h=lI([e,t],o,r,n,i);l=h[0],d=h[1]}else if(n==="same"){l=Math.ceil(e/r),d=Math.ceil(t/s);const f=Math.max(0,(l-1)*r+o-e),h=Math.max(0,(d-1)*s+a-t),m=Math.floor(f/2),g=f-m,y=Math.floor(h/2),b=h-y;c={top:m,bottom:g,left:y,right:b,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-o+1)/r),d=Math.ceil((t-a+1)/s);else if(typeof n=="object"){const f=u==="channelsLast"?n[1][0]:n[2][0],h=u==="channelsLast"?n[1][1]:n[2][1],m=u==="channelsLast"?n[2][0]:n[3][0],g=u==="channelsLast"?n[2][1]:n[3][1];c={top:f,bottom:h,left:m,right:g,type:f===0&&h===0&&m===0&&g===0?"VALID":"EXPLICIT"},l=vo((e-o+f+h)/r+1,i),d=vo((t-a+m+g)/s+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:l,outWidth:d}}function pI(n,e,t,r,s,o,a,i,u,c,l){let d,f,h,m;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const y=dI([e,t,r,1],[i,u,c],1,[s,o,a],n,l);f=y[0],h=y[1],m=y[2]}else if(n==="same"){f=Math.ceil(e/s),h=Math.ceil(t/o),m=Math.ceil(r/a);const g=(f-1)*s+i-e,y=(h-1)*o+u-t,b=(m-1)*a+c-r,$=Math.floor(g/2),S=g-$,C=Math.floor(y/2),I=y-C,A=Math.floor(b/2),L=b-A;d={top:C,bottom:I,left:A,right:L,front:$,back:S,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:f,outHeight:h,outWidth:m}}function vo(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function wo(n){const[e,t,r]=bo(n);return e===1&&t===1&&r===1}function Bt(n,e){return wo(n)||wo(e)}function Vr(n){return bo(n).every(e=>e>0)}function Is(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function an(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")E(Fr(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{E(Fr(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hI(n,e){const r={x:N(n,"x","reshape","string_or_numeric")},s={shape:e};return D.runKernel(sf,r,s)}const z=O({reshape_:hI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mI(n,e,t,r,s){const o=N(n,"x","avgPool","float32"),a=1;E(Bt(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=o,u=!1;o.rank===3&&(u=!0,i=z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),an("avgPool",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let d=D.runKernel(vl,c,l);return d=Se(d,o.dtype),u?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const up=O({avgPool_:mI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gI(n,e,t,r,s,o="NDHWC"){const a=N(n,"x","avgPool3d","float32");let i=a,u=!1;a.rank===4&&(u=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),E(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),E(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),an("avgPool3d",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o};let d=D.runKernel(wl,c,l);return d=Se(d,i.dtype),u?z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const d0=O({avgPool3d_:gI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yI(n,e=0){E(n.length>=1,()=>"Pass at least one tensor to concat");const t=xo(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return Kn(t[0]);const r=t,s={axis:e};return D.runKernel(_l,r,s)}const dt=O({concat_:yI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xI(n,e,t=!1,r=!1){let s=N(n,"a","matMul"),o=N(e,"b","matMul");[s,o]=ze(s,o);const a={a:s,b:o},i={transposeA:t,transposeB:r};return D.runKernel($l,a,i)}const ve=O({matMul_:xI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(n){const t={x:N(n,"x","sigmoid","float32")};return D.runKernel(vf,t)}const Rn=O({sigmoid_:bI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vI(n,e,t){const r=N(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:t};return D.runKernel(gf,s,o)}const Ee=O({slice_:vI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(n){const t={x:N(n,"x","tanh","float32")};return D.runKernel(Vf,t)}const ai=O({tanh_:wI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $I(n,e,t,r,s,o){const a=N(n,"forgetBias","basicLSTMCell"),i=N(e,"lstmKernel","basicLSTMCell"),u=N(t,"lstmBias","basicLSTMCell"),c=N(r,"data","basicLSTMCell"),l=N(s,"c","basicLSTMCell"),d=N(o,"h","basicLSTMCell"),f=dt([c,d],1),h=ve(f,i),m=ae(h,u),g=m.shape[0],y=m.shape[1]/4,b=[g,y],$=Ee(m,[0,0],b),S=Ee(m,[0,y],b),C=Ee(m,[0,y*2],b),I=Ee(m,[0,y*3],b),A=ae(Y(Rn($),ai(S)),Y(l,Rn(ae(a,C)))),L=Y(ai(A),Rn(I));return[A,L]}const f0=O({basicLSTMCell_:$I});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SI(n,e,t){const r=N(n,"x","batchToSpaceND"),s=e.reduce((i,u)=>i*u);E(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),E(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),E(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const o={x:r},a={blockShape:e,crops:t};return D.runKernel(Sl,o,a)}const cp=O({batchToSpaceND_:SI});function TI(n){let e;return n.rank===0||n.rank===1?e=z(n,[1,1,1,n.size]):n.rank===2?e=z(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=z(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CI(n,e,t,r,s,o){o==null&&(o=.001);const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),u=N(t,"variance","batchNorm");let c;s!=null&&(c=N(s,"scale","batchNorm"));let l;r!=null&&(l=N(r,"offset","batchNorm")),E(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const f={x:TI(a),scale:c,offset:l,mean:i,variance:u},h={varianceEpsilon:o},m=D.runKernel(id,f,h);return z(m,a.shape)}const zo=O({batchNorm_:CI});function NI(n,e,t,r,s,o){const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),u=N(t,"variance","batchNorm");let c;s!=null&&(c=N(s,"scale","batchNorm"));let l;return r!=null&&(l=N(r,"offset","batchNorm")),E(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),E(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),E(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&E(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&E(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),zo(a,i,u,l,c,o)}const p0=O({batchNorm2d_:NI});function EI(n,e,t,r,s,o){const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),u=N(t,"variance","batchNorm");let c;s!=null&&(c=N(s,"scale","batchNorm"));let l;return r!=null&&(l=N(r,"offset","batchNorm")),E(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),E(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),E(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&E(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&E(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),zo(a,i,u,l,c,o)}const h0=O({batchNorm3d_:EI});function II(n,e,t,r,s,o){const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),u=N(t,"variance","batchNorm");let c;s!=null&&(c=N(s,"scale","batchNorm"));let l;return r!=null&&(l=N(r,"offset","batchNorm")),E(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),E(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),E(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&E(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&E(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),zo(a,i,u,l,c,o)}const m0=O({batchNorm4d_:II});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kI(n,e,t){const r=N(n,"x","bincount"),s=N(e,"weights","bincount");E(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),E(t>=0,()=>`size must be non-negative, but got ${t}.`),E(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const o={x:r,weights:s},a={size:t};return D.runKernel(Tl,o,a)}const lp=O({bincount_:kI});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _I(n,e){const t=N(n,"s0","broadcastArgs","int32"),r=N(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:t,s1:r};return D.runKernel(Cl,s)}const g0=O({broadcastArgs_:_I});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RI(n,e){let t=N(n,"broadcastTo","x");const r=t.shape;if(Pt(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=z(t,c)}const s=t.shape,o=Array.from(e);for(let c=e.length-1;c>=0;c--)if(s[c]===e[c])o[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(o.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return Kn(t);const i={x:t},u={reps:o};return D.runKernel(Ni,i,u)}const ds=O({broadcastTo_:RI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AI(n){const t={x:N(n,"x","ceil","float32")};return D.runKernel(Nl,t)}const y0=O({ceil_:AI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(n,e,t){Pt(n);const r={shape:n,value:e,dtype:t};return D.runKernel(rd,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OI(n,e,t){const r=N(n,"x","clipByValue");if(E(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return ks(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:t};return D.runKernel(El,s,o)}const x0=O({clipByValue_:OI});function DI(n){return dt(n,0)}const b0=O({concat1d_:DI});function FI(n,e){return dt(n,e)}const v0=O({concat2d_:FI});function PI(n,e){return dt(n,e)}const w0=O({concat3d_:PI});function LI(n,e){return dt(n,e)}const $0=O({concat4d_:LI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BI(n,e,t,r,s="NHWC",o=[1,1],a){const i=N(n,"x","conv2d","float32"),u=N(e,"filter","conv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),E(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),an("conv2d",r,a);const d=s==="NHWC"?c.shape[3]:c.shape[1];E(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),E(Bt(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),E(Vr(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),E(Vr(t),()=>"Error in conv2D: Strides should be larger than 0.");const f={x:c,filter:u},h={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},m=D.runKernel(Rl,f,h);return l?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Go=O({conv2d_:BI});function VI(n,e,t,r,s="NWC",o=1,a){const i=N(n,"x","conv1d"),u=N(e,"filter","conv1d");let c=i,l=!1;i.rank===2&&(l=!0,c=z(i,[1,i.shape[0],i.shape[1]])),E(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),E(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),an("conv1d",r,a),E(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),E(Bt(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),E(Vr(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),E(Vr(t),()=>"Error in conv1D: Stride should be larger than 0."),E(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const d=z(u,[1,u.shape[0],u.shape[1],u.shape[2]]),f=z(c,[c.shape[0],1,c.shape[1],c.shape[2]]),y=Go(f,d,[1,t],r,"NHWC",[1,o],a);return l?z(y,[y.shape[2],y.shape[3]]):z(y,[y.shape[0],y.shape[2],y.shape[3]])}const S0=O({conv1d_:VI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(n,e,t,r,s,o="NHWC",a){E(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,u=e,c=!1;e.rank===3&&(c=!0,u=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,n[0],n[1],n[2]]),E(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),E(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),E(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const l=o==="NHWC"?i[3]:i[1],d=o==="NHWC"?u.shape[3]:u.shape[1];E(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),E(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),an("conv2dDerInput",s,a);const f={dy:u,filter:t},h={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,inputShape:i},m=D.runKernel(Ol,f,h);return c?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const T0=O({conv2DBackpropInput_:MI});function UI(n,e,t,r,s,o){const a=N(n,"x","conv2dTranspose"),i=N(e,"filter","conv2dTranspose");return T0(t,a,i,r,s,"NHWC",o)}const C0=O({conv2dTranspose_:UI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WI(n,e,t,r,s="NDHWC",o=[1,1,1]){const a=N(n,"x","conv3d"),i=N(e,"filter","conv3d");let u=a,c=!1;a.rank===4&&(c=!0,u=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),E(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),E(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),E(Bt(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),E(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),E(Vr(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),E(Vr(t),()=>"Error in conv3D: Strides should be larger than 0.");const l={x:u,filter:i},d={strides:t,pad:r,dataFormat:s,dilations:o},f=D.runKernel(Dl,l,d);return c?z(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const N0=O({conv3d_:WI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zI(n,e,t,r,s){E(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,a=e,i=!1;e.rank===4&&(i=!0,a=z(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const u=o[4],c=a.shape[4];E(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),E(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),E(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),E(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),E(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const l={dy:a,filter:t},d={pad:s,strides:r,inputShape:o},f=D.runKernel(Fl,l,d);return i?z(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const GI=O({conv3DBackpropInput_:zI});function jI(n,e,t,r,s){const o=N(n,"x","conv3dTranspose"),a=N(e,"filter","conv3dTranspose");return GI(t,o,a,r,s)}const E0=O({conv3dTranspose_:jI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HI(n){const t={x:N(n,"x","cos","float32")};return D.runKernel(Pl,t)}const I0=O({cos_:HI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(n){const t={x:N(n,"x","cosh","float32")};return D.runKernel(Ll,t)}const k0=O({cosh_:qI});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KI(n,e=0,t=!1,r=!1){const o={x:N(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:r};return D.runKernel(Bl,o,a)}const _0=O({cumprod_:KI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XI(n,e=0,t=!1,r=!1){const o={x:N(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:r};return D.runKernel(Vl,o,a)}const R0=O({cumsum_:XI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(n,e,t,r=!1){const s=N(n,"x","denseBincount"),o=N(e,"weights","denseBincount");E(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),E(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),E(t>=0,()=>`size must be non-negative, but got ${t}.`),E(o.size===s.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`);const a={x:s,weights:o},i={size:t,binaryOutput:r};return D.runKernel(Ul,a,i)}const A0=O({denseBincount_:YI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QI(n,e,t="NHWC"){const r=N(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],o=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];E(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),E(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),E(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${r.shape}`),E(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:e,dataFormat:t};return D.runKernel(Wl,i,u)}const O0=O({depthToSpace_:QI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZI(n,e,t,r,s="NHWC",o=[1,1],a){const i=N(n,"x","depthwiseConv2d","float32"),u=N(e,"filter","depthwiseConv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),E(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const d=s==="NHWC"?c.shape[3]:c.shape[1];E(d===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`),an("depthwiseConv2d",r,a);const f={x:c,filter:u},h={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},m=D.runKernel(zl,f,h);return l?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Ii=O({depthwiseConv2d_:ZI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JI(n){const t={x:N(n,"x","diag")};return D.runKernel(Hl,t)}const D0=O({diag_:JI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ek(n,e,t,r,s=[1,1],o="NHWC"){const a=N(n,"x","dilation2d"),i=N(e,"filter","dilation2d");E(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),E(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),E(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=a,c=!1;a.rank===3&&(u=z(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),E(u.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`);const l={x:u,filter:i},d={strides:t,pad:r,dilations:s},f=D.runKernel(ql,l,d);return c?z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const F0=O({dilation2d_:ek});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const o=t-1-s,a=n[o]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(o)}return r}function dp(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],o=e.length-r-1,a=e[o];(s==null||s===1&&a>1)&&t.unshift(o)}return t}function xe(n,e){const t=[],r=Math.max(n.length,e.length);for(let s=0;s<r;s++){let o=n[n.length-s-1];o==null&&(o=1);let a=e[e.length-s-1];if(a==null&&(a=1),o===1)t.unshift(a);else if(a===1)t.unshift(o);else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(i)}else t.unshift(o)}return t}const tk=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:xe,getBroadcastDims:$o,getReductionAxes:dp},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n,e){let t=N(n,"a","equal","string_or_numeric"),r=N(e,"b","equal","string_or_numeric");[t,r]=ze(t,r),xe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Zl,s)}const jo=O({equal_:nk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(n,e,t){const r=N(e,"a","where"),s=N(t,"b","where"),o=N(n,"condition","where","bool"),a=xe(xe(o.shape,r.shape),s.shape),i=ds(o,a),u=ds(r,a),c=ds(s,a),l={condition:i,t:u,e:c};return D.runKernel(hf,l)}const Mr=O({where_:rk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(n){const t={x:N(n,"x","zerosLike")};return D.runKernel(jf,t)}const Dt=O({zerosLike_:sk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(n,e){let t=N(n,"a","div"),r=N(e,"b","div");[t,r]=ze(t,r);const s=Ie(t,r),o=Dt(s),a=jo(r,o);return Mr(a,o,s)}const P0=O({divNoNan_:ok});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(n,e){const t=N(n,"t1","dot"),r=N(e,"t2","dot");E((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],o=r.rank===1?r.size:r.shape[0];if(E(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),t.rank===1&&r.rank===1){const a=z(t,[1,-1]),i=z(r,[-1,1]),u=ve(a,i);return z(u,[])}else if(t.rank===1&&r.rank===2){const a=z(t,[1,-1]),i=z(r,[r.shape[0],r.shape[1]]),u=ve(a,i);return z(u,[u.size])}else if(t.rank===2&&r.rank===1){const a=z(r,[-1,1]),i=ve(t,a);return z(i,[i.size])}else{const a=z(r,[r.shape[0],r.shape[1]]);return ve(t,a)}}const L0=O({dot_:ak});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ik(n,...e){const t=e.map((s,o)=>N(s,`tensors${o}`,"einsum")),r={equation:n};return D.runKernel(Xl,t,r)}const B0=O({einsum_:ik});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uk(n){const t={x:N(n,"x","elu","float32")};return D.runKernel(Yl,t)}const fp=O({elu_:uk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ck(n){let e=N(n,"x","erf");E(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Se(e,"float32"));const t={x:e};return D.runKernel(Ql,t)}const V0=O({erf_:ck});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pp(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function M0(n,e,t){const r=n.length+e.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)t.indexOf(i)===-1?s.push(n[o++]):s.push(e[a++]);return s}function Vn(n,e){const t=[],r=n.length;for(let o=0;o<r;o++)e.indexOf(o)===-1&&t.push(n[o]);const s=e.map(o=>n[o]);return[t,s]}function Gt(n,e){const t=e.map(r=>1);return M0(n,t,e)}function $n(n,e,t){E(pp(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function un(n,e){if(pp(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function hp(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function cn(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lk(n,e=null,t=!1){const s={x:N(n,"x","max")},o={reductionIndices:e,keepDims:t};return D.runKernel(Ed,s,o)}const Or=O({max_:lk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dk(n,e=null,t=!1){const s={x:N(n,"x","min")},o={axis:e,keepDims:t};return D.runKernel(Od,s,o)}const ii=O({min_:dk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fk(n,e){let t=N(n,"base","pow"),r=N(e,"exp","pow");[t,r]=ze(t,r);const s={a:t,b:r};return D.runKernel(Kd,s)}const xs=O({pow_:fk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function de(n,e){if((rt(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&rt(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return pr(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pk(n){const t={x:N(n,"x","sqrt","float32")};return D.runKernel($f,t)}const Pn=O({sqrt_:pk});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hk(n){const e=N(n,"x","square"),t={};return D.runKernel("Square",{x:e},t)}const on=O({square_:hk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mk(n,e=null,t=!1){let r=N(n,"x","sum");r.dtype==="bool"&&(r=Se(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return D.runKernel(Sf,s,o)}const _e=O({sum_:mk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(n,e="euclidean",t=null,r=!1){n=N(n,"x","norm");const s=U0(n,e,t);let o=s.shape;if(r){const a=He(t,n.shape);o=Gt(s.shape,a)}return z(s,o)}function U0(n,e,t=null){if(n.rank===0)return _t(n);if(n.rank!==1&&t===null)return U0(z(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return _e(_t(n),t);if(e===1/0)return Or(_t(n),t);if(e===-1/0)return ii(_t(n),t);if(e==="euclidean"||e===2)return Pn(_e(xs(_t(n),de(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Or(_e(_t(n),t[0]),t[1]-1);if(e===1/0)return Or(_e(_t(n),t[1]),t[0]);if(e===-1/0)return ii(_e(_t(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Pn(_e(on(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Ho=O({norm_:gk});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yk(n,e=null,t=!1){return Ho(n,"euclidean",e,t)}const W0=O({euclideanNorm_:yk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xk(n){const t={x:N(n,"x","exp")};return D.runKernel(Jl,t)}const cr=O({exp_:xk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bk(n,e=0){const t=N(n,"x","expandDims","string_or_numeric");E(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return D.runKernel(ed,r,s)}const Rt=O({expandDims_:bk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vk(n){const t={x:N(n,"x","expm1")};return D.runKernel(td,t)}const z0=O({expm1_:vk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(n,e){const t=N(n,"x","tile","string_or_numeric");E(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return D.runKernel(Ni,r,s)}const fs=O({tile_:wk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $k(n,e,t,r="float32"){e==null&&(e=n);const s=Ue([n,e],r),o=n<=e?n:e;for(let i=0;i<o;++i)s.set(1,i,i);const a=z(s.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return fs(Rt(a,0),[t[0],1,1]);if(t.length===2)return fs(Rt(Rt(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return fs(Rt(Rt(Rt(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const mp=O({eye_:$k});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(n){const t={x:N(n,"x","floor","float32")};return D.runKernel(od,t)}const gp=O({floor_:Sk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tk(n,e,t=0,r=0){const s=N(n,"x","gather"),o=N(e,"indices","gather","int32"),a={x:s,indices:o},i={axis:t,batchDims:r};return D.runKernel(ud,a,i)}const yp=O({gather_:Tk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ck(n,e){let t=N(n,"a","greater","string_or_numeric"),r=N(e,"b","greater","string_or_numeric");[t,r]=ze(t,r),xe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(ld,s)}const _s=O({greater_:Ck});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nk(n,e){let t=N(n,"a","greaterEqual","string_or_numeric"),r=N(e,"b","greaterEqual","string_or_numeric");[t,r]=ze(t,r),xe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(dd,s)}const xp=O({greaterEqual_:Nk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ek(n){const t={input:N(n,"input","imag")};return D.runKernel(pd,t)}const qo=O({imag_:Ek});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n){const t={x:N(n,"x","isFinite")};return D.runKernel(hd,t)}const G0=O({isFinite_:Ik});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(n){const t={x:N(n,"x","isInf")};return D.runKernel(md,t)}const j0=O({isInf_:kk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _k(n){const t={x:N(n,"x","isNaN")};return D.runKernel(gd,t)}const H0=O({isNaN_:_k});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n,e=.2){const r={x:N(n,"x","leakyRelu")},s={alpha:e};return D.runKernel(yd,r,s)}const bp=O({leakyRelu_:Rk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ak(n,e){let t=N(n,"a","less","string_or_numeric"),r=N(e,"b","less","string_or_numeric");[t,r]=ze(t,r),xe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(xd,s)}const q0=O({less_:Ak});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(n,e){let t=N(n,"a","lessEqual","string_or_numeric"),r=N(e,"b","lessEqual","string_or_numeric");[t,r]=ze(t,r),xe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(bd,s)}const ki=O({lessEqual_:Ok});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K0(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const r={start:n,stop:e,num:t};return D.runKernel(vd,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dk(n,e=5,t=1,r=1,s=.5){const o=N(n,"x","localResponseNormalization");E(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),E(Fr(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=z(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},c={depthRadius:e,bias:t,alpha:r,beta:s},l=D.runKernel(Nd,u,c);return i?z(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const X0=O({localResponseNormalization_:Dk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(n){const t={x:N(n,"x","log","float32")};return D.runKernel(wd,t)}const bs=O({log_:Fk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pk(n){const t={x:N(n,"x","log1p")};return D.runKernel($d,t)}const vp=O({log1p_:Pk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lk(n){return E(ir(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const r=N(e,"x","tf.grad","string_or_numeric"),s=t!=null?N(t,"dy","tf.grad"):null;return D.tidy(()=>{const{value:o,grads:a}=D.gradients(()=>n(r),[r],s);return s!=null&&ft(o.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),_i(a),a[0]})}}function Bk(n){return E(ir(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{E(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=xo(e,"args","tf.grads","string_or_numeric"),s=t!=null?N(t,"dy","tf.grads"):null;return D.tidy(()=>{const{value:o,grads:a}=D.gradients(()=>n(...r),r,s);return s!=null&&ft(o.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),_i(a),a})}}function Vk(n){return E(ir(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{E(e instanceof Te,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),E(t==null||t instanceof Te,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=D.gradients(()=>n(e),[e],t);return _i(r),{grad:r[0],value:s}}}function Mk(n){return E(ir(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{E(Array.isArray(e)&&e.every(s=>s instanceof Te),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),E(t==null||t instanceof Te,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=D.gradients(()=>n(...e),e,t);return t!=null&&ft(r.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),_i(r.grads),r}}function Y0(n,e){E(ir(n),()=>"The f passed in variableGrads(f) must be a function"),E(e==null||Array.isArray(e)&&e.every(c=>c instanceof yo),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in D.registeredVariables)e.push(D.registeredVariables[c])}const r=t?e.filter(c=>!c.trainable):null,s=e.length;e=e.filter(c=>c.trainable),E(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const o=!0,{value:a,grads:i}=D.gradients(n,e,null,o);E(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),E(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return e.forEach((c,l)=>{i[l]!=null&&(u[c.name]=i[l])}),r!=null&&r.forEach(c=>u[c.name]=null),{value:a,grads:u}}function Ln(n){return D.customGrad(n)}function _i(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uk(n){const t={x:N(n,"x","neg")};return D.runKernel(Vd,t)}const An=O({neg_:Uk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(n){const t={x:N(n,"x","softplus")};return D.runKernel(wf,t)}const wp=O({softplus_:Wk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zk(n){const e=N(n,"x","logSigmoid");return Ln(r=>({value:An(wp(An(r))),gradFunc:a=>Y(a,Rn(An(r)))}))(e)}const Q0=O({logSigmoid_:zk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(n,e){let t=N(n,"a","sub"),r=N(e,"b","sub");[t,r]=ze(t,r);const s={a:t,b:r};return D.runKernel(Lf,s)}const pe=O({sub_:Gk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(n,e=-1){const t=N(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Ln((s,o)=>{const i=Or(s,e,!0),u=pe(s,i),c=pe(Se(u,"float32"),bs(_e(cr(u),e,!0)));return o([c]),{value:c,gradFunc:(d,f)=>{const[h]=f,m=!0,g=cr(h);return pe(d,Y(_e(d,e,m),g))}}})(t)}const Z0=O({logSoftmax_:jk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hk(n,e=null,t=!1){const r=N(n,"x","logSumExp"),s=He(e,r.shape),o=Or(r,s,!0),a=pe(r,o),i=cr(a),u=_e(i,s),c=bs(u),l=ae(z(o,c.shape),c);if(t){const d=Gt(l.shape,s);return z(l,d)}return l}const $p=O({logSumExp_:Hk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(n,e){const t=N(n,"a","logicalAnd","bool"),r=N(e,"b","logicalAnd","bool");xe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Sd,s)}const So=O({logicalAnd_:qk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(n){const t={x:N(n,"x","logicalNot","bool")};return D.runKernel(Td,t)}const Sp=O({logicalNot_:Kk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xk(n,e){const t=N(n,"a","logicalOr","bool"),r=N(e,"b","logicalOr","bool");xe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Cd,s)}const Tp=O({logicalOr_:Xk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yk(n,e){const t=N(n,"a","logicalXor","bool"),r=N(e,"b","logicalXor","bool");return xe(t.shape,r.shape),So(Tp(n,e),Sp(So(n,e)))}const J0=O({logicalXor_:Yk});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ba=2147483648;function Qk(n,e,t="left"){const r=N(n,"sortedSequence","searchSorted"),s=N(e,"values","searchSorted"),o=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],i=z(r,[-1,o]),u=z(s,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(q(u.shape)>=ba)throw new Error(`values tensor size must less than ${ba}`);if(i.shape[1]>=ba)throw new Error(`trailing dim_size must less than ${ba} for int32 output type, was ${i.shape[1]}`);const c={sortedSequence:i,values:u},l={side:t};return D.runKernel(pf,c,l)}const Ri=O({searchSorted_:Qk});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eb(n,e){return Ri(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zk(n,e,t,r,s){const o=N(n,"x","maxPool"),a=1;let i=o,u=!1;o.rank===3&&(u=!0,i=z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),E(Bt(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),an("maxPool",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s},d=D.runKernel(kd,c,l);return u?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Cp=O({maxPool_:Zk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n,e=[1,1,1],t,r,s,o="NDHWC"){const a=N(n,"x","maxPool3d");let i=a,u=!1;a.rank===4&&(u=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),E(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),an("maxPool3d",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o},d=D.runKernel(_d,c,l);return u?z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const tb=O({maxPool3d_:Jk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e_(n,e,t,r,s=!1){const a={x:N(n,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},u=D.runKernel(Rd,a,i);return{result:u[0],indexes:u[1]}}const nb=O({maxPoolWithArgmax_:e_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_(n,e){let t=N(n,"a","maximum"),r=N(e,"b","maximum");[t,r]=ze(t,r),t.dtype==="bool"&&(t=Se(t,"int32"),r=Se(r,"int32")),xe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Id,s)}const Np=O({maximum_:t_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n,e=null,t=!1){const s={x:N(n,"x","mean")},o={axis:e,keepDims:t};return D.runKernel(Ad,s,o)}const To=O({mean_:n_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lr(n,e="float32"){if(Pt(n),e==="complex64"){const r=lr(n,"float32"),s=lr(n,"float32");return Yn(r,s)}const t=Xn(q(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sr(n,e="float32"){if(Pt(n),e==="complex64"){const r=sr(n,"float32"),s=lr(n,"float32");return Yn(r,s)}const t=sl(q(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rb(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=N(n,"x","meshgrid",n instanceof Te?n.dtype:"float32");if(e===void 0)return[r];let s=N(e,"y","meshgrid",e instanceof Te?e.dtype:"float32");const o=q(r.shape),a=q(s.shape);return t==="xy"?(r=z(r,[1,-1]),s=z(s,[-1,1]),[ve(sr([a,1],r.dtype),r),ve(s,sr([1,o],s.dtype))]):(r=z(r,[-1,1]),s=z(s,[1,-1]),[ve(r,sr([1,a],r.dtype)),ve(sr([o,1],s.dtype),s)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_(n,e){let t=N(n,"a","minimum"),r=N(e,"b","minimum");[t,r]=ze(t,r),t.dtype==="bool"&&(t=Se(t,"int32"),r=Se(r,"int32")),xe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Dd,s)}const Ep=O({minimum_:r_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(n,e,t){E(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=N(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let i=0;i<r.rank;i++)E(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),E(e[i][0]>=0&&e[i][0]<=r.shape[i]-s&&e[i][1]>=0&&e[i][1]<=r.shape[i]-s,()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`);const o={paddings:e,mode:t},a={x:r};return D.runKernel(Fd,a,o)}const Ip=O({mirrorPad_:s_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(n,e){let t=N(n,"a","mod"),r=N(e,"b","mod");[t,r]=ze(t,r);const s={a:t,b:r};return D.runKernel(Pd,s)}const sb=O({mod_:o_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(n,e=null,t=!1){n=N(n,"x","moments");const r=He(e,n.shape),s=To(n,r,t);let o=s.shape;t||(o=Gt(s.shape,r));const a=on(pe(Se(n,"float32"),z(s,o))),i=To(a,r,t);return{mean:s,variance:i}}const ob=O({moments_:a_});function i_(n,e,t,r){const s=N(e,"data","multiRNNCell"),o=xo(t,"c","multiRNNCell"),a=xo(r,"h","multiRNNCell");let i=s;const u=[];for(let d=0;d<n.length;d++){const f=n[d](i,o[d],a[d]);u.push(f[0]),u.push(f[1]),i=f[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}const ab=O({multiRNNCell_:i_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(n,e,t,r=!1){const s=N(n,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const u={logits:a===1?z(s,[1,-1]):s},c={numSamples:e,seed:t,normalized:r},l=D.runKernel(Ld,u,c);return a===1?z(l,[l.size]):l}const ib=O({multinomial_:u_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c_(n,e){let t=N(n,"a","notEqual","string_or_numeric"),r=N(e,"b","notEqual","string_or_numeric");[t,r]=ze(t,r),xe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Md,s)}const kp=O({notEqual_:c_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l_(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:N(n,"indices","oneHot","int32")},i={dtype:s,depth:e,onValue:t,offValue:r};return D.runKernel(jd,a,i)}const Co=O({oneHot_:l_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(n){const t={x:N(n,"x","onesLike")};return D.runKernel(Gd,t)}const ub=O({onesLike_:d_});function f_(n,e){const t=N(n,"v1","outerProduct"),r=N(e,"v2","outerProduct");E(t.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${r.rank}.`);const s=z(t,[-1,1]),o=z(r,[1,-1]);return ve(s,o)}const cb=O({outerProduct_:f_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p_(n,e,t=0){const r=N(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},o={x:r};return D.runKernel(qd,o,s)}const Yr=O({pad_:p_});function h_(n,e,t=0){return E(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Yr(n,[e],t)}const lb=O({pad1d_:h_});function m_(n,e,t=0){return E(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Yr(n,e,t)}const db=O({pad2d_:m_});function g_(n,e,t=0){return E(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Yr(n,e,t)}const _p=O({pad3d_:g_});function y_(n,e,t=0){return E(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Yr(n,e,t)}const fb=O({pad4d_:y_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(n,e,t){const r=N(n,"x","spaceToBatchND");E(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),E(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),E(r.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+t[u-1][0]+t[u-1][1])%e[u-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},o={blockShape:e,paddings:t};return D.runKernel(Tf,s,o)}const Rp=O({spaceToBatchND_:x_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_(n,e,t,r,s,o,a){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");const i=N(n,"x","maxPool");let u=i,c=!1;i.rank===3&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(Bt(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const l=Xr(u.shape,e,o,s,r),d=[l.dilationHeight,l.dilationWidth];let f;r==="same"?f=w_([l.filterHeight,l.filterWidth],d):f=[[0,0],[0,0]];const h=d[0]===1&&d[1]===1,[m,g]=v_([l.inHeight,l.inWidth],d,f),y=h?r:"valid",b=h?u:Rp(u,d,m),S=(t==="avg"?()=>up(b,e,o,y,a):()=>Cp(b,e,o,y,a))(),C=h?S:cp(S,d,g);return c?z(C,[C.shape[1],C.shape[2],C.shape[3]]):C}function v_(n,e,t){const r=t.map(l=>l[0]),s=t.map(l=>l[1]),o=n.concat(r,s),a=e.map((l,d)=>(l-o[d]%l)%l),i=s.map((l,d)=>l+a[d]),u=e.map((l,d)=>[r[d],i[d]]),c=e.map((l,d)=>[0,a[d]]);return[u,c]}function w_(n,e){const r=n.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),s=r.map(a=>Math.floor(a/2)),o=r.map((a,i)=>a-s[i]);return r.map((a,i)=>[s[i],o[i]])}const pb=O({pool_:b_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_(n,e){const t=N(n,"x","prelu"),r=N(e,"alpha","prelu"),s={x:t,alpha:r};return D.runKernel(Xd,s)}const Ap=O({prelu_:$_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(n,e=null,t=!1){let r=N(n,"x","prod");r.dtype==="bool"&&(r=Se(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return D.runKernel(Yd,s,o)}const hb=O({prod_:S_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(n,e,t,r){const s=n.map((l,d)=>N(l,`tensors${d}`,"raggedGather","int32")),o=N(e,"paramsDenseValues","raggedGather"),a=N(t,"indices","raggedGather","int32"),i={paramsNestedSplits:s,paramsDenseValues:o,indices:a},u={outputRaggedRank:r},c=D.runKernel(Qd,i,u);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const mb=O({raggedGather_:T_});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(n,e,t){const r=N(n,"starts","raggedRange"),s=N(e,"limits","raggedRange",r.dtype),o=N(t,"deltas","raggedRange",r.dtype),a={starts:r,limits:s,deltas:o},i=D.runKernel(Zd,a);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}const gb=O({raggedRange_:C_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N_(n,e,t,r,s){const o=N(n,"shape","raggedTensorToTensor","int32"),a=N(e,"values","raggedTensorToTensor"),i=N(t,"defaultValue","raggedTensorToTensor",a.dtype),u=r.map((d,f)=>N(d,`tensors${f}`,"raggedTensorToTensor","int32")),c={shape:o,values:a,defaultValue:i,rowPartitionTensors:u},l={rowPartitionTypes:s};return D.runKernel(Jd,c,l)}const yb=O({raggedTensorToTensor_:N_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_(n,e,t){Pt(n);const r=q(n);let s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else if(t==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<r;o++)s[o]=e();return D.makeTensor(s,n,t)}const xb=O({rand_:E_});var mc={},I_={get exports(){return mc},set exports(n){mc=n}};(function(n){(function(e,t,r){function s(u){var c=this,l=i();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(u),c.s0<0&&(c.s0+=1),c.s1-=l(u),c.s1<0&&(c.s1+=1),c.s2-=l(u),c.s2<0&&(c.s2+=1),l=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function a(u,c){var l=new s(u),d=c&&c.state,f=l.next;return f.int32=function(){return l.next()*4294967296|0},f.double=function(){return f()+(f()*2097152|0)*11102230246251565e-32},f.quick=f,d&&(typeof d=="object"&&o(d,l),f.state=function(){return o(l,{})}),f}function i(){var u=4022871197,c=function(l){l=String(l);for(var d=0;d<l.length;d++){u+=l.charCodeAt(d);var f=.02519603282416938*u;u=f>>>0,f-=u,f*=u,u=f>>>0,f-=u,u+=f*4294967296}return(u>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.alea=a})(_n,n,!1)})(I_);var gc={},k_={get exports(){return gc},set exports(n){gc=n}};(function(n){(function(e,t,r){function s(i){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function a(i,u){var c=new s(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var f=c.next()>>>11,h=(c.next()>>>0)/4294967296,m=(f+h)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&o(l,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.xor128=a})(_n,n,!1)})(k_);var yc={},__={get exports(){return yc},set exports(n){yc=n}};(function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var f=c.next()>>>11,h=(c.next()>>>0)/4294967296,m=(f+h)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&o(l,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.xorwow=a})(_n,n,!1)})(__);var xc={},R_={get exports(){return xc},set exports(n){xc=n}};(function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var l=u.x,d=u.i,f,h;return f=l[d],f^=f>>>7,h=f^f<<24,f=l[d+1&7],h^=f^f>>>10,f=l[d+3&7],h^=f^f>>>3,f=l[d+4&7],h^=f^f<<7,f=l[d+7&7],f=f^f<<13,h^=f^f<<9,l[d]=h,u.i=d+1&7,h};function c(l,d){var f,h=[];if(d===(d|0))h[0]=d;else for(d=""+d,f=0;f<d.length;++f)h[f&7]=h[f&7]<<15^d.charCodeAt(f)+h[f+1&7]<<13;for(;h.length<8;)h.push(0);for(f=0;f<8&&h[f]===0;++f);for(f==8?h[7]=-1:h[f],l.x=h,l.i=0,f=256;f>0;--f)l.next()}c(u,i)}function o(i,u){return u.x=i.x.slice(),u.i=i.i,u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var f=c.next()>>>11,h=(c.next()>>>0)/4294967296,m=(f+h)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,l&&(l.x&&o(l,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.xorshift7=a})(_n,n,!1)})(R_);var bc={},A_={get exports(){return bc},set exports(n){bc=n}};(function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var l=u.w,d=u.X,f=u.i,h,m;return u.w=l=l+1640531527|0,m=d[f+34&127],h=d[f=f+1&127],m^=m<<13,h^=h<<17,m^=m>>>15,h^=h>>>12,m=d[f]=m^h,u.i=f,m+(l^l>>>16)|0};function c(l,d){var f,h,m,g,y,b=[],$=128;for(d===(d|0)?(h=d,d=null):(d=d+"\0",h=0,$=Math.max($,d.length)),m=0,g=-32;g<$;++g)d&&(h^=d.charCodeAt((g+32)%d.length)),g===0&&(y=h),h^=h<<10,h^=h>>>15,h^=h<<4,h^=h>>>13,g>=0&&(y=y+1640531527|0,f=b[g&127]^=h+y,m=f==0?m+1:0);for(m>=128&&(b[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)h=b[m+34&127],f=b[m=m+1&127],h^=h<<13,f^=f<<17,h^=h>>>15,f^=f>>>12,b[m]=h^f;l.w=y,l.X=b,l.i=m}c(u,i)}function o(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var f=c.next()>>>11,h=(c.next()>>>0)/4294967296,m=(f+h)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,l&&(l.X&&o(l,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.xor4096=a})(_n,n,!1)})(A_);var vc={},O_={get exports(){return vc},set exports(n){vc=n}};(function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var d=u.b,f=u.c,h=u.d,m=u.a;return d=d<<25^d>>>7^f,f=f-h|0,h=h<<24^h>>>8^m,m=m-d|0,u.b=d=d<<20^d>>>12^f,u.c=f=f-h|0,u.d=h<<16^f>>>16^m,u.a=m-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=i|0):c+=i;for(var l=0;l<c.length+20;l++)u.b^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var f=c.next()>>>11,h=(c.next()>>>0)/4294967296,m=(f+h)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&o(l,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.tychei=a})(_n,n,!1)})(O_);var wc={},D_={get exports(){return wc},set exports(n){wc=n}};const F_={},P_=Object.freeze(Object.defineProperty({__proto__:null,default:F_},Symbol.toStringTag,{value:"Module"})),L_=J$(P_);(function(n){(function(e,t,r){var s=256,o=6,a=52,i="random",u=r.pow(s,o),c=r.pow(2,a),l=c*2,d=s-1,f;function h(C,I,A){var L=[];I=I==!0?{entropy:!0}:I||{};var F=b(y(I.entropy?[C,S(t)]:C==null?$():C,3),L),V=new m(L),W=function(){for(var U=V.g(o),G=u,K=0;U<c;)U=(U+K)*s,G*=s,K=V.g(1);for(;U>=l;)U/=2,G/=2,K>>>=1;return(U+K)/G};return W.int32=function(){return V.g(4)|0},W.quick=function(){return V.g(4)/4294967296},W.double=W,b(S(V.S),t),(I.pass||A||function(U,G,K,te){return te&&(te.S&&g(te,V),U.state=function(){return g(V,{})}),K?(r[i]=U,G):U})(W,F,"global"in I?I.global:this==r,I.state)}function m(C){var I,A=C.length,L=this,F=0,V=L.i=L.j=0,W=L.S=[];for(A||(C=[A++]);F<s;)W[F]=F++;for(F=0;F<s;F++)W[F]=W[V=d&V+C[F%A]+(I=W[F])],W[V]=I;(L.g=function(U){for(var G,K=0,te=L.i,oe=L.j,le=L.S;U--;)G=le[te=d&te+1],K=K*s+le[d&(le[te]=le[oe=d&oe+G])+(le[oe]=G)];return L.i=te,L.j=oe,K})(s)}function g(C,I){return I.i=C.i,I.j=C.j,I.S=C.S.slice(),I}function y(C,I){var A=[],L=typeof C,F;if(I&&L=="object")for(F in C)try{A.push(y(C[F],I-1))}catch(V){}return A.length?A:L=="string"?C:C+"\0"}function b(C,I){for(var A=C+"",L,F=0;F<A.length;)I[d&F]=d&(L^=I[d&F]*19)+A.charCodeAt(F++);return S(I)}function $(){try{var C;return f&&(C=f.randomBytes)?C=C(s):(C=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(C)),S(C)}catch(L){var I=e.navigator,A=I&&I.plugins;return[+new Date,e,A,e.screen,S(t)]}}function S(C){return String.fromCharCode.apply(0,C)}if(b(r.random(),t),n.exports){n.exports=h;try{f=L_}catch(C){}}else r["seed"+i]=h})(typeof self!="undefined"?self:_n,[],Math)})(D_);var B_=mc,V_=gc,M_=yc,U_=xc,W_=bc,z_=vc,Qr=wc;Qr.alea=B_;Qr.xor128=V_;Qr.xorwow=M_;Qr.xorshift7=U_;Qr.xor4096=W_;Qr.tychei=z_;var Op=Qr;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G_=.001,bb=.1;function j_(n,e,t){return t==null&&(t=Dp()),$c(n,e,(r,s)=>Fp(r,s,t))}function Dp(){return D.backend.floatPrecision()===32?G_:bb}function $c(n,e,t){let r=!0;if((rt(n)||rt(e))&&(r=!1),rt(n)&&rt(e)&&(r=!0),r){const a=n.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(n)&&Array.isArray(e)){const a=Fn(n),i=Fn(e);if(!Me(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}const s=rt(n)?n:Dn(n),o=rt(e)?e:Dn(e);if(s.length!==o.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${o.length}.
Actual:   ${s}.
Expected: ${o}.`);for(let a=0;a<o.length;++a){const i=s[a],u=o[a];if(!t(i,u))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${u}.
Actual:   ${s}.
Expected: ${o}.`)}typeof expect!="undefined"&&expect().nothing()}function H_(n,e){n().then(()=>e.fail(),()=>e()),typeof expect!="undefined"&&expect().nothing()}function q_(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return Hn(n)||Hn(n[0])||Hn(e)||Hn(e[0])?$c(n,t,(r,s)=>r==s):$c(n,e,(r,s)=>Fp(r,s,0))}function K_(n,e,t){if(t==null&&(t=Dp()),!Fp(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect!="undefined"&&expect().nothing()}function Fp(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function X_(n,e,t){for(let r=0;r<n.length;r++)if(n[r]<e||n[r]>t)throw new Error(`Value out of range:${n[r]} low: ${e}, high: ${t}`)}function Y_(n,e){const t=new Float32Array(n),r=new Float32Array(e);if(t.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${t.length}`);for(let s=0;s<r.length;s++)if(t[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${t[s]} instead`)}function vb(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?vb(t):n[e]=qn(t)}return n}function Q_(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",r=>t(e)),e.load()})}function Z_(n){return H(this,null,function*(){yield n.play(),"requestVideoFrameCallback"in n&&(yield new Promise(e=>{n.requestVideoFrameCallback(e)}))})}const J_=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:bb,createVideoElement:Q_,encodeStrings:vb,expectArrayBuffersEqual:Y_,expectArraysClose:j_,expectArraysEqual:q_,expectNumbersClose:K_,expectPromiseToFail:H_,expectValuesInRange:X_,play:Z_,testEpsilon:Dp},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pp{constructor(e,t,r,s,o){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=Op.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,o,a;do s=2*this.random()-1,o=2*this.random()-1,a=s*s+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class eR{constructor(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;const o=s||Math.random();this.randu=Op.alea(o.toString()),this.randn=new Pp(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,s,o,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,r=.5*e+this.d*(1-a+Math.log(a)),o=this.randu(),o<t||Math.log(o)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class tR{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Op.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nR(n,e,t=1,r="float32",s){if(Pt(n),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const o=new eR(e,t,r,s),a=Ue(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const wb=O({randomGamma_:nR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rR(n,e=0,t=1,r,s){if(Pt(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const o=new Pp(e,t,r,!1,s),a=Ue(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Lp=O({randomNormal_:rR});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Lp(n,0,1,e,t)}const $b=O({randomStandardNormal_:sR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oR(n,e=0,t=1,r="float32",s){Pt(n);const o=Ue(n,r),a=new tR(e,t,null,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Bp=O({randomUniform_:oR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dr(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return D.runKernel(ef,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aR(n){const t={input:N(n,"input","real")};return D.runKernel(tf,t)}const vs=O({real_:aR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iR(n){const t={x:N(n,"x","reciprocal")};return D.runKernel(nf,t)}const Sb=O({reciprocal_:iR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uR(n){const t={x:N(n,"x","relu")};return D.runKernel(rf,t)}const Ko=O({relu_:uR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(n){const t={x:N(n,"x","relu6")};return D.runKernel(uf,t)}const Vp=O({relu6_:cR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(n,e){const r={x:N(n,"x","reverse")},s={dims:e};return D.runKernel(cf,r,s)}const fr=O({reverse_:lR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dR(n){const e=N(n,"x","reverse");return E(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),fr(e,0)}const Tb=O({reverse1d_:dR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR(n,e){const t=N(n,"x","reverse");return E(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),fr(t,e)}const Cb=O({reverse2d_:fR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(n,e){const t=N(n,"x","reverse");return E(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),fr(t,e)}const Nb=O({reverse3d_:pR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hR(n,e){const t=N(n,"x","reverse");return E(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),fr(t,e)}const Eb=O({reverse4d_:hR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR(n){const t={x:N(n,"x","round")};return D.runKernel(lf,t)}const Mp=O({round_:mR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(n){const t={x:N(n,"x","rsqrt","float32")};return D.runKernel(df,t)}const Ib=O({rsqrt_:gR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR(n){const t={x:N(n,"x","selu")};return D.runKernel(mf,t)}const kb=O({selu_:yR});function xR(n,e,t,r,s,o=[1,1],a="NHWC"){const i=N(n,"x","separableConv2d"),u=N(e,"depthwiseFilter","separableConv2d"),c=N(t,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(i.rank===3&&(d=!0,l=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),E(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),E(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),E(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),E(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const f=u.shape[2],h=u.shape[3];E(c.shape[2]===f*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${f*h}, but got ${c.shape[2]}.`);const m=Ii(l,u,r,s,a,o),y=Go(m,c,1,"valid",a);return d?z(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const _b=O({separableConv2d_:xR});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bR(n,e){return H(this,null,function*(){const t=N(n,"x","setdiff1d"),r=N(e,"y","setdiff1d");E(t.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${r.dtype}).`),E(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),E(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=yield t.data(),o=yield r.data(),a=new Set(o);let i=0;for(let l=0;l<s.length;l++)a.has(s[l])||i++;const u=new gs([i],t.dtype),c=new gs([i],"int32");for(let l=0,d=0;l<s.length;l++)a.has(s[l])||(u.values[d]=s[l],c.values[d]=l,d++);return[u.toTensor(),c.toTensor()]})}const Rb=bR;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(n){const t={x:N(n,"x","sign")};return D.runKernel(bf,t)}const Ab=O({sign_:vR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR(n){const t={x:N(n,"x","sin","float32")};return D.runKernel(yf,t)}const Ob=O({sin_:wR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(n){const t={x:N(n,"x","sinh")};return D.runKernel(xf,t)}const Db=O({sinh_:$R});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n,e,t){const r=N(n,"x","slice1d");return E(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Ee(r,[e],[t])}const Fb=O({slice1d_:SR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TR(n,e,t){const r=N(n,"x","slice2d");return E(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Ee(r,e,t)}const Pb=O({slice2d_:TR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CR(n,e,t){const r=N(n,"x","slice3d");return E(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Ee(r,e,t)}const Lb=O({slice3d_:CR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n,e,t){const r=N(n,"x","slice4d");return E(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Ee(r,e,t)}const Bb=O({slice4d_:NR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ER(n,e=-1){const t=N(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return D.runKernel(Nf,r,s)}const Vb=O({softmax_:ER});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(n){E(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(nd,e)}const Ai=O({fft_:IR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(n){E(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(fd,e)}const No=O({ifft_:kR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _R(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=z(n,[t,e]);r=No(s)}else{const s=[t,2*(e-1)],o=z(vs(n),[t,e]),a=z(qo(n),[t,e]),i=fr(Ee(o,[0,1],[t,e-2]),1),u=Y(fr(Ee(a,[0,1],[t,e-2]),1),de(-1)),c=dt([o,i],1),l=dt([a,u],1),d=z(Yn(c,l),[s[0],s[1]]);r=No(d)}if(r=vs(r),n.rank===3&&n.shape[0]!==0){const s=r,o=n.shape[0];r=z(r,[o,r.shape[0]/o,r.shape[1]]),s.dispose()}return r}const Up=O({irfft_:_R});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(n,e,t=0){const s={x:N(n,"x","split")},o={numOrSizeSplits:e,axis:t};return D.runKernel(Cf,s,o)}const ws=O({split_:RR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(n,e){E(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const m=n.shape.map(y=>0),g=n.shape.map(y=>y);g[n.shape.length-1]=e,s=Ee(n,m,g),t=e}else if(e!=null&&e>t){const m=n.shape.map(g=>g);m[n.shape.length-1]=e-t,s=dt([n,lr(m)],n.shape.length-1),t=e}else s=n;const o=Dt(s),a=z(Yn(s,o),[r,t]),i=Ai(a),u=Math.floor(t/2)+1,c=vs(i),l=qo(i),d=ws(c,[u,t-u],c.shape.length-1),f=ws(l,[u,t-u],l.shape.length-1),h=s.shape.slice();return h[s.shape.length-1]=u,z(Yn(d[0],f[0]),h)}const Oi=O({rfft_:AR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(n,e){let t=N(n,"a","squaredDifference"),r=N(e,"b","squaredDifference");[t,r]=ze(t,r),xe(t.shape,r.shape);const s={a:t,b:r},o={};return D.runKernel(Af,s,o)}const Wp=O({squaredDifference_:OR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n,e){const t=N(n,"x","squeeze","string_or_numeric");return z(t,Qn(t.shape,e).newShape)}const tn=O({squeeze_:DR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(n,e=0){const t=xo(n,"tensors","stack","string_or_numeric");E(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&E(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return D.runKernel(Hd,r,s)}const Bn=O({stack_:FR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(n,e=0){const r={x:N(n,"x","step")},s={alpha:e};return D.runKernel(Hf,r,s)}const zp=O({step_:PR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(n,e,t,r,s=0,o=0,a=0,i=0,u=0){const l={x:N(n,"x","stridedSlice","string_or_numeric")},d={begin:e,end:t,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return D.runKernel(Of,l,d)}const Mb=O({stridedSlice_:LR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(n){const t={x:N(n,"x","tan","float32")};return D.runKernel(Bf,t)}const Ub=O({tan_:BR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nn(n,e){Hr(n);const t=Fn(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return pr(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(n,e,t){if(Hr(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=Fn(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return pr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gp(n,e,t){if(Hr(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=Fn(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return pr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wb(n,e,t){if(Hr(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=Fn(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return pr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zb(n,e,t){if(Hr(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=Fn(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return pr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gb(n,e,t){if(Hr(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=Fn(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,pr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VR(n,e=1,t=!0){const r=N(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},a={k:e,sorted:t},[i,u]=D.runKernel(Mf,o,a);return{values:i,indices:u}}const jb=O({topk_:VR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(n,e=0,t=1,r,s){if(Pt(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new Pp(e,t,r,!0,s),a=Ue(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Hb=O({truncatedNormal_:MR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(n,e=0){const t=N(n,"x","unique","string_or_numeric");E(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[o,a]=D.runKernel(Wf,r,s);return{values:o,indices:a}}const qb=O({unique_:UR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(n,e,t){const r=N(n,"x","unsortedSegmentSum"),s=N(e,"segmentIds","unsortedSegmentSum","int32");E(Fr(t),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},a={numSegments:t};return D.runKernel(Gf,o,a)}const Kb=O({unsortedSegmentSum_:WR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zR(n,e=0){const t=N(n,"x","unstack","string_or_numeric");E(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return D.runKernel(zf,r,s)}const hr=O({unstack_:zR});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xb(n,e){return Ri(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yb(n,e=!0,t,r){return D.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jp(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const r=Ue(n,"int32"),s=Ue([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const a=r.indexToLoc(t[o]),i=o*n.length;s.values.set(a,i)}return s.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(n){return H(this,null,function*(){const e=N(n,"condition","whereAsync","bool"),t=yield e.data(),r=jp(e.shape,t);return n!==e&&e.dispose(),r})}const Hp=GR;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n,e,t){return H(this,null,function*(){const r=N(n,"tensor","boolMask"),s=N(e,"mask","boolMask","bool"),o=t==null?0:t,a=s.rank,i=r.shape;E(a>0,()=>"mask cannot be scalar"),ft(i.slice(o,o+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let g=o;g<o+a;g++)u*=i[g];const c=i.slice(0,o).concat([u],i.slice(o+a)),l=z(r,c),d=z(s,[-1]),f=yield Hp(d),h=tn(f,[1]),m=yp(l,h,o);return n!==r&&r.dispose(),e!==s&&s.dispose(),h.dispose(),l.dispose(),d.dispose(),f.dispose(),m})}const Qb=jR;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n,e,t){const r=N(n,"x","transpose");if(e==null&&(e=r.shape.map((a,i)=>i).reverse()),E(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{E(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return r.dtype==="complex64"?ie(()=>{let a=vs(r),i=qo(r);return a=D.runKernel(uo,{x:a},o),i=D.runKernel(uo,{x:i},o),t&&(i=An(i)),Yn(a,i)}):D.runKernel(uo,s,o)}const Eo=O({transpose_:HR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n,e,t,r,s=!0){const o=N(n,"v","movingAverage"),a=N(e,"x","movingAverage"),i=N(t,"decay","movingAverage");Fx(o,a),E(Me(o.shape,a.shape),()=>"Shape mismatch in v and x");const u=de(1),c=pe(u,i);let l=Y(pe(a,o),c);if(s){E(r!=null,()=>"When using zeroDebias: true, step is required.");const d=N(r,"step","movingAverage");l=Ie(l,pe(u,xs(i,d)))}return ae(o,l)}const Zb=O({movingAverage_:qR});function qp(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(o+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(o+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(o+` update.rank != ${s+n.length-r}`);for(let a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(o+` updates.shape[${a+s}] (${t.shape[a+s]}) != shape[${a+s}] (${n[a+s]})`)}function Kp(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}qp(t,e,n)}function Di(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=t.length;let a=1;for(let d=s;d<o;++d)a*=t[d];const i=s<1?1:s,u=q(e.shape)/i,c=[...Je(t.slice(0,s)),1],l=q(t);return{sliceRank:s,numUpdates:u,sliceSize:a,strides:c,outputSize:l}}const KR=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:Di,validateInput:Kp,validateUpdateShape:qp},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(n,e,t){Pt(t);const r=N(n,"indices","scatterND","int32"),s=N(e,"updates","scatterND");Kp(s,r,t);const o={indices:r,updates:s},a={shape:t};return D.runKernel(ff,o,a)}const Jb=O({scatterND_:XR});function YR(n,e,t,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const s=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(n,e,t,r=0){Pt(t);const s=N(n,"sparseIndices","sparseToDense","int32"),o=N(e,"sparseValues","sparseToDense","string_or_numeric"),a=N(r,"defaultValue","sparseToDense",o.dtype);YR(s,o,t,a);const i={sparseIndices:s,sparseValues:o,defaultValue:a},u={outputShape:t};return D.runKernel(Rf,i,u)}const e1=O({sparseToDense_:QR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(n,e){const t=N(e,"indices","gatherND","int32"),s={params:N(n,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(cd,s)}const t1=O({gatherND_:ZR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JR(n,e){if(e==null)return n.shape.slice();if(Me(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(n,e,t,r){const s=N(n,"x","dropout");if(E(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),E(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Te?s.clone():s;const o=JR(s,t),a=1-e,i=Ie(gp(ae(Bp(o,0,1,"float32",r),a)),a);return Y(s,i)}const n1=O({dropout_:eA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xp(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Fi(n,e,t){const r=1-n%2,s=new Float32Array(n);for(let o=0;o<n;++o){const a=2*Math.PI*o/(n+r-1);s[o]=e-t*Math.cos(a)}return nn(s,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n,e,t=1){return H(this,null,function*(){const r=N(n,"predictions","inTopK"),s=N(e,"targets","inTopK");E(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),E(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),ft(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];E(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const a=yield r.data(),i=yield s.data(),[u,c]=[a.length/o,o],l=On("bool",u);for(let d=0;d<u;d++){const f=d*c,h=a.subarray(f,f+c),m=[];for(let g=0;g<h.length;g++)m.push({value:h[g],index:g});m.sort((g,y)=>y.value-g.value),l[d]=0;for(let g=0;g<t;g++)if(m[g].index===i[d]){l[d]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),sn(l,s.shape,"bool")})}const r1=tA;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n,e,t,r,s,o="NHWC",a){let i=n;n.rank===3&&(i=z(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=z(e,[1,e.shape[0],e.shape[1],e.shape[2]])),E(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),E(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),E(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];E(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),E(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),an("conv2dDerFilter",s,a);const d={x:i,dy:u},f={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,filterShape:t};return D.runKernel(Al,d,f)}const rA=O({conv2DBackpropFilter_:nA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pi(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return Y(n,zp(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Li(n,e){let t=e;const r=dp(n.shape,e.shape);return r.length>0&&(t=_e(t,r)),z(t,n.shape)}function Bi(n,e,t,r){if(e==="linear")return n;if(e==="relu")return Ko(n);if(e==="elu")return fp(n);if(e==="relu6")return Vp(n);if(e==="prelu")return Ap(n,t);if(e==="leakyrelu")return bp(n,r);if(e==="sigmoid")return Rn(n);throw new Error(`Unknown fused activation ${e}.`)}const Vi=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",Vi(D.state.gradientDepth,u)===!1){E(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let A=Go(n,e,t,r,s,o,a);return i!=null&&(A=ae(A,i)),Bi(A,u,c,l)}const d=N(n,"x","conv2d","float32"),f=N(e,"filter","conv2d","float32");let h=d,m=!1;d.rank===3&&(m=!0,h=z(d,[1,d.shape[0],d.shape[1],d.shape[2]])),E(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),E(f.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${f.rank}.`),an("fused conv2d",r,a);const g=s==="NHWC"?h.shape[3]:h.shape[1];E(f.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`),E(Bt(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const y=zt(h.shape,f.shape,t,o,r,a);let b;i!=null&&(b=N(i,"bias","fused conv2d"),[b]=ze(b,d),s==="NHWC"?xe(y.outShape,b.shape):(E(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),E(b.shape.length===0||b.shape[0]===y.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let $;if(c!=null){const A=c.shape;if(E(A.length<=1||A.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${A.length}.`),A.length===1)E(A[0]===1||A[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${A}) is not compatible with the number of output channels (${y.outChannels}).`);else if(A.length===3)try{xe(A,y.outShape)}catch(L){const F=`Error in fused conv2d: PReLU activation weights (${A}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(F)}$=N(c,"prelu weights","fused conv2d")}const S=(A,L)=>{E(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[F,V,W,U]=L,G=Pi(A,W,u);E(wo(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const K=T0(V.shape,G,F,t,r),te=rA(V,G,F.shape,t,r),oe=[K,te];if(U!=null){const le=Li(U,G);oe.push(le)}return oe},C={x:h,filter:f,bias:b,preluActivationWeights:$},I={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?Ln((L,F,V)=>{let W=D.runKernel(ei,C,I);return V([F,L,W]),m&&(W=z(W,[W.shape[1],W.shape[2],W.shape[3]])),{value:W,gradFunc:S}})(h,f):Ln((L,F,V,W)=>{let U=D.runKernel(ei,C,I);return W([F,L,U,V]),m&&(U=z(U,[U.shape[1],U.shape[2],U.shape[3]])),{value:U,gradFunc:S}})(h,f,b)}const oA=O({fusedConv2d_:sA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n,e,t,r,s,o=[1,1],a){let i=n;n.rank===3&&(i=z(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:i,dy:u},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:t};return D.runKernel(Gl,c,l)}const iA=O({depthwiseConv2dNativeBackpropFilter_:aA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(n,e,t,r,s,o=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:i,filter:t},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:n},d=D.runKernel(jl,c,l);return u?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const cA=O({depthwiseConv2dNativeBackpropInput_:uA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(Vi(D.state.gradientDepth,u)===!1){let I=Ii(n,e,t,r,s,o,a);return i!=null&&(I=ae(I,i)),Bi(I,u,c,l)}const d=N(n,"x","depthwiseConv2d","float32"),f=N(e,"filter","depthwiseConv2d","float32");let h=d,m=!1;d.rank===3&&(m=!0,h=z(d,[1,d.shape[0],d.shape[1],d.shape[2]])),E(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),E(f.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),E(h.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),o==null&&(o=[1,1]),E(Bt(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),an("fused depthwiseConv2d",r,a);const g=zt(h.shape,f.shape,t,o,r,a,!0);let y;i!=null&&(y=N(i,"bias","fused conv2d"),[y]=ze(y,d),xe(g.outShape,y.shape));let b;c!=null&&(b=N(c,"prelu weights","fused depthwiseConv2d"));const $=(I,A)=>{E(wo(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[L,F,V,W]=A,U=Pi(I,V,u),G=cA(F.shape,U,L,t,r,o,a),K=iA(F,U,L.shape,t,r,o,a);if(W!=null){const te=Li(y,U);return[G,K,te]}return[G,K]},S={x:h,filter:f,bias:y,preluActivationWeights:b},C={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?Ln((A,L,F)=>{let V=D.runKernel(ti,S,C);return F([L,A,V]),m&&(V=z(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:$}})(h,f):Ln((A,L,F,V)=>{let W=D.runKernel(ti,S,C);return V([L,A,W,F]),m&&(W=z(W,[W.shape[1],W.shape[2],W.shape[3]])),{value:W,gradFunc:$}})(h,f,y)}const dA=O({fusedDepthwiseConv2d_:lA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fA({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(Vi(D.state.gradientDepth,o)===!1){let U=ve(n,e,t,r);return s!=null&&(U=ae(U,s)),Bi(U,o,a,i)}let u=N(n,"a","fused matMul"),c=N(e,"b","fused matMul");[u,c]=ze(u,c);const l=t?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],f=t?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?c.shape[c.rank-2]:c.shape[c.rank-1],m=u.shape.slice(0,-2),g=c.shape.slice(0,-2),y=q(m),b=q(g);E(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${t} and transposeB=${r} must match.`);const S=xe(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([f,h]),C=t?z(u,[y,l,f]):z(u,[y,f,l]),I=r?z(c,[b,h,d]):z(c,[b,d,h]);let A;s!=null&&(A=N(s,"bias","fused matMul"),[A]=ze(A,u),xe(S,A.shape));let L;a!=null&&(L=N(a,"prelu weights","fused matMul"));const F=(U,G)=>{const[K,te,oe,le]=G,fe=Pi(z(U,oe.shape),oe,o);let me,$e;if(!t&&!r?(me=ve(fe,te,!1,!0),$e=ve(K,fe,!0,!1)):!t&&r?(me=ve(fe,te,!1,!1),$e=ve(fe,K,!0,!1)):t&&!r?(me=ve(te,fe,!1,!0),$e=ve(K,fe,!1,!1)):(me=ve(te,fe,!0,!0),$e=ve(fe,K,!0,!0)),s!=null){const tt=Li(le,fe);return[me,$e,tt]}else return[me,$e]},V={a:C,b:I,bias:A,preluActivationWeights:L},W={transposeA:t,transposeB:r,activation:o,leakyreluAlpha:i};return s==null?Ln((G,K,te)=>{const oe=D.runKernel(Ja,V,W);return te([G,K,oe]),{value:z(oe,S),gradFunc:F}})(C,I):Ln((G,K,te,oe)=>{const le=D.runKernel(Ja,V,W);return oe([G,K,le,te]),{value:z(le,S),gradFunc:F}})(C,I,A)}const pA=O({fusedMatMul_:fA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s1=Object.freeze(Object.defineProperty({__proto__:null,conv2d:oA,depthwiseConv2d:dA,matMul:pA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hA(n){return Fi(n,.54,.46)}const mA=O({hammingWindow_:hA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n){return Fi(n,.5,.5)}const o1=O({hannWindow_:gA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(n,e,t,r=!1,s=0){let o=0;const a=[];for(;o+e<=n.size;)a.push(Ee(n,o,e)),o+=t;if(r)for(;o<n.size;){const i=o+e-n.size,u=dt([Ee(n,o,e-i),ks([i],s)]);a.push(u),o+=t}return a.length===0?Dr([],[0,e]):z(dt(a),[a.length,e])}const a1=O({frame_:yA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n,e,t,r,s=o1){r==null&&(r=Xp(e));const o=a1(n,e,t),a=Y(o,s(e));return Oi(a,r)}const bA=O({stft_:xA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n,e,t,r,s="bilinear",o=0){const a=N(n,"image","cropAndResize"),i=N(e,"boxes","cropAndResize","float32"),u=N(t,"boxInd","cropAndResize","int32"),c=i.shape[0];E(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),E(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),E(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),E(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),E(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),E(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const l={image:a,boxes:i,boxInd:u},d={method:s,extrapolationValue:o,cropSize:r};return D.runKernel(Ml,l,d)}const wA=O({cropAndResize_:vA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n){const e=N(n,"image","flipLeftRight","float32");E(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return D.runKernel(sd,t,{})}const SA=O({flipLeftRight_:$A});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n){const e=N(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];E(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),E(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,fs(e,s)}const CA=O({grayscaleToRGB_:TA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n,e,t=0,r=.5){const s=N(n,"image","rotateWithOffset","float32");E(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},a={radians:e,fillValue:t,center:r};return D.runKernel(qf,o,a)}const EA=O({rotateWithOffset_:NA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rs(n,e,t,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return t=Math.min(t,a),E(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),E(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),E(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),E(e.rank===1,()=>"scores must be a 1D tensor"),E(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),E(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=N(n,"boxes","nonMaxSuppression","float32"),a=N(e,"scores","nonMaxSuppression","float32"),i=Rs(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return D.runKernel(Ud,{boxes:o,scores:a},u)}const kA=O({nonMaxSuppression_:IA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n,e,t){const r=RA(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function RA(n,e,t){return OA(n,e,t||AA)}function AA(n,e){return n>e?1:n<e?-1:0}function OA(n,e,t){let r=0,s=n.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=t(e,n[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yp(n,e,t,r,s){return Jp(n,e,t,r,s,0)}function Qp(n,e,t,r,s,o){return Jp(n,e,t,r,s,0,!1,o,!0)}function Zp(n,e,t,r,s,o){return Jp(n,e,t,r,s,o,!0)}function Jp(n,e,t,r,s,o,a=!1,i=!1,u=!1){const c=[];for(let y=0;y<e.length;y++)e[y]>s&&c.push({score:e[y],boxIndex:y,suppressBeginIndex:0});c.sort(yg);const l=o>0?-.5/o:0,d=[],f=[];for(;d.length<t&&c.length>0;){const y=c.pop(),{score:b,boxIndex:$,suppressBeginIndex:S}=y;if(b<s)break;let C=!1;for(let I=d.length-1;I>=S;--I){const A=DA(n,$,d[I]);if(A>=r){C=!0;break}if(y.score=y.score*FA(r,l,A),y.score<=s)break}y.suppressBeginIndex=d.length,C||(y.score===b?(d.push($),f.push(y.score)):y.score>s&&_A(c,y,yg))}const h=d.length,m=t-h;i&&m>0&&(d.push(...new Array(m).fill(0)),f.push(...new Array(m).fill(0)));const g={selectedIndices:d};return a&&(g.selectedScores=f),u&&(g.validOutputs=h),g}function DA(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),f=Math.max(s[1],s[3]),h=(i-o)*(u-a),m=(d-c)*(f-l);if(h<=0||m<=0)return 0;const g=Math.max(o,c),y=Math.max(a,l),b=Math.min(i,d),$=Math.min(u,f),S=Math.max(b-g,0)*Math.max($-y,0);return S/(h+m-S)}function FA(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function yg(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(o,a,i){return H(this,arguments,function*(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const u=N(n,"boxes","nonMaxSuppressionAsync"),c=N(e,"scores","nonMaxSuppressionAsync"),l=Rs(u,c,t,r,s);t=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold;const d=yield Promise.all([u.data(),c.data()]),f=d[0],h=d[1],{selectedIndices:m}=Yp(f,h,t,r,s);return u!==n&&u.dispose(),c!==e&&c.dispose(),nn(m,"int32")})}const LA=PA;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=N(n,"boxes","nonMaxSuppression"),i=N(e,"scores","nonMaxSuppression"),u=Rs(a,i,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:a,scores:i},l={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o},d=D.runKernel(zd,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}const VA=O({nonMaxSuppressionWithScore_:BA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(a,i,u){return H(this,arguments,function*(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const c=N(n,"boxes","nonMaxSuppressionAsync"),l=N(e,"scores","nonMaxSuppressionAsync"),d=Rs(c,l,t,r,s,o);t=d.maxOutputSize,r=d.iouThreshold,s=d.scoreThreshold,o=d.softNmsSigma;const f=yield Promise.all([c.data(),l.data()]),h=f[0],m=f[1],{selectedIndices:g,selectedScores:y}=Zp(h,m,t,r,s,o);return c!==n&&c.dispose(),l!==e&&l.dispose(),{selectedIndices:nn(g,"int32"),selectedScores:nn(y)}})}const UA=MA;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=N(n,"boxes","nonMaxSuppression"),i=N(e,"scores","nonMaxSuppression"),u=Rs(a,i,t,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,f={boxes:a,scores:i},h={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:o},m=D.runKernel(Wd,f,h);return{selectedIndices:m[0],validOutputs:m[1]}}const zA=O({nonMaxSuppressionPadded_:WA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(a,i,u){return H(this,arguments,function*(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const c=N(n,"boxes","nonMaxSuppressionAsync"),l=N(e,"scores","nonMaxSuppressionAsync"),d=Rs(c,l,t,r,s,null),f=d.maxOutputSize,h=d.iouThreshold,m=d.scoreThreshold,[g,y]=yield Promise.all([c.data(),l.data()]),{selectedIndices:b,validOutputs:$}=Qp(g,y,f,h,m,o);return c!==n&&c.dispose(),l!==e&&l.dispose(),{selectedIndices:nn(b,"int32"),validOutputs:de($,"int32")}})}const jA=GA;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n,e,t=!1,r=!1){const s=N(n,"images","resizeBilinear");E(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),E(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),E(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=z(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=D.runKernel(af,i,u);return a?z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const qA=O({resizeBilinear_:HA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(n,e,t=!1,r=!1){const s=N(n,"images","resizeNearestNeighbor");E(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),E(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),E(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),E(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=z(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=D.runKernel(of,i,u);return a?z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const XA=O({resizeNearestNeighbor_:KA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(n,e="binary",t=!1,r=.5){const s=N(n,"image","threshold"),o=.2989,a=.587,i=.114,u=s.shape[0]*s.shape[1];let c=Y(nn([r]),255),l,d,f,h;if(E(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),E(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),E(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),E(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[l,d,f]=ws(s,[1,1,1],-1);const y=Y(l,o),b=Y(d,a),$=Y(f,i);h=ae(ae(y,b),$)}else h=n;if(e==="otsu"){const y=lp(Se(Mp(h),"int32"),sn([]),256);c=QA(y,u)}const m=t?ki(h,c):_s(h,c);return Se(Y(m,255),"int32")}function QA(n,e){let t=nn([-1]),r=nn([0]),s=nn([0]),o,a,i,u,c,l;for(let d=0;d<n.size-1;d++){o=Ee(n,0,d+1),a=Ee(n,d+1),c=Ie(_e(o),e),l=Ie(_e(a),e);const f=_e(Y(o,dr(0,o.size)));i=Ie(f,_e(o));const h=ks(a.shape,o.size),m=ae(dr(0,a.size),h),g=Y(a,m);u=Ie(_e(g),_e(a));const y=pe(i,u),b=pe(i,u),$=Y(c,l);s=Y(Y($,y),b);const S=_s(s,r);r=Mr(S,s,r),t=Mr(S,nn([d]),t)}return t}const ZA=O({threshold_:YA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(n,e,t="nearest",r="constant",s=0,o){const a=N(n,"image","transform","float32"),i=N(e,"transforms","transform","float32");E(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),E(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:a,transforms:i},c={interpolation:t,fillMode:r,fillValue:s,outputShape:o};return D.runKernel(Uf,u,c)}const eO=O({transform_:JA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(n,e,t){E(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),E(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);const r=N(n,"a","bandPart");E(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,a]=r.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=o),t<0&&(t=a);const i=z(dr(0,o,1,"int32"),[-1,1]),u=dr(0,a,1,"int32"),c=pe(i,u),l=So(ki(c,de(+e,"int32")),xp(c,de(-t,"int32"))),d=lr([o,a],r.dtype);return z(Bn(hr(z(r,[-1,o,a])).map(f=>Mr(l,f,d))),s)}const nO=O({bandPart_:tO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(n){let e;if(Array.isArray(n)){e=!1,E(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let o=1;o<n.length;++o)E(n[o].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${s})`)}else e=!0,n=ws(n,n.shape[0],0).map(s=>tn(s,[0]));E(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(D.tidy(()=>{let o=r[s];if(s>0)for(let a=0;a<s;++a){const i=Y(_e(Y(t[a],o)),t[a]);o=pe(o,i)}return Ie(o,Ho(o,"euclidean"))}));return e?Bn(t,0):t}const sO=O({gramSchmidt_:rO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n,e=!1){if(E(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return xg(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((u,c)=>u*c),r=hr(z(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],o=[];r.forEach(u=>{const[c,l]=xg(u,e);s.push(c),o.push(l)});const a=z(Bn(s,0),n.shape),i=z(Bn(o,0),n.shape);return[a,i]}}function xg(n,e=!1){return D.tidy(()=>{E(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=mp(t),o=Kn(n);const a=Dr([[1]],[1,1]);let i=Kn(a);const u=t>=r?r:t;for(let c=0;c<u;++c){const l=o,d=i,f=s;[i,o,s]=D.tidy(()=>{const h=Ee(o,[c,c],[t-c,1]),m=Ho(h),g=Ee(o,[c,c],[1,1]),y=Mr(_s(g,0),Dr([[-1]]),Dr([[1]])),b=pe(g,Y(y,m)),$=Ie(h,b);$.shape[0]===1?i=Kn(a):i=dt([a,Ee($,[1,0],[$.shape[0]-1,$.shape[1]])],0);const S=An(Ie(ve(y,b),m)),C=Ee(o,[c,0],[t-c,r]),I=Y(S,i),A=Eo(i);if(c===0)o=pe(C,ve(I,ve(A,C)));else{const V=pe(C,ve(I,ve(A,C)));o=dt([Ee(o,[0,0],[c,r]),V],0)}const L=Eo(I),F=Ee(s,[0,c],[t,s.shape[1]-c]);if(c===0)s=pe(F,ve(ve(F,i),L));else{const V=pe(F,ve(ve(F,i),L));s=dt([Ee(s,[0,0],[t,c]),V],1)}return[i,o,s]}),Ct([l,d,f])}return!e&&t>r&&(s=Ee(s,[0,0],[t,r]),o=Ee(o,[0,0],[r,r])),[s,o]})}const aO=O({qr_:oO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xt;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(xt||(xt={}));function iO(n,e,t=xt.SUM_BY_NONZERO_WEIGHTS){const r=N(n,"losses","computeWeightedLoss");let s=null;e!=null&&(s=N(e,"weights","computeWeightedLoss"));const o=s==null?r:Y(r,s);if(t===xt.NONE)return o;if(t===xt.SUM)return _e(o);if(t===xt.MEAN){if(s==null)return To(o);{const a=r.size/s.size,i=Ie(_e(o),_e(s));return a>1?Ie(i,de(a)):i}}if(t===xt.SUM_BY_NONZERO_WEIGHTS){if(s==null)return Ie(_e(o),de(r.size));{const a=Y(s,sr(r.shape)),i=Se(_e(kp(a,de(0))),"float32");return Ie(_e(o),i)}}throw Error(`Unknown reduction: ${t}`)}const Zn=O({computeWeightedLoss_:iO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n,e,t,r=xt.SUM_BY_NONZERO_WEIGHTS){const s=N(n,"labels","absoluteDifference"),o=N(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=N(t,"weights","absoluteDifference")),ft(s.shape,o.shape,"Error in absoluteDifference: ");const i=_t(pe(s,o));return Zn(i,a,r)}const cO=O({absoluteDifference_:uO});function lO(n,e,t,r,s=xt.SUM_BY_NONZERO_WEIGHTS){const o=N(n,"labels","cosineDistance"),a=N(e,"predictions","cosineDistance");let i=null;r!=null&&(i=N(r,"weights","cosineDistance")),ft(o.shape,a.shape,"Error in cosineDistance: ");const u=de(1),c=pe(u,_e(Y(o,a),t,!0));return Zn(c,i,s)}const dO=O({cosineDistance_:lO});function fO(n,e,t,r=xt.SUM_BY_NONZERO_WEIGHTS){let s=N(n,"labels","hingeLoss");const o=N(e,"predictions","hingeLoss");let a=null;t!=null&&(a=N(t,"weights","hingeLoss")),ft(s.shape,o.shape,"Error in hingeLoss: ");const i=de(1);s=pe(Y(de(2),s),i);const u=Ko(pe(i,Y(s,o)));return Zn(u,a,r)}const pO=O({hingeLoss_:fO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n,e,t,r=1,s=xt.SUM_BY_NONZERO_WEIGHTS){const o=N(n,"labels","huberLoss"),a=N(e,"predictions","huberLoss");let i=null;t!=null&&(i=N(t,"weights","huberLoss")),ft(o.shape,a.shape,"Error in huberLoss: ");const u=de(r),c=_t(pe(a,o)),l=Ep(c,u),d=pe(c,l),f=ae(Y(de(.5),on(l)),Y(u,d));return Zn(f,i,s)}const mO=O({huberLoss_:hO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(n,e,t,r=1e-7,s=xt.SUM_BY_NONZERO_WEIGHTS){const o=N(n,"labels","logLoss"),a=N(e,"predictions","logLoss");let i=null;t!=null&&(i=N(t,"weights","logLoss")),ft(o.shape,a.shape,"Error in logLoss: ");const u=de(1),c=de(r),l=An(Y(o,bs(ae(a,c)))),d=Y(pe(u,o),bs(ae(pe(u,a),c))),f=pe(l,d);return Zn(f,i,s)}const yO=O({logLoss_:gO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n,e,t,r=xt.SUM_BY_NONZERO_WEIGHTS){const s=N(n,"labels","meanSquaredError"),o=N(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=N(t,"weights","meanSquaredError")),ft(s.shape,o.shape,"Error in meanSquaredError: ");const i=Wp(s,o);return Zn(i,a,r)}const bO=O({meanSquaredError_:xO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vO(n,e){const t=N(n,"labels","sigmoidCrossEntropyWithLogits"),r=N(e,"logits","sigmoidCrossEntropyWithLogits");ft(t.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ko(r),o=Y(r,t),a=vp(cr(An(_t(r))));return ae(pe(s,o),a)}function wO(n,e,t,r=0,s=xt.SUM_BY_NONZERO_WEIGHTS){let o=N(n,"multiClassLabels","sigmoidCrossEntropy");const a=N(e,"logits","sigmoidCrossEntropy");let i=null;if(t!=null&&(i=N(t,"weights","sigmoidCrossEntropy")),ft(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const c=de(r),l=de(1),d=de(.5);o=ae(Y(o,pe(l,c)),Y(d,c))}const u=vO(o,a);return Zn(u,i,s)}const $O=O({sigmoidCrossEntropy_:wO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Ln((s,o,a)=>{const u=$p(o,[t],!0),c=pe(Se(o,"float32"),u);a([s,c]);const l=An(Y(c,s));return{value:_e(l,[t]),gradFunc:(h,m)=>{const[g,y]=m,b=Gt(h.shape,[t]);return[Y(z(h,b),pe(Se(g,"float32"),cr(y))),Y(z(h,b),pe(cr(y),Se(g,"float32")))]}}})(n,e)}function TO(n,e,t,r=0,s=xt.SUM_BY_NONZERO_WEIGHTS){let o=N(n,"onehotLabels","softmaxCrossEntropy");const a=N(e,"logits","softmaxCrossEntropy");let i=null;if(t!=null&&(i=N(t,"weights","softmaxCrossEntropy")),ft(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const c=de(r),l=de(1),d=de(o.shape[1]);o=ae(Y(o,pe(l,c)),Ie(c,d))}const u=SO(o,a);return Zn(u,i,s)}const CO=O({softmaxCrossEntropy_:TO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(n,e,t,r){const s=N(n,"indices","sparseFillEmptyRows","int32"),o=N(e,"values","sparseFillEmptyRows"),a=N(t,"denseShape","sparseFillEmptyRows","int32"),i=N(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:s,values:o,denseShape:a,defaultValue:i},c=D.runKernel(Ef,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const EO=O({sparseFillEmptyRows_:NO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(n,e,t){const r=N(n,"inputIndices","sparseReshape","int32"),s=N(e,"inputShape","sparseReshape","int32"),o=N(t,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:r,inputShape:s,newShape:o},i=D.runKernel(If,a);return{outputIndices:i[0],outputShape:i[1]}}const kO=O({sparseReshape_:IO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n,e,t){const r=N(n,"data","sparseSegmentMean"),s=N(e,"indices","sparseSegmentMean","int32"),o=N(t,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return D.runKernel(kf,a)}const RO=O({sparseSegmentMean_:_O});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n,e,t){const r=N(n,"data","sparseSegmentSum"),s=N(e,"indices","sparseSegmentSum","int32"),o=N(t,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return D.runKernel(_f,a)}const OO=O({sparseSegmentSum_:AO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(n,e,t,r,s,o,a,i){const u=N(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=N(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const l={separator:t,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:i},d={data:u,dataSplits:c},f=D.runKernel(Df,d,l);return{nGrams:f[0],nGramsSplits:f[1]}}const FO=O({stringNGrams_:DO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PO(n,e,t=!0){const r=N(n,"input","stringSplit","string"),s=N(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:t},a={input:r,delimiter:s},i=D.runKernel(Ff,a,o);return{indices:i[0],values:i[1],shape:i[2]}}const LO=O({stringSplit_:PO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO(n,e){const t=N(n,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:t};return D.runKernel(Pf,s,r)}const VO=O({stringToHashBucketFast_:BO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i1={fft:Ai,ifft:No,rfft:Oi,irfft:Up},u1={hammingWindow:mA,hannWindow:o1,frame:a1,stft:bA},Ur={flipLeftRight:SA,grayscaleToRGB:CA,resizeNearestNeighbor:XA,resizeBilinear:qA,rotateWithOffset:EA,cropAndResize:wA,nonMaxSuppression:kA,nonMaxSuppressionAsync:LA,nonMaxSuppressionWithScore:VA,nonMaxSuppressionWithScoreAsync:UA,nonMaxSuppressionPadded:zA,nonMaxSuppressionPaddedAsync:jA,threshold:ZA,transform:eO},c1={bandPart:nO,gramSchmidt:sO,qr:aO},l1={absoluteDifference:cO,computeWeightedLoss:Zn,cosineDistance:dO,hingeLoss:pO,huberLoss:mO,logLoss:yO,meanSquaredError:bO,sigmoidCrossEntropy:$O,softmaxCrossEntropy:CO},d1={sparseFillEmptyRows:EO,sparseReshape:kO,sparseSegmentMean:RO,sparseSegmentSum:OO},f1={stringNGrams:FO,stringSplit:LO,stringToHashBucketFast:VO};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p1{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class nr{constructor(){this.classNameMap={}}static getMap(){return nr.instance==null&&(nr.instance=new nr),nr.instance}static register(e){nr.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function h1(n){E(n.className!=null,()=>"Class being registered does not have the static className property defined."),E(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),E(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),nr.register(n)}const MO=Object.freeze(Object.defineProperty({__proto__:null,Serializable:p1,SerializationMap:nr,registerClass:h1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mr extends p1{minimize(e,t=!1,r){const{value:s,grads:o}=this.computeGradients(e,r);if(r!=null){const a=r.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return Ct(o),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Y0(e,t)}dispose(){this.iterations_!=null&&Ct(this.iterations_)}saveIterations(){return H(this,null,function*(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:de(this.iterations_,"int32")}})}getWeights(){return H(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(e){return H(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(e){return H(this,null,function*(){return this.iterations_=(yield e[0].tensor.data())[0],e.slice(1)})}}Object.defineProperty(mr,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eh extends mr{constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=D.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:ie(()=>Dt(o).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:ie(()=>Dt(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedGrads[s].variable,c=this.accumulatedUpdates[s].variable;ie(()=>{const l=ae(Y(u,this.rho),Y(on(i),1-this.rho)),d=Y(Ie(Pn(ae(c,this.epsilon)),Pn(ae(u,this.epsilon))),i),f=ae(Y(c,this.rho),Y(on(d),1-this.rho));u.assign(l),c.assign(f);const h=ae(Y(d,-this.learningRate),o);o.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ct(this.accumulatedGrads.map(e=>e.variable)),Ct(this.accumulatedUpdates.map(e=>e.variable)))}getWeights(){return H(this,null,function*(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(e){return H(this,null,function*(){e=yield this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class th extends mr{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:ie(()=>ks(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const i=this.accumulatedGrads[s].variable;ie(()=>{const u=ae(i,on(a));i.assign(u);const c=ae(Y(Ie(a,Pn(ae(u,D.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ct(this.accumulatedGrads.map(e=>e.variable))}getWeights(){return H(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(e){return H(this,null,function*(){e=yield this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nh extends mr{constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ie(()=>{this.accBeta1=de(t).variable(),this.accBeta2=de(r).variable()}),s==null&&(this.epsilon=D.backend.epsilon())}static get className(){return"Adam"}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);ie(()=>{const r=pe(1,this.accBeta1),s=pe(1,this.accBeta2);t.forEach((o,a)=>{const i=D.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:ie(()=>Dt(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:ie(()=>Dt(i).variable(u))});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,f=ae(Y(l,this.beta1),Y(c,1-this.beta1)),h=ae(Y(d,this.beta2),Y(on(c),1-this.beta2)),m=Ie(f,r),g=Ie(h,s);l.assign(f),d.assign(h);const y=ae(Y(Ie(m,ae(Pn(g),this.epsilon)),-this.learningRate),i);i.assign(y)}),this.accBeta1.assign(Y(this.accBeta1,this.beta1)),this.accBeta2.assign(Y(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ct(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ct(this.accumulatedSecondMoment.map(e=>e.variable))}getWeights(){return H(this,null,function*(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(e){return H(this,null,function*(){e=yield this.extractIterations(e),ie(()=>{this.accBeta1.assign(xs(this.beta1,this.iterations_+1)),this.accBeta2.assign(xs(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rh extends mr{constructor(e,t,r,s=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ie(()=>{this.iteration=de(0).variable(),this.accBeta1=de(t).variable()}),s==null&&(this.epsilon=D.backend.epsilon())}static get className(){return"Adamax"}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);ie(()=>{const r=pe(1,this.accBeta1),s=Ie(-this.learningRate,ae(Y(this.iteration,this.decay),1));t.forEach((o,a)=>{const i=D.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Dt(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:Dt(i).variable(u)});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,f=ae(Y(l,this.beta1),Y(c,1-this.beta1)),h=Y(d,this.beta2),m=_t(c),g=Np(h,m);l.assign(f),d.assign(g);const y=ae(Y(Ie(s,r),Ie(f,ae(g,this.epsilon))),i);i.assign(y)}),this.iteration.assign(ae(this.iteration,1)),this.accBeta1.assign(Y(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ct(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ct(this.accumulatedWeightedInfNorm.map(e=>e.variable))}getWeights(){return H(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(e){return H(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mi extends mr{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}static get className(){return"SGD"}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const a=D.registeredVariables[r];ie(()=>{const i=ae(Y(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=In(de(-e))}dispose(){this.c.dispose()}getWeights(){return H(this,null,function*(){return[yield this.saveIterations()]})}setWeights(e){return H(this,null,function*(){if(e=yield this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sh extends Mi{constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=de(this.momentum)}static get className(){return"Momentum"}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:ie(()=>Dt(o).variable(!1))});const a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[r];i!=null&&ie(()=>{let u;const c=ae(Y(this.m,a),i);this.useNesterov?u=ae(Y(this.c,ae(i,Y(c,this.m))),o):u=ae(Y(this.c,c),o),a.assign(c),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ct(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}getWeights(){return H(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(e){return H(this,null,function*(){e=yield this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oh extends mr{constructor(e,t=.9,r=0,s=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,s==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:ie(()=>Dt(o).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:ie(()=>Dt(o).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:ie(()=>Dt(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedMeanSquares[s].variable,c=this.accumulatedMoments[s].variable;ie(()=>{const l=ae(Y(u,this.decay),Y(on(i),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[s].variable,f=ae(Y(d,this.decay),Y(i,1-this.decay)),h=Ie(Y(i,this.learningRate),Pn(pe(l,ae(on(f),this.epsilon)))),m=ae(Y(c,this.momentum),h);u.assign(l),d.assign(f),c.assign(m);const g=pe(o,m);o.assign(g)}else{const d=ae(Y(u,this.decay),Y(on(i),1-this.decay)),f=ae(Y(c,this.momentum),Ie(Y(i,this.learningRate),Pn(ae(d,this.epsilon))));u.assign(d),c.assign(f);const h=pe(o,f);o.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ct(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ct(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ct(this.accumulatedMoments.map(e=>e.variable))}getWeights(){return H(this,null,function*(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(e){return H(this,null,function*(){e=yield this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO=[eh,th,nh,rh,sh,oh,Mi];function WO(){for(const n of UO)h1(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO="model",GO=".json",jO=".weights.bin";function bg(n){return new Promise(e=>setTimeout(e)).then(n)}class Wr{constructor(e){if(!B().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Wr.URL_SCHEME)&&(e=e.slice(Wr.URL_SCHEME.length)),(e==null||e.length===0)&&(e=zO),this.modelJsonFileName=e+GO,this.weightDataFileName=e+jO}save(e){return H(this,null,function*(){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=Mx(e,r),o=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=o,yield bg(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,yield bg(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Mo(e)}}})}}Wr.URL_SCHEME="downloads://";class HO{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}load(){return H(this,null,function*(){return new Promise((e,t)=>{const r=new FileReader;r.onload=s=>{const o=JSON.parse(s.target.result),a=o.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const u=rp(o,c=>this.loadWeights(c));e(u)},r.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})})}loadWeights(e){const t=[],r=[];for(const a of e)t.push(...a.weights),r.push(...a.paths);const s=this.checkManifestAndWeightFiles(e),o=r.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(o).then(a=>[t,np(a)])}loadWeightsFile(e,t){return new Promise((r,s)=>{const o=new FileReader;o.onload=a=>{const i=a.target.result;r(i)},o.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],r=this.weightsFiles.map(o=>gg(o.name)),s={};for(const o of e)o.paths.forEach(a=>{const i=gg(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),r.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);s[a]=this.weightsFiles[r.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const qO=n=>B().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Wr.URL_SCHEME)?KO(n.slice(Wr.URL_SCHEME.length)):null;We.registerSaveRouter(qO);function KO(n="model"){return new Wr(n)}function XO(n){return new HO(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vg(n,e,t,r){a(n),t=t==null?0:t,r=r==null?1:r,i(t,r);let s=0;const o=u=>(u.then(c=>{const l=t+ ++s/n.length*(r-t);return e(l),c}),u);function a(u){E(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,c){E(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),E(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),E(c>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${c}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m1(n,e){return H(this,null,function*(){e==null&&(e={});const t=e.fetchFunc==null?B().platform.fetch:e.fetchFunc,r=n.map(d=>t(d,e.requestInit,{isBinary:!0})),s=0,o=.5,i=(e.onProgress==null?yield Promise.all(r):yield vg(r,e.onProgress,s,o)).map(d=>d.arrayBuffer()),u=.5,c=1;return e.onProgress==null?yield Promise.all(i):yield vg(i,e.onProgress,u,c)})}function YO(n,e="",t,r){return H(this,null,function*(){return g1(a=>m1(a,{requestInit:r}))(n,e,t)})}function g1(n){return(e,t="",r)=>H(this,null,function*(){const s=e.map(()=>!1),o={},a=r!=null?r.map(()=>!1):[],i=[];if(e.forEach((h,m)=>{let g=0;h.weights.forEach(y=>{const b="quantization"in y?y.quantization.dtype:y.dtype,$=lc[b]*q(y.shape),S=()=>{s[m]=!0,o[m]==null&&(o[m]=[]),o[m].push({manifestEntry:y,groupOffset:g,sizeBytes:$})};r!=null?r.forEach((C,I)=>{C===y.name&&(S(),a[I]=!0)}):S(),i.push(y.name),g+=$})}),!a.every(h=>h)){const h=r.filter((m,g)=>!a[g]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce((h,m,g)=>(m&&h.push(g),h),[]),c=[];u.forEach(h=>{e[h].paths.forEach(m=>{const g=t+(t.endsWith("/")?"":"/")+m;c.push(g)})});const l=yield n(c),d={};let f=0;return u.forEach(h=>{const m=e[h].paths.length;let g=0;for(let C=0;C<m;C++)g+=l[f+C].byteLength;const y=new ArrayBuffer(g),b=new Uint8Array(y);let $=0;for(let C=0;C<m;C++){const I=new Uint8Array(l[f+C]);b.set(I,$),$+=I.byteLength}o[h].forEach(C=>{const I=y.slice(C.groupOffset,C.groupOffset+C.sizeBytes),A=Vx(I,[C.manifestEntry]);for(const L in A)d[L]=A[L]}),f+=m}),d})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QO="application/octet-stream",ZO="application/json";class ah{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(E(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=B().platform.fetch,E(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&E(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}save(e){return H(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=Mx(e,r);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:ZO}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:QO}),"model.weights.bin");const o=yield this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Mo(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)})}load(){return H(this,null,function*(){const e=yield this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=yield e.json()}catch(o){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const r=t.modelTopology,s=t.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return rp(t,o=>this.loadWeights(o))})}loadWeights(e){return H(this,null,function*(){const t=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=JO(t),o=this.weightPathPrefix||r,a=Wx(e),i=[],u=[];for(const l of e)for(const d of l.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(d)):i.push(o+d+s);this.weightUrlConverter&&i.push(...yield Promise.all(u));const c=yield m1(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,np(c)]})}}ah.URL_SCHEME_REGEX=/^https?:\/\//;function JO(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),r=n.substring(0,e),s=t>e?n.substring(t):"";return[r+"/",s]}function Sc(n){return n.match(ah.URL_SCHEME_REGEX)!=null}const y1=(n,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(r=>Sc(r)):t=Sc(n),t)return ih(n,e)}return null};We.registerSaveRouter(y1);We.registerLoadRouter(y1);function ih(n,e){return new ah(n,e)}function eD(n,e){return ih(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cu{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class x1{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class tD{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function nD(n,e,t,r){const s=arguments;return new tD(b1(...s))}function b1(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Cu(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Cu({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Cu({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))}function rD(n){return new x1(n)}function sD(n){return new x1(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uh=Object.freeze(Object.defineProperty({__proto__:null,browserFiles:XO,browserHTTPRequest:eD,concatenateArrayBuffers:np,copyModel:CE,decodeWeights:Vx,encodeWeights:eE,fromMemory:nD,fromMemorySync:b1,getLoadHandlers:dE,getModelArtifactsForJSON:rp,getModelArtifactsForJSONSync:Ux,getModelArtifactsInfoForJSON:Mo,getSaveHandlers:lE,getWeightSpecs:Wx,http:ih,isHTTPScheme:Sc,listModels:SE,loadWeights:YO,moveModel:NE,registerLoadRouter:cE,registerSaveRouter:uE,removeModel:TE,weightsLoaderFactory:g1,withSaveHandler:rD,withSaveHandlerSync:sD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n,e,t){const r=N(n,"labels","confusionMatrix"),s=N(e,"predictions","confusionMatrix");E(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),E(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),E(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),E(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),E(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const o=Co(Se(r,"int32"),t),a=Co(Se(s,"int32"),t),i=Eo(o),u=ve(i,a);return Se(u,"int32")}const aD=O({confusionMatrix_:oD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iD=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:aD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $r;function v1(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,s=!1,o=!1,a=!1,i=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData!="undefined"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement!="undefined"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement!="undefined"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap!="undefined"&&n instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(ni(Za,D.backendName)!=null){const m={pixels:n},g={numChannels:e};return D.runKernel(Za,m,g)}const[c,l]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let d;if(a)d=n.getContext("2d").getImageData(0,0,c,l).data;else if(r||t)d=n.data;else if(o||s||i){if($r==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")$r=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else $r=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});$r.canvas.width=c,$r.canvas.height=l,$r.drawImage(n,0,0,c,l),d=$r.getImageData(0,0,c,l).data}let f;if(e===4)f=new Int32Array(d);else{const m=c*l;f=new Int32Array(m*e);for(let g=0;g<m;g++)for(let y=0;y<e;++y)f[g*e+y]=d[g*4+y]}return Gp(f,[l,c,e],"int32")}function uD(n){return n!=null&&n.data instanceof Uint8Array}function cD(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function lD(n){return n!=null&&n.width!==0&&n.height!==0}function dD(n){return cD()&&!(n instanceof ImageBitmap)&&lD(n)&&!uD(n)}function fD(n,e=3){return H(this,null,function*(){let t=null;if(B().getBool("WRAP_TO_IMAGEBITMAP")&&dD(n)){let r;try{r=yield createImageBitmap(n,{premultiplyAlpha:"none"})}catch(s){r=null}r!=null&&r.width===n.width&&r.height===n.height?t=r:t=n}else t=n;return v1(t,e)})}function Ui(n,e){return H(this,null,function*(){let t=N(n,"img","toPixels");if(!(n instanceof Te)){const c=t;t=Se(c,"int32"),c.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const[r,s]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2];if(o>4||o===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${o}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);const a=yield t.data(),i=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(s*r*4);for(let c=0;c<r*s;++c){const l=[0,0,0,255];for(let f=0;f<o;f++){const h=a[c*o+f];if(t.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(t.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);o===1?(l[0]=h*i,l[1]=h*i,l[2]=h*i):l[f]=h*i}const d=c*4;u[d+0]=Math.round(l[0]),u[d+1]=Math.round(l[1]),u[d+2]=Math.round(l[2]),u[d+3]=Math.round(l[3])}if(e!=null){e.width=s,e.height=r;const c=e.getContext("2d"),l=new ImageData(u,s,r);c.putImageData(l,0,0)}return t!==n&&t.dispose(),u})}const Wi=O({fromPixels_:v1}),pD=Object.freeze(Object.defineProperty({__proto__:null,fromPixels:Wi,fromPixelsAsync:fD,toPixels:Ui},Symbol.toStringTag,{value:"Module"}));function ch(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(q(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,o=s[s.length-1];let a=1;for(let d=0;d<s.length-1;++d)a*=s[d];const i=n.shape,u=s.slice();u.pop();let c=1;for(let d=o;d<t;++d)c*=i[d],u.push(i[d]);const l=[...Je(n.shape).map(d=>d/c),1].slice(0,o);return[u,a,c,l]}const hD=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:ch},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tc=-2,mD=-1;function w1(n,e,t){const r=n.shape.length;E(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),E(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)E(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function gD(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function $1(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function S1(n,e,t,r){const s=[...n];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<t;o++)o===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function T1(n,e,t){return t<=n?t:t-(e-1)}function C1(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function yD(n,e,t,r,s,o,a,i,u){const c=n.length;let l=new Array(c),d=new Array(c),f=new Array(c);if(e.length&&t>0){const h=e[0],m=t+1;l=N1(a,h,m,r,n),d=E1(i,h,m,s,n),f=S1(o,h,m,n)}else for(let h=0;h<c;h++)l[h]=k1(a,r,o,n,h,u),d[h]=_1(i,s,o,n,h,u),f[h]=I1(o,h,u);return{begin:l,end:d,strides:f}}function N1(n,e,t,r,s){const o=[...s],a=C1(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const u=T1(e,t,i);let c=r[u];n&1<<u&&(c=0),o[i]=c}return o}function E1(n,e,t,r,s){const o=[...s],a=C1(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const u=T1(e,t,i);let c=r[u];n&1<<u&&(c=Number.MAX_SAFE_INTEGER),o[i]=c}for(let i=0;i<o.length;i++){const u=s[i];o[i]<0&&(o[i]+=u),o[i]=ho(0,o[i],s[i])}return o}function I1(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function k1(n,e,t,r,s,o){let a=e[s];const i=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=ho(0,a,u-1),a}function _1(n,e,t,r,s,o){let a=e[s];const i=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),i>0?a=ho(0,a,u):a=ho(-1,a,u-1),a}function lh(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function dh(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function R1(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{E(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(s).fill(-1):typeof t=="number"?o=[t,...new Array(s-1).fill(-1)]:t.length<s?o=t.concat(new Array(s-t.length).fill(-1)):o=t,o=o.map((a,i)=>a>=0?a:(E(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-r[i])),[r,o]}function A1(n,e,t,r,s,o,a,i,u){let c;if(r==null?(c=new Array(e.length),c.fill(1)):c=r,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let S=0;S<d.dims;S++)l&&1<<S&i&&d.numAddAxisAfterEllipsis++,1<<S&a&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const f={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};xD(d,f);let h=!0,m=!0,g=!0;const y=[],b=[];for(let S=0;S<n.length;++S){if(f.strides[S]===0)throw Error(`strides[${S}] must be non-zero`);const C=!!(f.shrinkAxisMask&1<<S),I=n[S];if(I===-1){y.push(C?1:-1);continue}const A=[f.beginMask&1<<S,f.endMask&1<<S],L=[f.strides[S]>0?0:-1,f.strides[S]>0?I:I-1];if(C&&f.strides[S]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&f.strides[S]===1;const F=!!(f.beginMask&1<<S&&f.endMask&1<<S);if(f.beginValid&&f.endValid){if(C){const G=f.begin[S]<0?I+f.begin[S]:f.begin[S];if(f.begin[S]=G,f.end[S]=f.begin[S]+1,G<0||G>=I)throw Error(`slice index ${f.begin[S]} of dimension ${S} out of bounds.`)}else f.begin[S]=wg(f.begin[S],0,f.strides[S],I,A,L),f.end[S]=wg(f.end[S],1,f.strides[S],I,A,L);const U=f.strides[S]===1&&f.begin[S]===0&&f.end[S]===I;h=h&&U,m=m&&(S===0&&f.strides[S]===1||U)}else h=h&&f.strides[S]===1&&F,m=m&&(S===0&&f.strides[S]===1||F);let V,W=!1;if(f.beginValid&&f.endValid?(V=f.end[S]-f.begin[S],W=!0):C?(V=1,W=!0):F&&I>=0&&(f.strides[S]<0?V=-I:V=I,W=!0),W){let U;V===0||V<0!=f.strides[S]<0?U=0:U=Math.trunc(V/f.strides[S])+(V%f.strides[S]!==0?1:0),y.push(U)}else y.push(-1)}for(let S=0;S<f.finalShapeGatherIndices.length;++S){const C=f.finalShapeGatherIndices[S];C>=0?b.push(y[C]):C===Tc&&b.push(1)}return{finalShapeSparse:b.filter((S,C)=>f.finalShapeGatherIndices[C]!==Tc),finalShape:b,isIdentity:h,sliceDim0:m,isSimpleSlice:g,begin:f.begin,end:f.end,strides:f.strides}}function xD(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(Tc),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(mD),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function wg(n,e,t,r,s,o){if(s[e])return t>0?o[e]:o[e+1&1];{const a=n<0?r+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const O1=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:w1,computeFlatOffset:dh,computeOutShape:$1,getNormalizedAxes:yD,isSliceContinous:lh,maskToAxes:gD,parseSliceParams:R1,sliceInfo:A1,startForAxis:k1,startIndicesWithElidedDims:N1,stopForAxis:_1,stopIndicesWithElidedDims:E1,stridesForAxis:I1,stridesWithElidedDims:S1},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const bD="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D1{static sgd(e){return new Mi(e)}static momentum(e,t,r=!1){return new sh(e,t,r)}static rmsprop(e,t=.9,r=0,s=null,o=!1){return new oh(e,t,r,s,o)}static adam(e=.001,t=.9,r=.999,s=null){return new nh(e,t,r,s)}static adadelta(e=.001,t=.95,r=null){return new eh(e,t,r)}static adamax(e=.002,t=.9,r=.999,s=null,o=0){return new rh(e,t,r,s,o)}static adagrad(e,t=.1){return new th(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vD=D1;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wD=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:n=>n())();function F1(){return new Promise(n=>wD(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P1(n,e){const t=n[0].length;n.forEach((s,o)=>{E(s.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),E(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,o)=>{for(let a=0;a<t;a++)E(a===e||s[a]===r[a],()=>`Error in concat${t}D: Shape of tensors[${o}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function zr(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var yn;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(yn||(yn={}));function L1(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const o=t[s],a=r[r.length-t.length+s],i=r[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${o} but shape[${s+n}] = ${i}`)}else r[a]=o}return r}function B1(n){const e={FIRST_DIM_SIZE:yn.FIRST_DIM_SIZE,VALUE_ROWIDS:yn.VALUE_ROWIDS,ROW_LENGTHS:yn.ROW_LENGTHS,ROW_SPLITS:yn.ROW_SPLITS,ROW_LIMITS:yn.ROW_LIMITS,ROW_STARTS:yn.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function V1(n){return n.length===0?0:n[0]===yn.FIRST_DIM_SIZE?n.length-1:n.length}function M1(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const o=n[s],a=e[s+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${o} but ragged tensor input.flatValues.shape[${s-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fh=30;function zi(n){return n<=fh?n:Ya(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U1(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ph(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const o=e.length;for(let a=0;a<o;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(o+1))}return s}function hh(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],o=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?o.push(a):s.push(a);r.push(...s),r.push(0),r.push(...o)}return r}function mh(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?r?s.push(e[o-1]*n[o]):s.push(n[o]/e[o-1]):s.push(n[o]);return s}function W1(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function z1(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G1=1.7580993408473768,j1=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H1=.3275911,q1=.254829592,K1=-.284496736,X1=1.421413741,Y1=-1.453152027,Q1=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cc(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function $D(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function SD(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function TD(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function CD(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function ND(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function ED(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const o=(e?2:-2)*Math.PI*(s/n);t[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:t,imag:r}}function ID(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),s=Math.cos(r),o=Math.sin(r);return{real:s,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nu="->",kD=/->/g,$g=",",Sg="...";function Z1(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(kD,"").length)/Nu.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Nu}").`);const[r,s]=n.split(Nu);E(r.indexOf(Sg)===-1,()=>`The ellipsis notation ("${Sg}") is not supported yet.`);const o=r.split($g),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let f=0;f<s.length;++f){const h=s[f];if(!o.some(m=>m.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let f=0;f<r.length;++f){const h=r[f];i.indexOf(h)===-1&&h!==$g&&i.push(h)}const u=new Array(o.length);for(let f=0;f<a;++f){if(new Set(o[f].split("")).size!==o[f].length)throw new Error(`Found duplicate axes in input component ${o[f]}. Support for duplicate axes in input is not implemented yet.`);u[f]=[];for(let h=0;h<o[f].length;++h)u[f].push(i.indexOf(o[f][h]))}const c=i.length,l=s.length,d=[];for(let f=l;f<c;++f)d.push(f);return{allDims:i,summedDims:d,idDims:u}}function J1(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function ev(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const o=t[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=o[a]:E(r[e[s][a]]===o[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function tv(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let a=0;a<s;++a)r.push([]);const o=[];for(let a=0;a<t.length;++a){const i=t[a],u=_D(e,i);for(const c of u)o.indexOf(c)===-1&&(r[a].push(c),o.push(c))}return{path:t,steps:r}}function nv(n){return n.every((e,t)=>e===t)}function _D(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function rv(n,e,t=0){let r=[];if(typeof e=="number")E(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);E(s<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,u)=>u>0?i+u:i);e[o]=n.shape[t]-a}E(n.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sv(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function ov(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function av(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iv(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function uv(n,e){return`size ${n} must be non-negative, not ${e}`}function cv(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function lv(n,e){const t=q(n),r=q(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function dv(n,e){const t=q(n),r=q(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nc(){return"segment ids must be >= 0"}function fv(){return"segment ids are not increasing"}function pv(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function hv(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mv(n,e){let t=!1,r;for(n<=fh?(r=n,t=!0):r=Ya(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=Ya(n,r+1);return r}function gv(n,e,t){const r=[],s=n.length;for(let o=0;o<s;o++)o!==e?r.push(n[o]):r.push(t);return r}function yv(n,e,t,r){const s=e.shape.length,o=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${o}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let d=0;d<r;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const a=n.shape[t],i=[];let u=1,c=1,l=1;for(let d=0;d<r;++d)i.push(n.shape[d]),u*=n.shape[d];for(let d=r;d<t;d++)i.push(n.shape[d]),c*=n.shape[d];for(let d=r;d<s;d++)i.push(e.shape[d]);for(let d=t+1;d<o;d++)i.push(n.shape[d]),l*=n.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:a,outputShape:i}}const RD=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:yv,computeOutShape:gv,segOpComputeOptimalWindowSize:mv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Io(n){try{return n.map(e=>Pr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function xv(n){return n.map(e=>qn(e))}const bv=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:q1,ERF_A2:K1,ERF_A3:X1,ERF_A4:Y1,ERF_A5:Q1,ERF_P:H1,PARALLELIZE_THRESHOLD:fh,get RowPartitionType(){return yn},SELU_SCALE:j1,SELU_SCALEALPHA:G1,applyActivation:Bi,assertAndGetBroadcastShape:xe,assertAxesAreInnerMostDims:$n,assertParamsConsistent:P1,assignToTypedArray:ND,axesAreInnerMostDims:pp,calculateShapes:Di,checkEinsumDimSizes:ev,checkPadOnDimRoundingMode:an,combineLocations:M0,combineRaggedTensorToTensorShapes:L1,complexWithEvenIndex:SD,complexWithOddIndex:TD,computeConv2DInfo:zt,computeConv3DInfo:Wo,computeDefaultPad:ip,computeDilation2DInfo:l0,computeOptimalWindowSize:zi,computeOutAndReduceShapes:Vn,computeOutShape:zr,computePool2DInfo:Xr,computePool3DInfo:Uo,convertConv2DDataFormat:Is,decodeEinsumEquation:Z1,eitherStridesOrDilationsAreOne:Bt,expandShapeToKeepDim:Gt,exponent:ID,exponents:ED,fromStringArrayToUint8:xv,fromUint8ToStringArray:Io,getAxesPermutation:un,getBroadcastDims:$o,getComplexWithIndex:CD,getEinsumComputePath:tv,getEinsumPermutation:J1,getFusedBiasGradient:Li,getFusedDyActivation:Pi,getImageCenter:U1,getInnerMostAxes:cn,getPermuted:hh,getRaggedRank:V1,getReductionAxes:dp,getReshaped:ph,getReshapedPermuted:mh,getRowPartitionTypesHelper:B1,getSliceBeginCoords:W1,getSliceSize:z1,getSparseFillEmptyRowsIndicesDenseShapeMismatch:sv,getSparseFillEmptyRowsNegativeIndexErrorMessage:ov,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:av,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:cv,getSparseReshapeInputOutputMismatchErrorMessage:dv,getSparseReshapeInputOutputMultipleErrorMessage:lv,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:iv,getSparseReshapeNegativeOutputDimErrorMessage:uv,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:hv,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Nc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:fv,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:pv,getUndoAxesPermutation:hp,isIdentityPermutation:nv,log:vN,mergeRealAndImagArrays:Cc,prepareAndValidate:ch,prepareSplitSize:rv,segment_util:RD,shouldFuse:Vi,slice_util:O1,splitRealAndImagArrays:$D,stridesOrDilationsArePositive:Vr,tupleValuesAreOne:wo,upcastType:bn,validateDefaultValueShape:M1,validateInput:Kp,validateUpdateShape:qp,warn:Qt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AD=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Yp,nonMaxSuppressionV4Impl:Qp,nonMaxSuppressionV5Impl:Zp,whereImpl:jp},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */WO();const vv=Object.freeze(Object.defineProperty({__proto__:null,Abs:il,Acos:ul,Acosh:cl,AdadeltaOptimizer:eh,AdagradOptimizer:th,AdamOptimizer:nh,AdamaxOptimizer:rh,Add:Si,AddN:ll,All:dl,Any:fl,ArgMax:pl,ArgMin:hl,Asin:ml,Asinh:gl,Atan:yl,Atan2:bl,Atanh:xl,AvgPool:vl,AvgPool3D:wl,AvgPool3DGrad:xx,AvgPoolGrad:yx,BatchMatMul:$l,BatchToSpaceND:Sl,Bincount:Tl,BroadcastArgs:Cl,BroadcastTo:fN,Cast:Ti,Ceil:Nl,ClipByValue:El,Complex:Il,ComplexAbs:kl,Concat:_l,Conv2D:Rl,Conv2DBackpropFilter:Al,Conv2DBackpropInput:Ol,Conv3D:Dl,Conv3DBackpropFilterV2:bx,Conv3DBackpropInputV2:Fl,Cos:Pl,Cosh:Ll,CropAndResize:Ml,Cumprod:Bl,Cumsum:Vl,DataStorage:sx,DenseBincount:Ul,DepthToSpace:Wl,DepthwiseConv2dNative:zl,DepthwiseConv2dNativeBackpropFilter:Gl,DepthwiseConv2dNativeBackpropInput:jl,Diag:Hl,Dilation2D:ql,Dilation2DBackpropFilter:hN,Dilation2DBackpropInput:pN,get ENV(){return ol},Einsum:Xl,Elu:Yl,EluGrad:vx,Environment:mx,Equal:Zl,Erf:Ql,Exp:Jl,ExpandDims:ed,Expm1:td,FFT:nd,Fill:rd,FlipLeftRight:sd,Floor:od,FloorDiv:ad,FromPixels:Za,FusedBatchNorm:id,FusedConv2D:ei,FusedDepthwiseConv2D:ti,GatherNd:cd,GatherV2:ud,Greater:ld,GreaterEqual:dd,IFFT:fd,Identity:Ci,Imag:pd,IsFinite:hd,IsInf:md,IsNan:gd,KernelBackend:rl,LRN:Nd,LRNGrad:wx,LeakyRelu:yd,Less:xd,LessEqual:bd,LinSpace:vd,Log:wd,Log1p:$d,LogSoftmax:gN,LogicalAnd:Sd,LogicalNot:Td,LogicalOr:Cd,LogicalXor:mN,LowerBound:yN,Max:Ed,MaxPool:kd,MaxPool3D:_d,MaxPool3DGrad:Sx,MaxPoolGrad:$x,MaxPoolWithArgmax:Rd,Maximum:Id,Mean:Ad,Min:Od,Minimum:Dd,MirrorPad:Fd,Mod:Pd,MomentumOptimizer:sh,Multinomial:Ld,Multiply:Bd,Neg:Vd,NonMaxSuppressionV3:Ud,NonMaxSuppressionV4:Wd,NonMaxSuppressionV5:zd,NotEqual:Md,OP_SCOPE_SUFFIX:ep,OneHot:jd,OnesLike:Gd,Optimizer:mr,OptimizerConstructors:D1,Pack:Hd,PadV2:qd,Pool:xN,Pow:Kd,Prelu:Xd,Prod:Yd,RMSPropOptimizer:oh,RaggedGather:Qd,RaggedRange:Zd,RaggedTensorToTensor:Jd,Range:ef,get Rank(){return sc},Real:tf,RealDiv:Kl,Reciprocal:nf,get Reduction(){return xt},Relu:rf,Relu6:uf,Reshape:sf,ResizeBilinear:af,ResizeBilinearGrad:Cx,ResizeNearestNeighbor:of,ResizeNearestNeighborGrad:Tx,Reverse:cf,RotateWithOffset:qf,Round:lf,Rsqrt:df,SGDOptimizer:Mi,ScatterNd:ff,SearchSorted:pf,Select:hf,Selu:mf,Sigmoid:vf,Sign:bf,Sin:yf,Sinh:xf,Slice:gf,Softmax:Nf,Softplus:wf,SpaceToBatchND:Tf,SparseFillEmptyRows:Ef,SparseReshape:If,SparseSegmentMean:kf,SparseSegmentSum:_f,SparseToDense:Rf,SplitV:Cf,Sqrt:$f,Square:Nx,SquaredDifference:Af,Step:Hf,StridedSlice:Of,StringNGrams:Df,StringSplit:Ff,StringToHashBucketFast:Pf,Sub:Lf,Sum:Sf,Tan:Bf,Tanh:Vf,Tensor:Te,TensorBuffer:gs,Tile:Ni,TopK:Mf,Transform:Uf,Transpose:uo,Unique:Wf,Unpack:zf,UnsortedSegmentSum:Gf,UpperBound:bN,Variable:yo,ZerosLike:jf,_FusedMatMul:Ja,abs:_t,acos:Jx,acosh:e0,add:ae,addN:t0,all:n0,any:r0,argMax:ap,argMin:s0,asin:o0,asinh:a0,atan:i0,atan2:u0,atanh:c0,avgPool:up,avgPool3d:d0,backend:Zx,backend_util:bv,basicLSTMCell:f0,batchNorm:zo,batchNorm2d:p0,batchNorm3d:h0,batchNorm4d:m0,batchToSpaceND:cp,bincount:lp,booleanMaskAsync:Qb,broadcastArgs:g0,broadcastTo:ds,broadcast_util:tk,browser:pD,buffer:Ue,cast:Se,ceil:y0,clipByValue:x0,clone:Kn,complex:Yn,concat:dt,concat1d:b0,concat2d:v0,concat3d:w0,concat4d:$0,conv1d:S0,conv2d:Go,conv2dTranspose:C0,conv3d:N0,conv3dTranspose:E0,copyRegisteredKernels:TN,cos:I0,cosh:k0,cosineWindow:Fi,cumprod:_0,cumsum:R0,customGrad:Ln,denseBincount:A0,deprecationWarn:PE,depthToSpace:O0,depthwiseConv2d:Ii,device_util:ZN,diag:D0,dilation2d:F0,disableDeprecationWarnings:FE,dispose:Ct,disposeVariables:LE,div:Ie,divNoNan:P0,dot:L0,dropout:n1,einsum:B0,elu:fp,enableDebugMode:DE,enableProdMode:OE,enclosingPowerOfTwo:Xp,engine:hn,env:B,equal:jo,erf:V0,euclideanNorm:W0,exp:cr,expandDims:Rt,expm1:z0,eye:mp,fft:Ai,fill:ks,findBackend:GE,findBackendFactory:jE,floor:gp,floorDiv:op,fused:s1,gather:yp,gatherND:t1,gather_util:hD,getBackend:Yx,getGradient:ec,getKernel:ni,getKernelsForBackend:ri,grad:Lk,grads:Bk,greater:_s,greaterEqual:xp,ifft:No,imag:qo,image:Ur,inTopKAsync:r1,io:uh,irfft:Up,isFinite:G0,isInf:j0,isNaN:H0,keep:In,kernel_impls:AD,leakyRelu:bp,less:q0,lessEqual:ki,linalg:c1,linspace:K0,localResponseNormalization:X0,log:bs,log1p:vp,logSigmoid:Q0,logSoftmax:Z0,logSumExp:$p,logicalAnd:So,logicalNot:Sp,logicalOr:Tp,logicalXor:J0,losses:l1,lowerBound:eb,matMul:ve,math:iD,max:Or,maxPool:Cp,maxPool3d:tb,maxPoolWithArgmax:nb,maximum:Np,mean:To,memory:BE,meshgrid:rb,min:ii,minimum:Ep,mirrorPad:Ip,mod:sb,moments:ob,movingAverage:Zb,mul:Y,multiRNNCell:ab,multinomial:ib,neg:An,nextFrame:F1,norm:Ho,notEqual:kp,oneHot:Co,ones:sr,onesLike:ub,op:O,outerProduct:cb,pad:Yr,pad1d:lb,pad2d:db,pad3d:_p,pad4d:fb,pool:pb,pow:xs,prelu:Ap,print:sp,prod:hb,profile:VE,raggedGather:mb,raggedRange:gb,raggedTensorToTensor:yb,rand:xb,randomGamma:wb,randomNormal:Lp,randomStandardNormal:$b,randomUniform:Bp,range:dr,ready:WE,real:vs,reciprocal:Sb,registerBackend:Qx,registerGradient:wN,registerKernel:Kf,relu:Ko,relu6:Vp,removeBackend:zE,reshape:z,reverse:fr,reverse1d:Tb,reverse2d:Cb,reverse3d:Nb,reverse4d:Eb,rfft:Oi,round:Mp,rsqrt:Ib,scalar:de,scatterND:Jb,scatter_util:KR,searchSorted:Ri,selu:kb,separableConv2d:_b,serialization:MO,setBackend:UE,setPlatform:HE,setdiff1dAsync:Rb,sigmoid:Rn,sign:Ab,signal:u1,sin:Ob,sinh:Db,slice:Ee,slice1d:Fb,slice2d:Pb,slice3d:Lb,slice4d:Bb,slice_util:O1,softmax:Vb,softplus:wp,spaceToBatchND:Rp,sparse:d1,sparseToDense:e1,spectral:i1,split:ws,sqrt:Pn,square:on,squaredDifference:Wp,squeeze:tn,stack:Bn,step:zp,stridedSlice:Mb,string:f1,sub:pe,sum:_e,sumOutType:Ei,tan:Ub,tanh:ai,tensor:sn,tensor1d:nn,tensor2d:Dr,tensor3d:Gp,tensor4d:Wb,tensor5d:zb,tensor6d:Gb,tensor_util:qN,test_util:J_,tidy:ie,tile:fs,time:ME,topk:jb,train:vD,transpose:Eo,truncatedNormal:Hb,unique:qb,unregisterGradient:SN,unregisterKernel:$N,unsortedSegmentSum:Kb,unstack:hr,upcastType:bn,upperBound:Xb,util:ON,valueAndGrad:Vk,valueAndGrads:Mk,variable:Yb,variableGrads:Y0,version_core:bD,where:Mr,whereAsync:Hp,zeros:lr,zerosLike:Dt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OD=B();OD.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Kt;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Kt||(Kt={}));var Tg;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Tg||(Tg={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DD={};function wv(n){return DD[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w(n,e,t,r,s){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const i=o.inputIndexStart,u=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?i+1:o.inputIndexEnd;if(o.type==="tensor")return bt(e.inputNames[o.inputIndexStart],t,r,s);if(o.type==="tensors")return e.inputNames.slice(i,u).map(f=>bt(f,t,r,s));const c=bt(e.inputNames.slice(i)[0],t,r,s),l=c.dataSync();return o.type==="number"?l[0]:Ar(c.shape,l)}const a=e.attrParams[n];return a&&a.value}function bt(n,e,t,r){const[s,o]=kt(n);if(r!=null){const i=r.getHashTableHandleByName(s);if(i!=null)return i}const a=t.currentContextIds.find(i=>!!e[ui(s,i)]);return a!==void 0?e[ui(s,a)][o]:void 0}function FD(n,e,t){return e[ui(n,t.currentContextId)]}function En(n,e){const[t,r,s]=kt(n);return[ui(t,e&&e.currentContextId),r,s]}function ui(n,e){return e?`${n}-${e}`:n}function kt(n){const e=n.split(":");if(e.length===1)return[n,0,void 0];const t=e[0],r=e.length===3?e[1]:void 0,s=Number(e[e.length-1]);return[t,s,r]}function Ua(n,e,t){let r=w("pad",n,e,t);if(r==="explicit"){r=w("explicitPaddings",n,e,t);const s=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)s[o][0]=r[o*2],s[o][1]=r[o*2+1];return s}return r}function Wn(n){return n.kept?n:Kn(n)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PD=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],LD=Object.freeze(Object.defineProperty({__proto__:null,json:PD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BD=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VD=Object.freeze(Object.defineProperty({__proto__:null,json:BD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MD=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],UD=Object.freeze(Object.defineProperty({__proto__:null,json:MD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WD=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],zD=Object.freeze(Object.defineProperty({__proto__:null,json:WD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GD=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],jD=Object.freeze(Object.defineProperty({__proto__:null,json:GD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HD=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qD=Object.freeze(Object.defineProperty({__proto__:null,json:HD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KD=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],XD=Object.freeze(Object.defineProperty({__proto__:null,json:KD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YD=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],QD=Object.freeze(Object.defineProperty({__proto__:null,json:YD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZD=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],JD=Object.freeze(Object.defineProperty({__proto__:null,json:ZD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eF=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],tF=Object.freeze(Object.defineProperty({__proto__:null,json:eF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nF=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],rF=Object.freeze(Object.defineProperty({__proto__:null,json:nF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sF=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],oF=Object.freeze(Object.defineProperty({__proto__:null,json:sF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aF=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],iF=Object.freeze(Object.defineProperty({__proto__:null,json:aF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uF=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],cF=Object.freeze(Object.defineProperty({__proto__:null,json:uF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lF=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],dF=Object.freeze(Object.defineProperty({__proto__:null,json:lF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fF=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],pF=Object.freeze(Object.defineProperty({__proto__:null,json:fF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hF=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],mF=Object.freeze(Object.defineProperty({__proto__:null,json:hF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gF=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],yF=Object.freeze(Object.defineProperty({__proto__:null,json:gF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xF=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],bF=Object.freeze(Object.defineProperty({__proto__:null,json:xF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cg{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[LD,VD,UD,zD,jD,qD,XD,QD,JD,tF,rF,oF,iF,cF,dF,pF,mF,yF,bF],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,t={}){const r=e.node,s=[],o=[],a=[],i=r.reduce((g,y)=>(g[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?s.push(g[y.name]):y.op==="Const"?o.push(g[y.name]):(y.input==null||y.input.length===0)&&a.push(g[y.name]),g),{});let u=[];const c=[];let l={},d={};t!=null&&(l=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const f=Object.keys(i);f.forEach(g=>{const y=i[g];y.inputNames.forEach((b,$)=>{const[S,,C]=En(b),I=i[S];if(I.outputs!=null){const A=I.outputs.indexOf(C);if(A!==-1){const L=`${S}:${A}`;y.inputNames[$]=L}}y.inputs.push(I),I.children.push(y)})}),Object.keys(d).length===0?f.forEach(g=>{const y=i[g];y.children.length===0&&c.push(y)}):Object.keys(d).forEach(g=>{const[y]=En(g),b=i[y];b!=null&&(b.signatureKey=d[g],c.push(b))}),Object.keys(l).length>0?Object.keys(l).forEach(g=>{const[y]=En(g),b=i[y];b&&(b.signatureKey=l[g],u.push(b))}):u=s;let h={};e.library!=null&&e.library.function!=null&&(h=e.library.function.reduce((g,y)=>(g[y.signature.name]=this.mapFunction(y),g),{}));const m={nodes:i,inputs:u,outputs:c,weights:o,placeholders:s,signature:t,functions:h};return a.length>0&&(m.initNodes=a),m}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){const t=wv(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((s,o)=>(s[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},s),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((s,o)=>{const a=o.type;let i;switch(o.type){case"string":i=Ec(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Ec(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":i=Dc(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Dc(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":i=kc(e.attr,o.tfName,o.defaultValue||0),i===void 0&&o.tfDeprecatedName&&(i=kc(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":i=Oc(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Oc(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":i=Ic(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Ic(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":i=Pc(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Pc(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":i=Ac(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Ac(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":i=Fc(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Fc(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":i=_c(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=_c(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":i=Rc(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Rc(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":i=Ng(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Ng(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return s[o.name]={value:i,type:a},s},{})),r}mapFunction(e){const t=e.nodeDef,r=[],s=[];let o={};t!=null&&(o=t.reduce((d,f)=>(d[f.name]=this.mapNode(f),f.op==="Const"&&s.push(d[f.name]),d),{}));const a=[],i=[];e.signature.inputArg.forEach(d=>{const[f]=En(d.name),h={name:f,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:gh(d.type),type:"dtype"}},children:[]};h.signatureKey=d.name,a.push(h),o[f]=h}),Object.keys(o).forEach(d=>{const f=o[d];f.inputNames.forEach((h,m)=>{const[g,,y]=En(h),b=o[g];if(b.outputs!=null){const $=b.outputs.indexOf(y);if($!==-1){const S=`${g}:${$}`;f.inputNames[m]=S}}f.inputs.push(b),b.children.push(f)})});const c=e.ret;e.signature.outputArg.forEach(d=>{const[f,h]=En(c[d.name]),m=o[f];m!=null&&(m.defaultOutput=h,i.push(m))});const l=this.mapArgsToSignature(e);return{nodes:o,inputs:a,outputs:i,weights:s,placeholders:r,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}}function vF(n){const e=B().global;if(typeof e.atob!="undefined")return e.atob(n);if(typeof Buffer!="undefined")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function $v(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):vF(n);return e?t:t.toLowerCase()}function Ec(n,e,t,r=!1){const s=n[e];return s!=null?$v(s.s,r):t}function Ic(n,e,t){const r=n[e];return r?r.b:t}function kc(n,e,t){const r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function gh(n){switch(typeof n=="string"&&(n=Kt[n]),n){case Kt.DT_FLOAT:case Kt.DT_HALF:return"float32";case Kt.DT_INT32:case Kt.DT_INT64:case Kt.DT_INT8:case Kt.DT_UINT8:return"int32";case Kt.DT_BOOL:return"bool";case Kt.DT_DOUBLE:return"float32";case Kt.DT_STRING:return"string";default:return null}}function Ng(n,e,t){const r=n[e];return r&&r.func?r.func.name:t}function _c(n,e,t){const r=n[e];return r&&r.type?gh(r.type):t}function Rc(n,e,t){const r=n[e];return r&&r.list&&r.list.type?r.list.type.map(s=>gh(s)):t}function Sv(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Ac(n,e,t){const r=n[e];return r&&r.shape?Sv(r.shape):t}function Oc(n,e,t){const r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):t}function Dc(n,e,t,r=!1){const s=n[e];return s&&s.list&&s.list.s?s.list.s.map(o=>$v(o,r)):t}function Fc(n,e,t){const r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>Sv(s)):t}function Pc(n,e,t){const r=n[e];return r&&r.list&&r.list.b?r.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wF{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,o)=>(s[o]=this.getAttr(o),s),{}))}getInput(e){return bt(e,this.tensorMap,this.context)}getAttr(e,t){const r=this.node.rawAttrs[e];if(r.tensor!=null)return bt(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return kc(this.node.rawAttrs,e,t);if(r.s!=null)return Ec(this.node.rawAttrs,e,t);if(r.b!=null)return Ic(this.node.rawAttrs,e,t);if(r.shape!=null)return Ac(this.node.rawAttrs,e,t);if(r.type!=null)return _c(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return Oc(this.node.rawAttrs,e,t);if(r.list.s!=null)return Dc(this.node.rawAttrs,e,t);if(r.list.shape!=null)return Fc(this.node.rawAttrs,e,t);if(r.list.b!=null)return Pc(this.node.rawAttrs,e,t);if(r.list.type!=null)return Rc(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pt=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:ep,abs:_t,acos:Jx,acosh:e0,add:ae,addN:t0,all:n0,any:r0,argMax:ap,argMin:s0,asin:o0,asinh:a0,atan:i0,atan2:u0,atanh:c0,avgPool:up,avgPool3d:d0,basicLSTMCell:f0,batchNorm:zo,batchNorm2d:p0,batchNorm3d:h0,batchNorm4d:m0,batchToSpaceND:cp,bincount:lp,booleanMaskAsync:Qb,broadcastArgs:g0,broadcastTo:ds,buffer:Ue,cast:Se,ceil:y0,clipByValue:x0,clone:Kn,complex:Yn,concat:dt,concat1d:b0,concat2d:v0,concat3d:w0,concat4d:$0,conv1d:S0,conv2d:Go,conv2dTranspose:C0,conv3d:N0,conv3dTranspose:E0,cos:I0,cosh:k0,cosineWindow:Fi,cumprod:_0,cumsum:R0,denseBincount:A0,depthToSpace:O0,depthwiseConv2d:Ii,diag:D0,dilation2d:F0,div:Ie,divNoNan:P0,dot:L0,dropout:n1,einsum:B0,elu:fp,enclosingPowerOfTwo:Xp,equal:jo,erf:V0,euclideanNorm:W0,exp:cr,expandDims:Rt,expm1:z0,eye:mp,fft:Ai,fill:ks,floor:gp,floorDiv:op,fused:s1,gather:yp,gatherND:t1,greater:_s,greaterEqual:xp,ifft:No,imag:qo,image:Ur,inTopKAsync:r1,irfft:Up,isFinite:G0,isInf:j0,isNaN:H0,leakyRelu:bp,less:q0,lessEqual:ki,linalg:c1,linspace:K0,localResponseNormalization:X0,log:bs,log1p:vp,logSigmoid:Q0,logSoftmax:Z0,logSumExp:$p,logicalAnd:So,logicalNot:Sp,logicalOr:Tp,logicalXor:J0,losses:l1,lowerBound:eb,matMul:ve,max:Or,maxPool:Cp,maxPool3d:tb,maxPoolWithArgmax:nb,maximum:Np,mean:To,meshgrid:rb,min:ii,minimum:Ep,mirrorPad:Ip,mod:sb,moments:ob,movingAverage:Zb,mul:Y,multiRNNCell:ab,multinomial:ib,neg:An,norm:Ho,notEqual:kp,oneHot:Co,ones:sr,onesLike:ub,op:O,outerProduct:cb,pad:Yr,pad1d:lb,pad2d:db,pad3d:_p,pad4d:fb,pool:pb,pow:xs,prelu:Ap,print:sp,prod:hb,raggedGather:mb,raggedRange:gb,raggedTensorToTensor:yb,rand:xb,randomGamma:wb,randomNormal:Lp,randomStandardNormal:$b,randomUniform:Bp,range:dr,real:vs,reciprocal:Sb,relu:Ko,relu6:Vp,reshape:z,reverse:fr,reverse1d:Tb,reverse2d:Cb,reverse3d:Nb,reverse4d:Eb,rfft:Oi,round:Mp,rsqrt:Ib,scalar:de,scatterND:Jb,searchSorted:Ri,selu:kb,separableConv2d:_b,setdiff1dAsync:Rb,sigmoid:Rn,sign:Ab,signal:u1,sin:Ob,sinh:Db,slice:Ee,slice1d:Fb,slice2d:Pb,slice3d:Lb,slice4d:Bb,softmax:Vb,softplus:wp,spaceToBatchND:Rp,sparse:d1,sparseToDense:e1,spectral:i1,split:ws,sqrt:Pn,square:on,squaredDifference:Wp,squeeze:tn,stack:Bn,step:zp,stridedSlice:Mb,string:f1,sub:pe,sum:_e,tan:Ub,tanh:ai,tensor:sn,tensor1d:nn,tensor2d:Dr,tensor3d:Gp,tensor4d:Wb,tensor5d:zb,tensor6d:Gb,tile:fs,topk:jb,transpose:Eo,truncatedNormal:Hb,unique:qb,unsortedSegmentSum:Kb,unstack:hr,upperBound:Xb,variable:Yb,where:Mr,whereAsync:Hp,zeros:lr,zerosLike:Dt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F=(n,e,t,r=pt)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(w("a",n,e,t),w("b",n,e,t))];case"AddN":return[r.addN(w("tensors",n,e,t))];case"FloorMod":case"Mod":return[r.mod(w("a",n,e,t),w("b",n,e,t))];case"Mul":return[r.mul(w("a",n,e,t),w("b",n,e,t))];case"RealDiv":case"Div":return[r.div(w("a",n,e,t),w("b",n,e,t))];case"DivNoNan":return[r.divNoNan(w("a",n,e,t),w("b",n,e,t))];case"FloorDiv":return[r.floorDiv(w("a",n,e,t),w("b",n,e,t))];case"Sub":return[r.sub(w("a",n,e,t),w("b",n,e,t))];case"Minimum":return[r.minimum(w("a",n,e,t),w("b",n,e,t))];case"Maximum":return[r.maximum(w("a",n,e,t),w("b",n,e,t))];case"Pow":return[r.pow(w("a",n,e,t),w("b",n,e,t))];case"SquaredDifference":return[r.squaredDifference(w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SF=(n,e,t,r=pt)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(w("x",n,e,t))];case"Acos":return[r.acos(w("x",n,e,t))];case"Acosh":return[r.acosh(w("x",n,e,t))];case"Asin":return[r.asin(w("x",n,e,t))];case"Asinh":return[r.asinh(w("x",n,e,t))];case"Atan":return[r.atan(w("x",n,e,t))];case"Atan2":return[r.atan2(w("x",n,e,t),w("y",n,e,t))];case"Atanh":return[r.atanh(w("x",n,e,t))];case"Ceil":return[r.ceil(w("x",n,e,t))];case"Complex":return[r.complex(w("real",n,e,t),w("imag",n,e,t))];case"Cos":return[r.cos(w("x",n,e,t))];case"Cosh":return[r.cosh(w("x",n,e,t))];case"Elu":return[r.elu(w("x",n,e,t))];case"Erf":return[r.erf(w("x",n,e,t))];case"Exp":return[r.exp(w("x",n,e,t))];case"Expm1":return[r.expm1(w("x",n,e,t))];case"Floor":return[r.floor(w("x",n,e,t))];case"Log":return[r.log(w("x",n,e,t))];case"Log1p":return[r.log1p(w("x",n,e,t))];case"Imag":return[r.imag(w("x",n,e,t))];case"Neg":return[r.neg(w("x",n,e,t))];case"Reciprocal":return[r.reciprocal(w("x",n,e,t))];case"Real":return[r.real(w("x",n,e,t))];case"Relu":return[r.relu(w("x",n,e,t))];case"Round":return[r.round(w("x",n,e,t))];case"Selu":return[r.selu(w("x",n,e,t))];case"Sigmoid":return[r.sigmoid(w("x",n,e,t))];case"Sin":return[r.sin(w("x",n,e,t))];case"Sign":return[r.sign(w("x",n,e,t))];case"Sinh":return[r.sinh(w("x",n,e,t))];case"Softplus":return[r.softplus(w("x",n,e,t))];case"Sqrt":return[r.sqrt(w("x",n,e,t))];case"Square":return[r.square(w("x",n,e,t))];case"Tanh":return[r.tanh(w("x",n,e,t))];case"Tan":return[r.tan(w("x",n,e,t))];case"ClipByValue":return[r.clipByValue(w("x",n,e,t),w("clipValueMin",n,e,t),w("clipValueMax",n,e,t))];case"Relu6":return[r.relu6(w("x",n,e,t))];case"Rsqrt":return[r.rsqrt(bt(n.inputNames[0],e,t))];case"Prod":return[r.prod(w("x",n,e,t),w("axes",n,e,t))];case"LeakyRelu":return[r.leakyRelu(w("x",n,e,t),w("alpha",n,e,t))];case"Prelu":return[r.prelu(w("x",n,e,t),w("alpha",n,e,t))];case"IsNan":return[r.isNaN(bt(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xt(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){E(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let r=0;r<n.length;r++){const s=n[r],o=e[r];E(s<0||o<0||s===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function Eg(n){return!(typeof n=="number"||n.some(e=>e<0))}function Ys(n,e,t){let r=Lc(n,t);const s=!Eg(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(o=>{r=Lc(o.shape,r)}),!Eg(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Lc(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let r=0;r<n.length;++r){const s=n[r],o=e[r];if(s>=0&&o>=0&&s!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[r]=s>=0?s:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TF{constructor(e,t,r,s,o,a,i){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=de(0),In(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Xt(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,In(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,s)=>this.write(r,t[s]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return sn([],[0].concat(this.elementShape));const r=this.readMany(e);return Xt(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Bn(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return sn([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const r=this.readMany(t);return Xt(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),dt(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,hr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0;const s=e.map(u=>(r+=u,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=r===0?0:t.size/r,a=[];ie(()=>{t=z(t,[1,r,o]);for(let u=0;u<e.length;++u){const l=[0,u===0?0:s[u-1],0],d=[1,e[u],o];a[u]=z(Ee(t,l,d),this.elementShape)}return a});const i=[];for(let u=0;u<e.length;u++)i[u]=u;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gr{constructor(e,t,r,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e!=null&&e.forEach(o=>{if(r!==o.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${o.dtype}`);Xt(t,o.shape,"TensorList shape mismatch: "),In(o)}),this.idTensor=de(0),this.maxNumElements=s,In(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Gr([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Xt(e,this.elementShape,"TensorList shape mismatch: ");const s=Ys(this.elementShape,this.tensors,e);return ie(()=>{const o=this.tensors.map(a=>z(a,s));return Bn(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=Ys(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,Xt(s.shape,e,"TensorList shape mismatch: "),z(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Xt(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");In(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Gr([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Xt(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=Ys(this.elementShape,this.tensors,t);return z(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Xt(this.elementShape,t.shape,"TensorList shape mismatch: "),In(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Xt(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=Ys(this.elementShape,this.tensors,r);return e.length===0?sn([],[0].concat(s)):ie(()=>{const o=e.map(a=>z(this.tensors[a],s));return Bn(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Xt(this.elementShape,t,"TensorList shape mismatch: ");const r=Ys(this.elementShape,this.tensors,t);return this.size()===0?sn([],[0].concat(r)):ie(()=>{const s=this.tensors.map(o=>z(o,r));return dt(s,0)})}}function CF(n,e,t){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const s=n.shape.slice(1);Xt(s,e,"TensorList shape mismatch: ");const o=hr(n);return new Gr(o,e,r)}function NF(n,e,t,r){return new Gr([],n,e,r)}function EF(n,e,t,r){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const o=new Gr([],t,n.dtype,r),a=hr(n,0);return e.forEach((i,u)=>{o.setItem(i,a[u])}),o}function IF(n,e,t){let r=0;const s=e.map(l=>(r+=l,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),a=Lc(o,t),i=r===0?0:n.size/r,u=ie(()=>{const l=[];n=z(n,[1,r,i]);for(let d=0;d<e.length;++d){const h=[0,d===0?0:s[d-1],0],m=[1,e[d],i];l[d]=z(Ee(n,h,m),a)}return n.dispose(),l}),c=new Gr([],t,n.dtype,e.length);for(let l=0;l<u.length;l++)c.setItem(l,u[l]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kF=(n,e,t)=>H(void 0,null,function*(){switch(n.op){case"If":case"StatelessIf":{const r=w("thenBranch",n,e,t),s=w("elseBranch",n,e,t),o=w("cond",n,e,t),a=w("args",n,e,t);return(yield o.data())[0]?t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const r=w("body",n,e,t),s=w("cond",n,e,t),o=w("args",n,e,t),a=yield t.functionMap[s].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),i=o.map(l=>l.id);let u=yield a[0].data();a.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let c=o;for(;u[0];){const l=c;c=yield t.functionMap[r].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const d=c.map(h=>h.id);l.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});const f=yield t.functionMap[s].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);u=yield f[0].data(),f.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return c}case"LoopCond":{const r=w("pred",n,e,t);return[Wn(r)]}case"Switch":{const r=w("pred",n,e,t);let s=w("data",n,e,t);return s.kept||(s=Wn(s)),(yield r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=n.inputNames.find(s=>bt(s,e,t)!==void 0);if(r){const s=bt(r,e,t);return[Wn(s)]}return}case"Enter":{const r=w("frameName",n,e,t),s=w("tensor",n,e,t);return t.enterFrame(r),[Wn(s)]}case"Exit":{const r=w("tensor",n,e,t);return t.exitFrame(),[Wn(r)]}case"NextIteration":{const r=w("tensor",n,e,t);return t.nextIteration(),[Wn(r)]}case"TensorArrayV3":{const r=w("size",n,e,t),s=w("dtype",n,e,t),o=w("elementShape",n,e,t),a=w("dynamicSize",n,e,t),i=w("clearAfterRead",n,e,t),u=w("identicalElementShapes",n,e,t),c=w("name",n,e,t),l=new TF(c,s,r,o,u,a,i);return t.addTensorArray(l),[l.idTensor,de(1)]}case"TensorArrayWriteV3":{const r=w("tensorArrayId",n,e,t),s=w("index",n,e,t),o=w("tensor",n,e,t),a=t.getTensorArray(r.id);return a.write(s,o),[a.idTensor]}case"TensorArrayReadV3":{const r=w("tensorArrayId",n,e,t),s=w("index",n,e,t);return[t.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=w("tensorArrayId",n,e,t),s=w("indices",n,e,t),o=w("dtype",n,e,t);return[t.getTensorArray(r.id).gather(s,o)]}case"TensorArrayScatterV3":{const r=w("tensorArrayId",n,e,t),s=w("indices",n,e,t),o=w("tensor",n,e,t),a=t.getTensorArray(r.id);return a.scatter(s,o),[a.idTensor]}case"TensorArrayConcatV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id),o=w("dtype",n,e,t);return[s.concat(o)]}case"TensorArraySplitV3":{const r=w("tensorArrayId",n,e,t),s=w("tensor",n,e,t),o=w("lengths",n,e,t),a=t.getTensorArray(r.id);return a.split(o,s),[a.idTensor]}case"TensorArraySizeV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return[de(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=w("tensorListId",n,e,t),s=w("index",n,e,t),o=w("tensor",n,e,t),a=t.getTensorList(r.id);return a.setItem(s,o),[a.idTensor]}case"TensorListGetItem":{const r=w("tensorListId",n,e,t),s=w("index",n,e,t),o=w("elementShape",n,e,t),a=w("elementDType",n,e,t);return[t.getTensorList(r.id).getItem(s,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=w("indices",n,e,t),s=w("tensor",n,e,t),o=w("elementShape",n,e,t),a=w("numElements",n,e,t),i=EF(s,r,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=w("elementShape",n,e,t),s=w("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=w(o,n,e,t),i=n.op==="TensorListReserve"?-1:a,u=NF(r,s,a,i);return t.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=w("tensorListId",n,e,t),s=w("indices",n,e,t),o=w("elementShape",n,e,t),a=w("elementDType",n,e,t);return[t.getTensorList(r.id).gather(s,a,o)]}case"TensorListStack":{const r=w("tensorListId",n,e,t),s=w("elementShape",n,e,t),o=w("elementDType",n,e,t),a=w("numElements",n,e,t);return[t.getTensorList(r.id).stack(s,o,a)]}case"TensorListFromTensor":{const r=w("tensor",n,e,t),s=w("elementShape",n,e,t),o=w("elementDType",n,e,t),a=CF(r,s,o);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=w("tensorListId",n,e,t),s=t.getTensorList(r.id),o=w("dtype",n,e,t),a=w("elementShape",n,e,t);return[s.concat(o,a)]}case"TensorListPushBack":{const r=w("tensorListId",n,e,t),s=w("tensor",n,e,t),o=t.getTensorList(r.id);return o.pushBack(s),[o.idTensor]}case"TensorListPopBack":{const r=w("tensorListId",n,e,t),s=w("elementShape",n,e,t),o=w("elementDType",n,e,t);return[t.getTensorList(r.id).popBack(s,o)]}case"TensorListSplit":{const r=w("tensor",n,e,t),s=w("elementShape",n,e,t),o=w("lengths",n,e,t),a=IF(r,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=w("tensorListId",n,e,t),s=t.getTensorList(r.id);return[de(s.size(),"int32")]}case"TensorListResize":{const r=w("tensorListId",n,e,t),s=w("size",n,e,t),a=t.getTensorList(r.id).resize(s);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ig(n,e,t){const[r,s]=w("fusedOps",n,e,t),o=r==="biasadd",a=!o,i=s==="prelu",u=r==="fusedbatchnorm",c=w("numArgs",n,e,t);if(o){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=w("strides",n,e,t),d=Ua(n,e,t),f=w("dataFormat",n,e,t).toUpperCase(),h=w("dilations",n,e,t);let[m,g]=w("args",n,e,t);a&&(g=m,m=void 0);const y=w("leakyreluAlpha",n,e,t);return{stride:l,pad:d,dataFormat:f,dilations:h,biasArg:m,preluArg:g,activationFunc:s,leakyreluAlpha:y}}const _F=(n,e,t,r=pt)=>{switch(n.op){case"Conv1D":{const s=w("stride",n,e,t),o=w("pad",n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilation",n,e,t);return[r.conv1d(w("x",n,e,t),w("filter",n,e,t),s,o,a,i)]}case"Conv2D":{const s=w("strides",n,e,t),o=Ua(n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilations",n,e,t);return[r.conv2d(w("x",n,e,t),w("filter",n,e,t),[s[1],s[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=Ig(n,e,t);return[r.fused.conv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=Ig(n,e,t);return[r.fused.depthwiseConv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=w("outputShape",n,e,t),o=w("strides",n,e,t),a=Ua(n,e,t);return[r.conv2dTranspose(w("x",n,e,t),w("filter",n,e,t),s,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=w("strides",n,e,t),o=Ua(n,e,t),a=w("dilations",n,e,t),i=w("dataFormat",n,e,t).toUpperCase();return[r.depthwiseConv2d(w("input",n,e,t),w("filter",n,e,t),[s[1],s[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilations",n,e,t);return[r.conv3d(w("x",n,e,t),w("filter",n,e,t),[s[1],s[2],s[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.avgPool(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPool":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.maxPool(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPoolWithArgmax":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t),i=w("includeBatchInIndex",n,e,t),{result:u,indexes:c}=r.maxPoolWithArgmax(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o,i);return[u,c]}case"AvgPool3D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.avgPool3d(w("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"MaxPool3D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.maxPool3d(w("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"Dilation2D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("dilations",n,e,t),i=s[1],u=s[2],c=a[1],l=a[2];return[r.dilation2d(w("x",n,e,t),w("filter",n,e,t),[i,u],o,[c,l],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF=(n,e,t,r=pt)=>{switch(n.op){case"Fill":{const s=w("shape",n,e,t),o=w("dtype",n,e,t),a=w("value",n,e,t);return[r.fill(s,a,o)]}case"LinSpace":{const s=w("start",n,e,t),o=w("stop",n,e,t),a=w("num",n,e,t);return[r.linspace(s,o,a)]}case"Multinomial":{const s=w("logits",n,e,t),o=w("numSamples",n,e,t),a=w("seed",n,e,t);return[r.multinomial(s,o,a)]}case"OneHot":{const s=w("indices",n,e,t),o=w("depth",n,e,t),a=w("onValue",n,e,t),i=w("offValue",n,e,t),u=w("dtype",n,e,t);return[r.oneHot(s,o,a,i,u)]}case"Ones":return[r.ones(w("shape",n,e,t),w("dtype",n,e,t))];case"OnesLike":return[r.onesLike(w("x",n,e,t))];case"RandomStandardNormal":return[r.randomStandardNormal(w("shape",n,e,t),w("dtype",n,e,t),w("seed",n,e,t))];case"RandomUniform":return[r.randomUniform(w("shape",n,e,t),w("minval",n,e,t),w("maxval",n,e,t),w("dtype",n,e,t))];case"Range":{const s=w("start",n,e,t),o=w("stop",n,e,t),a=w("step",n,e,t);return[r.range(s,o,a,w("dtype",n,e,t))]}case"TruncatedNormal":{const s=w("shape",n,e,t),o=w("mean",n,e,t),a=w("stdDev",n,e,t),i=w("seed",n,e,t);return[r.truncatedNormal(s,o,a,w("dtype",n,e,t),i)]}case"Zeros":return[r.zeros(w("shape",n,e,t),w("dtype",n,e,t))];case"ZerosLike":return[r.zerosLike(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eu(n,e,t){const r=w("boxes",n,e,t),s=w("scores",n,e,t),o=w("maxOutputSize",n,e,t),a=w("iouThreshold",n,e,t),i=w("scoreThreshold",n,e,t),u=w("softNmsSigma",n,e,t);return{boxes:r,scores:s,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}const AF=(o,a,i,u,...c)=>H(void 0,[o,a,i,u,...c],function*(n,e,t,r,s=pt){switch(n.op){case"NonMaxSuppressionV5":{const{boxes:l,scores:d,maxOutputSize:f,iouThreshold:h,scoreThreshold:m,softNmsSigma:g}=Eu(n,e,t),y=yield s.image.nonMaxSuppressionWithScoreAsync(l,d,f,h,m,g);return[y.selectedIndices,y.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:l,scores:d,maxOutputSize:f,iouThreshold:h,scoreThreshold:m}=Eu(n,e,t),g=w("padToMaxOutputSize",n,e,t),y=yield s.image.nonMaxSuppressionPaddedAsync(l,d,f,h,m,g);return[y.selectedIndices,y.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:l,scores:d,maxOutputSize:f,iouThreshold:h,scoreThreshold:m}=Eu(n,e,t);return[yield s.image.nonMaxSuppressionAsync(l,d,f,h,m)]}case"Where":{const l=s.cast(w("condition",n,e,t),"bool"),d=[yield s.whereAsync(l)];return l.dispose(),d}case"ListDiff":return s.setdiff1dAsync(w("x",n,e,t),w("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OF=(n,e,t,r=pt)=>{switch(n.op){case"LowerBound":{const s=w("sortedSequence",n,e,t),o=w("values",n,e,t);return[r.lowerBound(s,o)]}case"TopKV2":{const s=w("x",n,e,t),o=w("k",n,e,t),a=w("sorted",n,e,t),i=r.topk(s,o,a);return[i.values,i.indices]}case"UpperBound":{const s=w("sortedSequence",n,e,t),o=w("values",n,e,t);return[r.upperBound(s,o)]}case"Unique":{const s=w("x",n,e,t),o=r.unique(s);return[o.values,o.indices]}case"UniqueV2":{const s=w("x",n,e,t),o=w("axis",n,e,t),a=r.unique(s,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF=(n,e,t,r=pt)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=w("default",n,e,t);return[bt(n.name,e,t)||s];case"Placeholder":return[bt(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const l=w("x",n,e,t);return[Wn(l)]}case"IdentityN":return w("x",n,e,t).map(l=>Wn(l));case"Snapshot":const o=w("x",n,e,t);return[Wn(o)];case"Shape":return[r.tensor1d(w("x",n,e,t).shape,"int32")];case"ShapeN":return w("x",n,e,t).map(l=>r.tensor1d(l.shape));case"Size":return[r.scalar(w("x",n,e,t).size,"int32")];case"Rank":return[r.scalar(w("x",n,e,t).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=w("x",n,e,t),i=w("data",n,e,t),u=w("message",n,e,t),c=w("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FF{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=de(0),this.tensorMap=new Map,In(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return de(this.size(),"int32")}import(e,t){return H(this,null,function*(){this.checkKeyAndValueTensor(e,t);const r=yield e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),ie(()=>{const s=hr(t),o=r.length,a=s.length;E(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let i=0;i<o;i++){const u=r[i],c=s[i];In(c),this.tensorMap.set(u,c)}return this.handle})})}find(e,t){return H(this,null,function*(){this.checkKeyAndValueTensor(e,t);const r=yield e.data();return ie(()=>{const s=[];for(let o=0;o<r.length;o++){const a=r[o],i=this.findWithDefault(a,t);s.push(i)}return Bn(s)})})}findWithDefault(e,t){const r=this.tensorMap.get(e);return r!=null?r:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PF=(n,e,t,r)=>H(void 0,null,function*(){switch(n.op){case"HashTable":case"HashTableV2":{const s=w("keyDType",n,e,t),o=w("valueDType",n,e,t),a=new FF(s,o);return r.addHashTable(n.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=w("tableHandle",n,e,t,r),o=w("keys",n,e,t),a=w("values",n,e,t);return[yield r.getHashTableById(s.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=w("tableHandle",n,e,t,r),o=w("keys",n,e,t),a=w("defaultValue",n,e,t);return[yield r.getHashTableById(s.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=w("tableHandle",n,e,t,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LF=(n,e,t,r=pt)=>{switch(n.op){case"ResizeBilinear":{const s=w("images",n,e,t),o=w("size",n,e,t),a=w("alignCorners",n,e,t),i=w("halfPixelCenters",n,e,t);return[r.image.resizeBilinear(s,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const s=w("images",n,e,t),o=w("size",n,e,t),a=w("alignCorners",n,e,t),i=w("halfPixelCenters",n,e,t);return[r.image.resizeNearestNeighbor(s,[o[0],o[1]],a,i)]}case"CropAndResize":{const s=w("image",n,e,t),o=w("boxes",n,e,t),a=w("boxInd",n,e,t),i=w("cropSize",n,e,t),u=w("method",n,e,t),c=w("extrapolationValue",n,e,t);return[r.image.cropAndResize(s,o,a,i,u,c)]}case"ImageProjectiveTransformV3":{const s=w("images",n,e,t),o=w("transforms",n,e,t),a=w("outputShape",n,e,t),i=w("fillValue",n,e,t),u=w("interpolation",n,e,t),c=w("fillMode",n,e,t);return[r.image.transform(s,o,u.toLowerCase(),c.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BF=(n,e,t,r=pt)=>{switch(n.op){case"Equal":return[r.equal(w("a",n,e,t),w("b",n,e,t))];case"NotEqual":return[r.notEqual(w("a",n,e,t),w("b",n,e,t))];case"Greater":return[r.greater(w("a",n,e,t),w("b",n,e,t))];case"GreaterEqual":return[r.greaterEqual(w("a",n,e,t),w("b",n,e,t))];case"Less":return[r.less(w("a",n,e,t),w("b",n,e,t))];case"LessEqual":return[r.lessEqual(w("a",n,e,t),w("b",n,e,t))];case"LogicalAnd":return[r.logicalAnd(w("a",n,e,t),w("b",n,e,t))];case"LogicalNot":return[r.logicalNot(w("a",n,e,t))];case"LogicalOr":return[r.logicalOr(w("a",n,e,t),w("b",n,e,t))];case"Select":case"SelectV2":return[r.where(w("condition",n,e,t),w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VF=(n,e,t,r=pt)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(w("a",n,e,t),w("b",n,e,t),w("transposeA",n,e,t),w("transposeB",n,e,t))];case"Einsum":return[r.einsum(w("equation",n,e,t),...w("tensors",n,e,t))];case"Transpose":return[r.transpose(w("x",n,e,t),w("perm",n,e,t))];case"_FusedMatMul":const[s,o]=w("fusedOps",n,e,t),a=s==="biasadd",i=o==="prelu",u=w("numArgs",n,e,t),c=w("leakyreluAlpha",n,e,t);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=w("args",n,e,t);return[r.fused.matMul({a:w("a",n,e,t),b:w("b",n,e,t),transposeA:w("transposeA",n,e,t),transposeB:w("transposeB",n,e,t),bias:l,activation:o,preluActivationWeights:d,leakyreluAlpha:c})];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MF=(n,e,t,r=pt)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(w("x",n,e,t),w("axis",n,e,t),w("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"FusedBatchNormV3":return[r.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"LRN":return[r.localResponseNormalization(w("x",n,e,t),w("radius",n,e,t),w("bias",n,e,t),w("alpha",n,e,t),w("beta",n,e,t))];case"Softmax":return[r.softmax(w("x",n,e,t))];case"LogSoftmax":return[r.logSoftmax(w("x",n,e,t))];case"SparseToDense":return[r.sparseToDense(w("sparseIndices",n,e,t),w("outputShape",n,e,t),w("sparseValues",n,e,t),w("defaultValue",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UF=(n,e,t,r=pt)=>{switch(n.op){case"Max":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.max(w("x",n,e,t),i,u)]}case"Mean":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.mean(w("x",n,e,t),i,u)]}case"Min":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.min(w("x",n,e,t),i,u)]}case"Sum":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.sum(w("x",n,e,t),i,u)]}case"All":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.all(w("x",n,e,t),i,u)]}case"Any":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.any(w("x",n,e,t),i,u)]}case"ArgMax":{const i=w("axis",n,e,t);return[r.argMax(w("x",n,e,t),i)]}case"ArgMin":{const i=w("axis",n,e,t);return[r.argMin(w("x",n,e,t),i)]}case"Prod":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.prod(w("x",n,e,t),i,u)]}case"Cumprod":{const i=w("axis",n,e,t),u=w("exclusive",n,e,t),c=w("reverse",n,e,t);return[r.cumprod(w("x",n,e,t),i,u,c)]}case"Cumsum":{const i=w("axis",n,e,t),u=w("exclusive",n,e,t),c=w("reverse",n,e,t);return[r.cumsum(w("x",n,e,t),i,u,c)]}case"Bincount":const s=w("x",n,e,t),o=w("weights",n,e,t),a=w("size",n,e,t);return[r.bincount(s,o,a)];case"DenseBincount":{const i=w("x",n,e,t),u=w("weights",n,e,t),c=w("size",n,e,t),l=w("binaryOutput",n,e,t);return[r.denseBincount(i,u,c,l)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WF=(n,e,t,r=pt)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=w("n",n,e,t),o=w("axis",n,e,t);let a=w("tensors",n,e,t);return a=a.slice(0,s),[r.concat(a,o)]}case"Gather":{const s=w("x",n,e,t),o=w("indices",n,e,t);return[r.gather(s,r.cast(o,"int32"),0)]}case"GatherV2":{const s=w("axis",n,e,t),o=w("batchDims",n,e,t),a=w("x",n,e,t),i=w("indices",n,e,t);return[r.gather(a,r.cast(i,"int32"),s,o)]}case"Reverse":{const s=w("dims",n,e,t),o=[];for(let i=0;i<s.length;i++)s[i]&&o.push(i);const a=w("x",n,e,t);return[r.reverse(a,o)]}case"ReverseV2":{const s=w("axis",n,e,t),o=w("x",n,e,t);return[r.reverse(o,s)]}case"Slice":{const s=w("begin",n,e,t),o=w("size",n,e,t);return[r.slice(w("x",n,e,t),s,o)]}case"StridedSlice":{const s=w("begin",n,e,t),o=w("end",n,e,t),a=w("strides",n,e,t),i=w("beginMask",n,e,t),u=w("endMask",n,e,t),c=w("ellipsisMask",n,e,t),l=w("newAxisMask",n,e,t),d=w("shrinkAxisMask",n,e,t),f=w("x",n,e,t);return[r.stridedSlice(f,s,o,a,i,u,c,l,d)]}case"Pack":return ie(()=>{const s=w("axis",n,e,t),o=w("tensors",n,e,t),a=o[0].shape,i=r.squeeze(o[0]).shape,u=o.map(c=>{const l=Me(c.shape,a);if(!l&&!Me(r.squeeze(c).shape,i))throw new Error("the input tensors shape does not match");return l?c:r.reshape(c,a)});return[r.stack(u,s)]});case"Unpack":{const s=w("axis",n,e,t),o=w("tensor",n,e,t);return r.unstack(o,s)}case"Tile":{const s=w("reps",n,e,t);return[r.tile(w("x",n,e,t),s)]}case"Split":case"SplitV":{const s=w("axis",n,e,t),o=w("numOrSizeSplits",n,e,t),a=w("x",n,e,t);return r.split(a,o,s)}case"ScatterNd":{const s=w("indices",n,e,t),o=w("values",n,e,t),a=w("shape",n,e,t);return[r.scatterND(s,o,a)]}case"GatherNd":{const s=w("x",n,e,t),o=w("indices",n,e,t);return[r.gatherND(s,o)]}case"SparseToDense":{const s=w("sparseIndices",n,e,t),o=w("outputShape",n,e,t),a=w("sparseValues",n,e,t),i=w("defaultValue",n,e,t);return[r.sparseToDense(s,a,o,a.dtype===i.dtype?i:r.cast(i,a.dtype))]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zF=(n,e,t,r=pt)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(w("indices",n,e,t),w("values",n,e,t),w("denseShape",n,e,t),w("defaultValue",n,e,t));return[s,o,a,i]}case"SparseReshape":{const{outputIndices:s,outputShape:o}=r.sparse.sparseReshape(w("inputIndices",n,e,t),w("inputShape",n,e,t),w("newShape",n,e,t));return[s,o]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GF=(n,e,t,r=pt)=>{switch(n.op){case"FFT":return[r.fft(w("x",n,e,t))];case"IFFT":return[r.ifft(w("x",n,e,t))];case"RFFT":return[r.rfft(w("x",n,e,t))];case"IRFFT":return[r.irfft(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jF=(n,e,t,r=pt)=>{switch(n.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:o}=r.string.stringNGrams(w("data",n,e,t),w("dataSplits",n,e,t),w("separator",n,e,t),w("nGramWidths",n,e,t),w("leftPad",n,e,t),w("rightPad",n,e,t),w("padWidth",n,e,t),w("preserveShortSequences",n,e,t));return[s,o]}case"StringSplit":{const{indices:s,values:o,shape:a}=r.string.stringSplit(w("input",n,e,t),w("delimiter",n,e,t),w("skipEmpty",n,e,t));return[s,o,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(w("input",n,e,t),w("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HF=(n,e,t,r=pt)=>{switch(n.op){case"Cast":return[r.cast(w("x",n,e,t),w("dtype",n,e,t))];case"ExpandDims":{const s=w("axis",n,e,t);return[r.expandDims(w("x",n,e,t),s)]}case"Squeeze":{const s=w("axis",n,e,t);return[r.squeeze(w("x",n,e,t),s)]}case"Reshape":return[r.reshape(w("x",n,e,t),w("shape",n,e,t))];case"MirrorPad":return[r.mirrorPad(w("x",n,e,t),w("padding",n,e,t),w("mode",n,e,t))];case"PadV2":case"Pad":return[r.pad(w("x",n,e,t),w("padding",n,e,t),w("constantValue",n,e,t))];case"SpaceToBatchND":{const s=w("blockShape",n,e,t),o=w("paddings",n,e,t);return[r.spaceToBatchND(w("x",n,e,t),s,o)]}case"BatchToSpaceND":{const s=w("blockShape",n,e,t),o=w("crops",n,e,t);return[r.batchToSpaceND(w("x",n,e,t),s,o)]}case"DepthToSpace":{const s=w("blockSize",n,e,t),o=w("dataFormat",n,e,t).toUpperCase();return[r.depthToSpace(w("x",n,e,t),s,o)]}case"BroadcastTo":return[r.broadcastTo(w("x",n,e,t),w("shape",n,e,t))];case"BroadcastArgs":return[r.broadcastArgs(w("s0",n,e,t),w("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kg(n,e,t,r,s=ie){const o=((a,i,u)=>{switch(a.category){case"arithmetic":return s(()=>$F(a,i,u));case"basic_math":return s(()=>SF(a,i,u));case"control":return kF(a,i,u);case"convolution":return s(()=>_F(a,i,u));case"creation":return s(()=>RF(a,i,u));case"dynamic":return AF(a,i,u);case"evaluation":return s(()=>OF(a,i,u));case"image":return s(()=>LF(a,i,u));case"graph":return s(()=>DF(a,i,u));case"logical":return s(()=>BF(a,i,u));case"matrices":return s(()=>VF(a,i,u));case"normalization":return s(()=>MF(a,i,u));case"reduction":return s(()=>UF(a,i,u));case"slice_join":return s(()=>WF(a,i,u));case"sparse":return s(()=>zF(a,i,u));case"spectral":return s(()=>GF(a,i,u));case"string":return s(()=>jF(a,i,u));case"transformation":return s(()=>HF(a,i,u));case"hash_table":return PF(a,i,u,r);case"custom":const c=wv(a.op);if(c&&c.customExecutor)return c.customExecutor(new wF(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return ur(o)?o.then(a=>[].concat(a)):[].concat(o)}class _g{constructor(e={},t={},r={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rg(n,e,t,r){const s=new Set,o=[];let a=null,i=null;const u=new Set,c=Object.keys(n).map(f=>kt(f)[0]);let l=[];r!=null&&(l=r.map(f=>kt(f.name)[0]));const d=[...e];for(;d.length>0;){const f=d.pop();if((Tv(f)||QF(f)||ZF(f))&&a==null&&(a=f,i=a.children.map(h=>h.name).filter(h=>s.has(h))),s.add(f.name),t[f.name]==null&&c.indexOf(f.name)===-1&&l.indexOf(f.name)===-1){if(f.inputs.length===0){o.push(f.name);continue}f.inputs.forEach(h=>{u.has(h.name)||(u.add(h.name),d.push(h))})}}return{inputs:n,outputs:e,usedNodes:s,missingInputs:o,dynamicNode:a,syncInputs:i}}function qF(n,e,t){const{usedNodes:r,inputs:s}=t,o=[],a=Object.keys(s).map(l=>kt(l)[0]).map(l=>n.nodes[l]),i=n.initNodes;a.forEach(l=>{r.has(l.name)&&o.push(l)}),n.weights.forEach(l=>{r.has(l.name)&&o.push(l)}),i!=null&&i.forEach(l=>{r.has(l.name)&&o.push(l)});const u=new Set,c=[];for(;o.length>0;){const l=o.pop();u.add(l.name),e[l.name]||c.push(l),l.children.forEach(d=>{!u.has(d.name)&&r.has(d.name)&&d.inputs.every(f=>u.has(f.name))&&o.push(d)})}return c}const KF=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],XF=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],YF=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Tv(n){return KF.indexOf(n.op)>=0}function QF(n){return XF.indexOf(n.op)>=0}function ZF(n){return YF.indexOf(n.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ci{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new ci(e.functions[r],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const r=e.map(o=>o.name).sort(),s=t.map(o=>o.name).sort();return r.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){const r=Rg(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:o,syncInputs:a}=r;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const i=t.map(c=>c.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${u}]. Missing the following inputs: [${s}]`)}return qF(this.graph,this.weightMap,r)}execute(e,t){e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=r.map(d=>this.graph.nodes[kt(d)[0]]),o=t.map(d=>kt(d)[0]);let a=o.map(d=>this.graph.nodes[d]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);const i=this.getCompilationKey(s,a);let u=this.compiledMap.get(i);u==null&&(u=this.compile(e,a),this.compiledMap.set(i,u));const c={},l={};return ie(()=>{const d=new _g(this.weightMap,c,l,this.functionExecutorMap),f=Object.assign({},this.weightMap);Object.keys(e).forEach(g=>{const[y,b]=kt(g),$=[];$[b]=e[g],f[y]=$});const h=this.getFrozenTensorIds(f),m={};for(let g=0;g<u.length;g++){const y=u[g];if(!f[y.name]){const b=kg(y,f,d,this._resourceManager);if(ur(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);f[y.name]=b,this.checkTensorForDisposal(y.name,y,f,d,h,o,m)}}return this.parent==null&&d.dispose(h),t.map(g=>bt(g,f,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,r,s,o,a,i){t.category==="control"||a.indexOf(e)!==-1||(r[e].forEach(u=>{u!=null&&(i[u.id]=(i[u.id]||0)+t.children.length)}),t.inputs.forEach(u=>{if(u.category!=="control"){const c=FD(u.name,r,s);c!=null&&c.forEach(l=>{if(l&&!l.kept&&!o.has(l.id)){const d=i[l.id];if(d===1){if(!this.keepTensorForDebug)l.dispose();else{const[f,h]=En(t.name,s);this.intermediateTensors[f]?this.intermediateTensors[f][h]=l:(this.intermediateTensors[f]=[],this.intermediateTensors[f][h]=l)}delete i[l.id]}else d!=null&&i[l.id]--}})}}))}executeAsync(e,t){return H(this,null,function*(){return this._executeAsync(e,t)})}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(r=>{r&&!r.kept&&!r.isDisposed&&!this.keepIds.has(r.id)&&r.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}_executeAsync(a,i){return H(this,arguments,function*(e,t,r=!1,s={},o={}){r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=B().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){console.warn(f.message)}this.resetIntermediateTensors();const u=new _g(this.weightMap,s,o,this.functionExecutorMap);this.tensorsMap=yield this.executeWithControlFlow(e,u,t,r);const c=t.map(f=>bt(f,this.tensorsMap,u)),l=c.map(f=>f.id),d=Object.keys(e).map(f=>e[f].id);return this.keepIds=new Set([...l,...d,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&u.dispose(this.keepIds),c})}executeFunctionAsync(e,t,r){return H(this,null,function*(){const s=e.reduce((o,a,i)=>(o[this.inputs[i].name]=a,o),{});return this._executeAsync(s,this.outputNodes,!0,t,r)})}executeWithControlFlow(e,t,r,s){return H(this,null,function*(){const o=Object.keys(e),a=o.map(S=>this.graph.nodes[kt(S)[0]]),i=r.map(S=>kt(S)[0]);let u=i.map(S=>this.graph.nodes[S]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:d,syncInputs:f}=Rg(e,u,this.weightMap,this._initNodes),h=[...a,...this.graph.weights,...this._initNodes||[]].map(S=>({node:S,contexts:t.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(S=>{const[C,I]=kt(S),A=[];A[I]=e[S],m[C]=A});const g={},y=this.getFrozenTensorIds(m),b={};for(;h.length>0;){const S=this.processStack(a,h,t,m,b,y,i,g,c);yield Promise.all(S)}d==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const $=u.filter(S=>!Tv(S)&&!bt(S.name,m,t)).map(S=>S.name);if($.length>0){let S="";throw d!=null&&(S=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${$}] from the provided inputs [${o}]. Consider providing the following inputs: [${l}]. ${S}`)}return m})}processStack(e,t,r,s,o,a,i,u,c){const l=[];for(;t.length>0;){const d=t.pop();r.currentContext=d.contexts;let f="";if(d.node.op==="Enter"&&w("isConstant",d.node,s,r)&&([f]=En(d.node.name,r)),s[d.node.name]==null){const h=kg(d.node,s,r,this._resourceManager);f||([f]=En(d.node.name,r));const m=r.currentContext;ur(h)?l.push(h.then(g=>(s[f]=g,r.currentContext=m,this.checkTensorForDisposal(f,d.node,s,r,a,i,u),this.processChildNodes(d.node,t,r,s,o,c),g))):(s[f]=h,this.checkTensorForDisposal(f,d.node,s,r,a,i,u),this.processChildNodes(d.node,t,r,s,o,c))}else this.processChildNodes(d.node,t,r,s,o,c)}return l}processChildNodes(e,t,r,s,o,a){e.children.forEach(i=>{const[u]=En(i.name,r);o[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(c=>!!bt(c,s,r))&&(o[u]=!0,t.push({contexts:r.currentContext,node:i})):i.inputNames.every(c=>!!bt(c,s,r))&&(o[u]=!0,t.push({contexts:r.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const r=e[t],[s]=kt(t),o=this.graph.nodes[s];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,i=a.length===r.shape.length&&r.shape.every((u,c)=>a[c]===-1||a[c]===u);E(i,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${r.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&E(r.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){const t={};for(const r in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[r]!=null){const s=this._signature.inputs[r];t[s.name]=e[r]}else t[r]=e[r];return t}checkInputs(e){const t=Object.keys(e).filter(r=>{const[s]=kt(r);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{const[r]=kt(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}}class JF{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eP="?tfjs-format=file",tP="model.json";class nP{constructor(e,t={},r=uh){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new JF}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return ur(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(r=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}this.signature=r,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new ci(Cg.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=Cg.Instance.transformGraph(e.modelInitializer);this.initializer=new ci(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}save(e,t){return H(this,null,function*(){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)})}predict(e,t){const r=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){const s=r instanceof Te?[r]:r,o={};return s.forEach((a,i)=>o[this.structuredOutputKeys[i]]=a),o}return r}normalizeInputs(e){if(!(e instanceof Te)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,r,s)=>(t[r]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}executeAsync(e,t){return H(this,null,function*(){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=yield this.executor.executeAsync(e,t);return r.length>1?r:r[0]})}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}function yh(r){return H(this,arguments,function*(n,e={},t=uh){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=rP(n));const s=new nP(n,e,t);return yield s.load(),s})}function rP(n){return n.endsWith("/")||(n=n+"/"),`${n}${tP}${eP}`}var sP={};(function(){var n;function e(p){var x=0;return function(){return x<p.length?{done:!1,value:p[x++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(p,x,v){return p==Array.prototype||p==Object.prototype||(p[x]=v.value),p};function r(p){p=[typeof globalThis=="object"&&globalThis,p,typeof window=="object"&&window,typeof self=="object"&&self,typeof _n=="object"&&_n];for(var x=0;x<p.length;++x){var v=p[x];if(v&&v.Math==Math)return v}throw Error("Cannot find global object")}var s=r(this);function o(p,x){if(x)e:{var v=s;p=p.split(".");for(var T=0;T<p.length-1;T++){var k=p[T];if(!(k in v))break e;v=v[k]}p=p[p.length-1],T=v[p],x=x(T),x!=T&&x!=null&&t(v,p,{configurable:!0,writable:!0,value:x})}}o("Symbol",function(p){function x(R){if(this instanceof x)throw new TypeError("Symbol is not a constructor");return new v(T+(R||"")+"_"+k++,R)}function v(R,_){this.h=R,t(this,"description",{configurable:!0,writable:!0,value:_})}if(p)return p;v.prototype.toString=function(){return this.h};var T="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",k=0;return x}),o("Symbol.iterator",function(p){if(p)return p;p=Symbol("Symbol.iterator");for(var x="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),v=0;v<x.length;v++){var T=s[x[v]];typeof T=="function"&&typeof T.prototype[p]!="function"&&t(T.prototype,p,{configurable:!0,writable:!0,value:function(){return a(e(this))}})}return p});function a(p){return p={next:p},p[Symbol.iterator]=function(){return this},p}function i(p){var x=typeof Symbol!="undefined"&&Symbol.iterator&&p[Symbol.iterator];return x?x.call(p):{next:e(p)}}function u(p){if(!(p instanceof Array)){p=i(p);for(var x,v=[];!(x=p.next()).done;)v.push(x.value);p=v}return p}var c=typeof Object.assign=="function"?Object.assign:function(p,x){for(var v=1;v<arguments.length;v++){var T=arguments[v];if(T)for(var k in T)Object.prototype.hasOwnProperty.call(T,k)&&(p[k]=T[k])}return p};o("Object.assign",function(p){return p||c});var l=typeof Object.create=="function"?Object.create:function(p){function x(){}return x.prototype=p,new x},d;if(typeof Object.setPrototypeOf=="function")d=Object.setPrototypeOf;else{var f;e:{var h={a:!0},m={};try{m.__proto__=h,f=m.a;break e}catch(p){}f=!1}d=f?function(p,x){if(p.__proto__=x,p.__proto__!==x)throw new TypeError(p+" is not extensible");return p}:null}var g=d;function y(p,x){if(p.prototype=l(x.prototype),p.prototype.constructor=p,g)g(p,x);else for(var v in x)if(v!="prototype")if(Object.defineProperties){var T=Object.getOwnPropertyDescriptor(x,v);T&&Object.defineProperty(p,v,T)}else p[v]=x[v];p.za=x.prototype}function b(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function $(p){if(p.m)throw new TypeError("Generator is already running");p.m=!0}b.prototype.u=function(p){this.i=p};function S(p,x){p.l={ma:x,na:!0},p.h=p.s||p.v}b.prototype.return=function(p){this.l={return:p},this.h=this.v};function C(p,x,v){return p.h=v,{value:x}}function I(p){this.h=new b,this.i=p}function A(p,x){$(p.h);var v=p.h.j;return v?L(p,"return"in v?v.return:function(T){return{value:T,done:!0}},x,p.h.return):(p.h.return(x),F(p))}function L(p,x,v,T){try{var k=x.call(p.h.j,v);if(!(k instanceof Object))throw new TypeError("Iterator result "+k+" is not an object");if(!k.done)return p.h.m=!1,k;var R=k.value}catch(_){return p.h.j=null,S(p.h,_),F(p)}return p.h.j=null,T.call(p.h,R),F(p)}function F(p){for(;p.h.h;)try{var x=p.i(p.h);if(x)return p.h.m=!1,{value:x.value,done:!1}}catch(v){p.h.i=void 0,S(p.h,v)}if(p.h.m=!1,p.h.l){if(x=p.h.l,p.h.l=null,x.na)throw x.ma;return{value:x.return,done:!0}}return{value:void 0,done:!0}}function V(p){this.next=function(x){return $(p.h),p.h.j?x=L(p,p.h.j.next,x,p.h.u):(p.h.u(x),x=F(p)),x},this.throw=function(x){return $(p.h),p.h.j?x=L(p,p.h.j.throw,x,p.h.u):(S(p.h,x),x=F(p)),x},this.return=function(x){return A(p,x)},this[Symbol.iterator]=function(){return this}}function W(p){function x(T){return p.next(T)}function v(T){return p.throw(T)}return new Promise(function(T,k){function R(_){_.done?T(_.value):Promise.resolve(_.value).then(x,v).then(R,k)}R(p.next())})}function U(p){return W(new V(new I(p)))}o("Promise",function(p){function x(_){this.i=0,this.j=void 0,this.h=[],this.u=!1;var P=this.l();try{_(P.resolve,P.reject)}catch(M){P.reject(M)}}function v(){this.h=null}function T(_){return _ instanceof x?_:new x(function(P){P(_)})}if(p)return p;v.prototype.i=function(_){if(this.h==null){this.h=[];var P=this;this.j(function(){P.m()})}this.h.push(_)};var k=s.setTimeout;v.prototype.j=function(_){k(_,0)},v.prototype.m=function(){for(;this.h&&this.h.length;){var _=this.h;this.h=[];for(var P=0;P<_.length;++P){var M=_[P];_[P]=null;try{M()}catch(j){this.l(j)}}}this.h=null},v.prototype.l=function(_){this.j(function(){throw _})},x.prototype.l=function(){function _(j){return function(X){M||(M=!0,j.call(P,X))}}var P=this,M=!1;return{resolve:_(this.I),reject:_(this.m)}},x.prototype.I=function(_){if(_===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(_ instanceof x)this.L(_);else{e:switch(typeof _){case"object":var P=_!=null;break e;case"function":P=!0;break e;default:P=!1}P?this.F(_):this.s(_)}},x.prototype.F=function(_){var P=void 0;try{P=_.then}catch(M){this.m(M);return}typeof P=="function"?this.M(P,_):this.s(_)},x.prototype.m=function(_){this.v(2,_)},x.prototype.s=function(_){this.v(1,_)},x.prototype.v=function(_,P){if(this.i!=0)throw Error("Cannot settle("+_+", "+P+"): Promise already settled in state"+this.i);this.i=_,this.j=P,this.i===2&&this.K(),this.H()},x.prototype.K=function(){var _=this;k(function(){if(_.D()){var P=s.console;typeof P!="undefined"&&P.error(_.j)}},1)},x.prototype.D=function(){if(this.u)return!1;var _=s.CustomEvent,P=s.Event,M=s.dispatchEvent;return typeof M=="undefined"?!0:(typeof _=="function"?_=new _("unhandledrejection",{cancelable:!0}):typeof P=="function"?_=new P("unhandledrejection",{cancelable:!0}):(_=s.document.createEvent("CustomEvent"),_.initCustomEvent("unhandledrejection",!1,!0,_)),_.promise=this,_.reason=this.j,M(_))},x.prototype.H=function(){if(this.h!=null){for(var _=0;_<this.h.length;++_)R.i(this.h[_]);this.h=null}};var R=new v;return x.prototype.L=function(_){var P=this.l();_.T(P.resolve,P.reject)},x.prototype.M=function(_,P){var M=this.l();try{_.call(P,M.resolve,M.reject)}catch(j){M.reject(j)}},x.prototype.then=function(_,P){function M(se,ee){return typeof se=="function"?function(ce){try{j(se(ce))}catch(he){X(he)}}:ee}var j,X,ue=new x(function(se,ee){j=se,X=ee});return this.T(M(_,j),M(P,X)),ue},x.prototype.catch=function(_){return this.then(void 0,_)},x.prototype.T=function(_,P){function M(){switch(j.i){case 1:_(j.j);break;case 2:P(j.j);break;default:throw Error("Unexpected state: "+j.i)}}var j=this;this.h==null?R.i(M):this.h.push(M),this.u=!0},x.resolve=T,x.reject=function(_){return new x(function(P,M){M(_)})},x.race=function(_){return new x(function(P,M){for(var j=i(_),X=j.next();!X.done;X=j.next())T(X.value).T(P,M)})},x.all=function(_){var P=i(_),M=P.next();return M.done?T([]):new x(function(j,X){function ue(ce){return function(he){se[ce]=he,ee--,ee==0&&j(se)}}var se=[],ee=0;do se.push(void 0),ee++,T(M.value).T(ue(se.length-1),X),M=P.next();while(!M.done)})},x});function G(p,x){p instanceof String&&(p+="");var v=0,T=!1,k={next:function(){if(!T&&v<p.length){var R=v++;return{value:x(R,p[R]),done:!1}}return T=!0,{done:!0,value:void 0}}};return k[Symbol.iterator]=function(){return k},k}o("Array.prototype.keys",function(p){return p||function(){return G(this,function(x){return x})}}),o("Array.prototype.fill",function(p){return p||function(x,v,T){var k=this.length||0;for(0>v&&(v=Math.max(0,k+v)),(T==null||T>k)&&(T=k),T=Number(T),0>T&&(T=Math.max(0,k+T)),v=Number(v||0);v<T;v++)this[v]=x;return this}});function K(p){return p||Array.prototype.fill}o("Int8Array.prototype.fill",K),o("Uint8Array.prototype.fill",K),o("Uint8ClampedArray.prototype.fill",K),o("Int16Array.prototype.fill",K),o("Uint16Array.prototype.fill",K),o("Int32Array.prototype.fill",K),o("Uint32Array.prototype.fill",K),o("Float32Array.prototype.fill",K),o("Float64Array.prototype.fill",K),o("Object.is",function(p){return p||function(x,v){return x===v?x!==0||1/x===1/v:x!==x&&v!==v}}),o("Array.prototype.includes",function(p){return p||function(x,v){var T=this;T instanceof String&&(T=String(T));var k=T.length;for(v=v||0,0>v&&(v=Math.max(v+k,0));v<k;v++){var R=T[v];if(R===x||Object.is(R,x))return!0}return!1}}),o("String.prototype.includes",function(p){return p||function(x,v){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(x instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(x,v||0)!==-1}});var te=this||self;function oe(p,x){p=p.split(".");var v=te;p[0]in v||typeof v.execScript=="undefined"||v.execScript("var "+p[0]);for(var T;p.length&&(T=p.shift());)p.length||x===void 0?v[T]&&v[T]!==Object.prototype[T]?v=v[T]:v=v[T]={}:v[T]=x}function le(p){var x;e:{if((x=te.navigator)&&(x=x.userAgent))break e;x=""}return x.indexOf(p)!=-1}var fe=Array.prototype.map?function(p,x){return Array.prototype.map.call(p,x,void 0)}:function(p,x){for(var v=p.length,T=Array(v),k=typeof p=="string"?p.split(""):p,R=0;R<v;R++)R in k&&(T[R]=x.call(void 0,k[R],R,p));return T},me={},$e=null;function tt(p){var x=p.length,v=3*x/4;v%3?v=Math.floor(v):"=.".indexOf(p[x-1])!=-1&&(v="=.".indexOf(p[x-2])!=-1?v-2:v-1);var T=new Uint8Array(v),k=0;return it(p,function(R){T[k++]=R}),k!==v?T.subarray(0,k):T}function it(p,x){function v(M){for(;T<p.length;){var j=p.charAt(T++),X=$e[j];if(X!=null)return X;if(!/^[\s\xa0]*$/.test(j))throw Error("Unknown base64 encoding at char: "+j)}return M}nt();for(var T=0;;){var k=v(-1),R=v(0),_=v(64),P=v(64);if(P===64&&k===-1)break;x(k<<2|R>>4),_!=64&&(x(R<<4&240|_>>2),P!=64&&x(_<<6&192|P))}}function nt(){if(!$e){$e={};for(var p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),x=["+/=","+/","-_=","-_.","-_"],v=0;5>v;v++){var T=p.concat(x[v].split(""));me[v]=T;for(var k=0;k<T.length;k++){var R=T[k];$e[R]===void 0&&($e[R]=k)}}}}var qe=typeof Uint8Array!="undefined",ht=!(le("Trident")||le("MSIE"))&&typeof te.btoa=="function";function ut(p){if(!ht){var x;x===void 0&&(x=0),nt(),x=me[x];for(var v=Array(Math.floor(p.length/3)),T=x[64]||"",k=0,R=0;k<p.length-2;k+=3){var _=p[k],P=p[k+1],M=p[k+2],j=x[_>>2];_=x[(_&3)<<4|P>>4],P=x[(P&15)<<2|M>>6],M=x[M&63],v[R++]=j+_+P+M}switch(j=0,M=T,p.length-k){case 2:j=p[k+1],M=x[(j&15)<<2]||T;case 1:p=p[k],v[R]=x[p>>2]+x[(p&3)<<4|j>>4]+M+T}return v.join("")}for(x="";10240<p.length;)x+=String.fromCharCode.apply(null,p.subarray(0,10240)),p=p.subarray(10240);return x+=String.fromCharCode.apply(null,p),btoa(x)}var Ke=RegExp("[-_.]","g");function re(p){switch(p){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function ge(p){if(!ht)return tt(p);Ke.test(p)&&(p=p.replace(Ke,re)),p=atob(p);for(var x=new Uint8Array(p.length),v=0;v<p.length;v++)x[v]=p.charCodeAt(v);return x}var Pe;function Le(){return Pe||(Pe=new Uint8Array(0))}var Xe={},dn=typeof Uint8Array.prototype.slice=="function",Ye=0,Tt=0;function Ih(p){var x=0>p;p=Math.abs(p);var v=p>>>0;p=Math.floor((p-v)/4294967296),x&&(v=i(kh(v,p)),x=v.next().value,p=v.next().value,v=x),Ye=v>>>0,Tt=p>>>0}var Dw=typeof BigInt=="function";function kh(p,x){return x=~x,p?p=~p+1:x+=1,[p,x]}function _h(p,x){this.i=p>>>0,this.h=x>>>0}function Rh(p){if(!p)return Ah||(Ah=new _h(0,0));if(!/^-?\d+$/.test(p))return null;if(16>p.length)Ih(Number(p));else if(Dw)p=BigInt(p),Ye=Number(p&BigInt(4294967295))>>>0,Tt=Number(p>>BigInt(32)&BigInt(4294967295));else{var x=+(p[0]==="-");Tt=Ye=0;for(var v=p.length,T=x,k=(v-x)%6+x;k<=v;T=k,k+=6)T=Number(p.slice(T,k)),Tt*=1e6,Ye=1e6*Ye+T,4294967296<=Ye&&(Tt+=Ye/4294967296|0,Ye%=4294967296);x&&(x=i(kh(Ye,Tt)),p=x.next().value,x=x.next().value,Ye=p,Tt=x)}return new _h(Ye,Tt)}var Ah;function Oh(p,x){return Error("Invalid wire type: "+p+" (at position "+x+")")}function Qi(){return Error("Failed to read varint, encoding is invalid.")}function Dh(p,x){return Error("Tried to read past the end of the data "+x+" > "+p)}function xr(){throw Error("Invalid UTF8")}function Fh(p,x){return x=String.fromCharCode.apply(null,x),p==null?x:p+x}var na=void 0,Zi,Fw=typeof TextDecoder!="undefined",Ph,Pw=typeof TextEncoder!="undefined",Lh;function Bh(p){if(p!==Xe)throw Error("illegal external caller")}function Vs(p,x){if(Bh(x),this.V=p,p!=null&&p.length===0)throw Error("ByteString should be constructed with non-empty values")}function Ji(){return Lh||(Lh=new Vs(null,Xe))}function Vh(p){Bh(Xe);var x=p.V;return x=x==null||qe&&x!=null&&x instanceof Uint8Array?x:typeof x=="string"?ge(x):null,x==null?x:p.V=x}function Lw(p){if(typeof p=="string")return{buffer:ge(p),C:!1};if(Array.isArray(p))return{buffer:new Uint8Array(p),C:!1};if(p.constructor===Uint8Array)return{buffer:p,C:!1};if(p.constructor===ArrayBuffer)return{buffer:new Uint8Array(p),C:!1};if(p.constructor===Vs)return{buffer:Vh(p)||Le(),C:!0};if(p instanceof Uint8Array)return{buffer:new Uint8Array(p.buffer,p.byteOffset,p.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function Mh(p,x){this.i=null,this.m=!1,this.h=this.j=this.l=0,eu(this,p,x)}function eu(p,x,v){v=v===void 0?{}:v,p.S=v.S===void 0?!1:v.S,x&&(x=Lw(x),p.i=x.buffer,p.m=x.C,p.l=0,p.j=p.i.length,p.h=p.l)}Mh.prototype.reset=function(){this.h=this.l};function br(p,x){if(p.h=x,x>p.j)throw Dh(p.j,x)}function Ms(p){var x=p.i,v=p.h,T=x[v++],k=T&127;if(T&128&&(T=x[v++],k|=(T&127)<<7,T&128&&(T=x[v++],k|=(T&127)<<14,T&128&&(T=x[v++],k|=(T&127)<<21,T&128&&(T=x[v++],k|=T<<28,T&128&&x[v++]&128&&x[v++]&128&&x[v++]&128&&x[v++]&128&&x[v++]&128)))))throw Qi();return br(p,v),k}function Uh(p,x){if(0>x)throw Error("Tried to read a negative byte length: "+x);var v=p.h,T=v+x;if(T>p.j)throw Dh(x,p.j-v);return p.h=T,v}var Wh=[];function tu(){this.h=[]}tu.prototype.length=function(){return this.h.length},tu.prototype.end=function(){var p=this.h;return this.h=[],p};function zh(p,x,v){for(;0<v||127<x;)p.h.push(x&127|128),x=(x>>>7|v<<25)>>>0,v>>>=7;p.h.push(x)}function vr(p,x){for(;127<x;)p.h.push(x&127|128),x>>>=7;p.h.push(x)}function nu(p,x){if(Wh.length){var v=Wh.pop();eu(v,p,x),p=v}else p=new Mh(p,x);this.h=p,this.j=this.h.h,this.i=this.l=-1,this.setOptions(x)}nu.prototype.setOptions=function(p){p=p===void 0?{}:p,this.ca=p.ca===void 0?!1:p.ca},nu.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function Gh(p){var x=p.h;if(x.h==x.j)return!1;p.j=p.h.h;var v=Ms(p.h)>>>0;if(x=v>>>3,v&=7,!(0<=v&&5>=v))throw Oh(v,p.j);if(1>x)throw Error("Invalid field number: "+x+" (at position "+p.j+")");return p.l=x,p.i=v,!0}function ra(p){switch(p.i){case 0:if(p.i!=0)ra(p);else e:{p=p.h;for(var x=p.h,v=x+10,T=p.i;x<v;)if(!(T[x++]&128)){br(p,x);break e}throw Qi()}break;case 1:p=p.h,br(p,p.h+8);break;case 2:p.i!=2?ra(p):(x=Ms(p.h)>>>0,p=p.h,br(p,p.h+x));break;case 5:p=p.h,br(p,p.h+4);break;case 3:x=p.l;do{if(!Gh(p))throw Error("Unmatched start-group tag: stream EOF");if(p.i==4){if(p.l!=x)throw Error("Unmatched end-group tag");break}ra(p)}while(1);break;default:throw Oh(p.i,p.j)}}var sa=[];function Bw(){this.j=[],this.i=0,this.h=new tu}function ts(p,x){x.length!==0&&(p.j.push(x),p.i+=x.length)}function Vw(p,x){if(x=x.R){ts(p,p.h.end());for(var v=0;v<x.length;v++)ts(p,Vh(x[v])||Le())}}var Mn=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function wr(p,x){return Mn?p[Mn]|=x:p.A!==void 0?p.A|=x:(Object.defineProperties(p,{A:{value:x,configurable:!0,writable:!0,enumerable:!1}}),x)}function jh(p,x){Mn?p[Mn]&&(p[Mn]&=~x):p.A!==void 0&&(p.A&=~x)}function Ge(p){var x;return Mn?x=p[Mn]:x=p.A,x==null?0:x}function Sn(p,x){Mn?p[Mn]=x:p.A!==void 0?p.A=x:Object.defineProperties(p,{A:{value:x,configurable:!0,writable:!0,enumerable:!1}})}function ru(p){return wr(p,1),p}function Mw(p,x){Sn(x,(p|0)&-51)}function oa(p,x){Sn(x,(p|18)&-41)}var su={};function aa(p){return p!==null&&typeof p=="object"&&!Array.isArray(p)&&p.constructor===Object}var Us,Hh=[];Sn(Hh,23),Us=Object.freeze(Hh);function ou(p){if(Ge(p.o)&2)throw Error("Cannot mutate an immutable Message")}function au(p){var x=p.length;(x=x?p[x-1]:void 0)&&aa(x)?x.g=1:(x={},p.push((x.g=1,x)))}function qh(p){var x=p.i+p.G;return p.B||(p.B=p.o[x]={})}function fn(p,x){return x===-1?null:x>=p.i?p.B?p.B[x]:void 0:p.o[x+p.G]}function Tn(p,x,v,T){ou(p),Ws(p,x,v,T)}function Ws(p,x,v,T){p.j&&(p.j=void 0),x>=p.i||T?qh(p)[x]=v:(p.o[x+p.G]=v,(p=p.B)&&x in p&&delete p[x])}function iu(p,x,v,T){var k=fn(p,x);Array.isArray(k)||(k=Us);var R=Ge(k);if(R&1||ru(k),T)R&2||wr(k,2),v&1||Object.freeze(k);else{T=!(v&2);var _=R&2;v&1||!_?T&&R&16&&!_&&jh(k,16):(k=ru(Array.prototype.slice.call(k)),Ws(p,x,k))}return k}function uu(p,x){var v=fn(p,x),T=v==null?v:typeof v=="number"||v==="NaN"||v==="Infinity"||v==="-Infinity"?Number(v):void 0;return T!=null&&T!==v&&Ws(p,x,T),T}function Kh(p,x,v,T,k){p.h||(p.h={});var R=p.h[v],_=iu(p,v,3,k);if(!R){var P=_;R=[];var M=!!(Ge(p.o)&16);_=!!(Ge(P)&2);var j=P;!k&&_&&(P=Array.prototype.slice.call(P));for(var X=_,ue=0;ue<P.length;ue++){var se=P[ue],ee=x,ce=!1;if(ce=ce===void 0?!1:ce,se=Array.isArray(se)?new ee(se):ce?new ee:void 0,se!==void 0){ee=se.o;var he=ce=Ge(ee);_&&(he|=2),M&&(he|=16),he!=ce&&Sn(ee,he),ee=he,X=X||!!(2&ee),R.push(se)}}return p.h[v]=R,M=Ge(P),x=M|33,x=X?x&-9:x|8,M!=x&&(X=P,Object.isFrozen(X)&&(X=Array.prototype.slice.call(X)),Sn(X,x),P=X),j!==P&&Ws(p,v,P),(k||T&&_)&&wr(R,2),T&&Object.freeze(R),R}return k||(k=Object.isFrozen(R),T&&!k?Object.freeze(R):!T&&k&&(R=Array.prototype.slice.call(R),p.h[v]=R)),R}function cu(p,x,v){var T=!!(Ge(p.o)&2);if(x=Kh(p,x,v,T,T),p=iu(p,v,3,T),!(T||Ge(p)&8)){for(T=0;T<x.length;T++){if(v=x[T],Ge(v.o)&2){var k=em(v,!1);k.j=v}else k=v;v!==k&&(x[T]=k,p[T]=k.o)}wr(p,8)}return x}function Cn(p,x,v){if(v!=null&&typeof v!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof v+": "+v);Tn(p,x,v)}function Xh(p,x,v,T,k){ou(p);var R=Kh(p,v,x,!1,!1);return v=T!=null?T:new v,p=iu(p,x,2,!1),k!=null?(R.splice(k,0,v),p.splice(k,0,v.o)):(R.push(v),p.push(v.o)),v.C()&&jh(p,8),v}function ia(p,x){return p==null?x:p}function Nn(p,x,v){return v=v===void 0?0:v,ia(uu(p,x),v)}var ua;function Uw(p){switch(typeof p){case"number":return isFinite(p)?p:String(p);case"object":if(p)if(Array.isArray(p)){if(Ge(p)&128)return p=Array.prototype.slice.call(p),au(p),p}else{if(qe&&p!=null&&p instanceof Uint8Array)return ut(p);if(p instanceof Vs){var x=p.V;return x==null?"":typeof x=="string"?x:p.V=ut(x)}}}return p}function Yh(p,x,v,T){if(p!=null){if(Array.isArray(p))p=lu(p,x,v,T!==void 0);else if(aa(p)){var k={},R;for(R in p)k[R]=Yh(p[R],x,v,T);p=k}else p=x(p,T);return p}}function lu(p,x,v,T){var k=Ge(p);T=T?!!(k&16):void 0,p=Array.prototype.slice.call(p);for(var R=0;R<p.length;R++)p[R]=Yh(p[R],x,v,T);return v(k,p),p}function Ww(p){return p.ja===su?p.toJSON():Uw(p)}function zw(p,x){p&128&&au(x)}function Qh(p,x,v){if(v=v===void 0?oa:v,p!=null){if(qe&&p instanceof Uint8Array)return p.length?new Vs(new Uint8Array(p),Xe):Ji();if(Array.isArray(p)){var T=Ge(p);return T&2?p:x&&!(T&32)&&(T&16||T===0)?(Sn(p,T|2),p):(p=lu(p,Qh,T&4?oa:v,!0),x=Ge(p),x&4&&x&2&&Object.freeze(p),p)}return p.ja===su?Jh(p):p}}function Zh(p,x,v,T,k,R,_){if(p=p.h&&p.h[v]){if(T=Ge(p),T&2?T=p:(R=fe(p,Jh),oa(T,R),Object.freeze(R),T=R),ou(x),_=T==null?Us:ru([]),T!=null){for(R=!!T.length,p=0;p<T.length;p++){var P=T[p];R=R&&!(Ge(P.o)&2),_[p]=P.o}R=(R?8:0)|1,p=Ge(_),(p&R)!==R&&(Object.isFrozen(_)&&(_=Array.prototype.slice.call(_)),Sn(_,p|R)),x.h||(x.h={}),x.h[v]=T}else x.h&&(x.h[v]=void 0);Ws(x,v,_,k)}else Tn(x,v,Qh(T,R,_),k)}function Jh(p){return Ge(p.o)&2||(p=em(p,!0),wr(p.o,2)),p}function em(p,x){var v=p.o,T=[];wr(T,16);var k=p.constructor.h;if(k&&T.push(k),k=p.B,k){T.length=v.length,T.fill(void 0,T.length,v.length);var R={};T[T.length-1]=R}Ge(v)&128&&au(T),x=x||p.C()?oa:Mw,R=p.constructor,ua=T,T=new R(T),ua=void 0,p.R&&(T.R=p.R.slice()),R=!!(Ge(v)&16);for(var _=k?v.length-1:v.length,P=0;P<_;P++)Zh(p,T,P-p.G,v[P],!1,R,x);if(k)for(var M in k)Zh(p,T,+M,k[M],!0,R,x);return T}function Nt(p,x,v){p==null&&(p=ua),ua=void 0;var T=this.constructor.i||0,k=0<T,R=this.constructor.h,_=!1;if(p==null){p=R?[R]:[];var P=48,M=!0;k&&(T=0,P|=128),Sn(p,P)}else{if(!Array.isArray(p)||R&&R!==p[0])throw Error();var j=P=wr(p,0);if((M=(16&j)!==0)&&((_=(32&j)!==0)||(j|=32)),k){if(128&j)T=0;else if(0<p.length){var X=p[p.length-1];if(aa(X)&&"g"in X){T=0,j|=128,delete X.g;var ue=!0,se;for(se in X){ue=!1;break}ue&&p.pop()}}}else if(128&j)throw Error();P!==j&&Sn(p,j)}this.G=(R?0:-1)-T,this.h=void 0,this.o=p;e:{if(R=this.o.length,T=R-1,R&&(R=this.o[T],aa(R))){this.B=R,this.i=T-this.G;break e}x!==void 0&&-1<x?(this.i=Math.max(x,T+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!k&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(v){x=M&&!_&&!0,k=this.i;var ee;for(M=0;M<v.length;M++)_=v[M],_<k?(_+=this.G,(T=p[_])?tm(T,x):p[_]=Us):(ee||(ee=qh(this)),(T=ee[_])?tm(T,x):ee[_]=Us)}}Nt.prototype.toJSON=function(){return lu(this.o,Ww,zw)},Nt.prototype.C=function(){return!!(Ge(this.o)&2)};function tm(p,x){if(Array.isArray(p)){var v=Ge(p),T=1;!x||v&2||(T|=16),(v&T)!==T&&Sn(p,v|T)}}Nt.prototype.ja=su,Nt.prototype.toString=function(){return this.o.toString()};function nm(p,x,v){if(v){var T={},k;for(k in v){var R=v[k],_=R.ra;_||(T.J=R.xa||R.oa.W,R.ia?(T.aa=im(R.ia),_=function(P){return function(M,j,X){return P.J(M,j,X,P.aa)}}(T)):R.ka?(T.Z=um(R.da.P,R.ka),_=function(P){return function(M,j,X){return P.J(M,j,X,P.Z)}}(T)):_=T.J,R.ra=_),_(x,p,R.da),T={J:T.J,aa:T.aa,Z:T.Z}}}Vw(x,p)}var ca=Symbol();function rm(p,x,v){return p[ca]||(p[ca]=function(T,k){return x(T,k,v)})}function sm(p){var x=p[ca];if(!x){var v=fu(p);x=function(T,k){return cm(T,k,v)},p[ca]=x}return x}function Gw(p){var x=p.ia;if(x)return sm(x);if(x=p.wa)return rm(p.da.P,x,p.ka)}function jw(p){var x=Gw(p),v=p.da,T=p.oa.U;return x?function(k,R){return T(k,R,v,x)}:function(k,R){return T(k,R,v)}}function om(p,x){var v=p[x];return typeof v=="function"&&v.length===0&&(v=v(),p[x]=v),Array.isArray(v)&&(Gs in v||zs in v||0<v.length&&typeof v[0]=="function")?v:void 0}function am(p,x,v,T,k,R){x.P=p[0];var _=1;if(p.length>_&&typeof p[_]!="number"){var P=p[_++];v(x,P)}for(;_<p.length;){v=p[_++];for(var M=_+1;M<p.length&&typeof p[M]!="number";)M++;switch(P=p[_++],M-=_,M){case 0:T(x,v,P);break;case 1:(M=om(p,_))?(_++,k(x,v,P,M)):T(x,v,P,p[_++]);break;case 2:M=_++,M=om(p,M),k(x,v,P,M,p[_++]);break;case 3:R(x,v,P,p[_++],p[_++],p[_++]);break;case 4:R(x,v,P,p[_++],p[_++],p[_++],p[_++]);break;default:throw Error("unexpected number of binary field arguments: "+M)}}return x}var la=Symbol();function im(p){var x=p[la];if(!x){var v=du(p);x=function(T,k){return lm(T,k,v)},p[la]=x}return x}function um(p,x){var v=p[la];return v||(v=function(T,k){return nm(T,k,x)},p[la]=v),v}var zs=Symbol();function Hw(p,x){p.push(x)}function qw(p,x,v){p.push(x,v.W)}function Kw(p,x,v,T){var k=im(T),R=du(T).P,_=v.W;p.push(x,function(P,M,j){return _(P,M,j,R,k)})}function Xw(p,x,v,T,k,R){var _=um(T,R),P=v.W;p.push(x,function(M,j,X){return P(M,j,X,T,_)})}function du(p){var x=p[zs];return x||(x=am(p,p[zs]=[],Hw,qw,Kw,Xw),Gs in p&&zs in p&&(p.length=0),x)}var Gs=Symbol();function Yw(p,x){p[0]=x}function Qw(p,x,v,T){var k=v.U;p[x]=T?function(R,_,P){return k(R,_,P,T)}:k}function Zw(p,x,v,T,k){var R=v.U,_=sm(T),P=fu(T).P;p[x]=function(M,j,X){return R(M,j,X,P,_,k)}}function Jw(p,x,v,T,k,R,_){var P=v.U,M=rm(T,k,R);p[x]=function(j,X,ue){return P(j,X,ue,T,M,_)}}function fu(p){var x=p[Gs];return x||(x=am(p,p[Gs]={},Yw,Qw,Zw,Jw),Gs in p&&zs in p&&(p.length=0),x)}function cm(p,x,v){for(;Gh(x)&&x.i!=4;){var T=x.l,k=v[T];if(!k){var R=v[0];R&&(R=R[T])&&(k=v[T]=jw(R))}if(!k||!k(x,p,T)){k=x,T=p,R=k.j,ra(k);var _=k;if(!_.ca){if(k=_.h.h-R,_.h.h=R,_=_.h,k==0)k=Ji();else{if(R=Uh(_,k),_.S&&_.m)k=_.i.subarray(R,R+k);else{_=_.i;var P=R;k=R+k,k=P===k?Le():dn?_.slice(P,k):new Uint8Array(_.subarray(P,k))}k=k.length==0?Ji():new Vs(k,Xe)}(R=T.R)?R.push(k):T.R=[k]}}}return p}function lm(p,x,v){for(var T=v.length,k=T%2==1,R=k?1:0;R<T;R+=2)(0,v[R+1])(x,p,v[R]);nm(p,x,k?v[0]:void 0)}function js(p,x){return{U:p,W:x}}var pn=js(function(p,x,v){if(p.i!==5)return!1;p=p.h;var T=p.i,k=p.h,R=T[k],_=T[k+1],P=T[k+2];return T=T[k+3],br(p,p.h+4),_=(R<<0|_<<8|P<<16|T<<24)>>>0,p=2*(_>>31)+1,R=_>>>23&255,_&=8388607,Tn(x,v,R==255?_?NaN:1/0*p:R==0?p*Math.pow(2,-149)*_:p*Math.pow(2,R-150)*(_+Math.pow(2,23))),!0},function(p,x,v){if(x=uu(x,v),x!=null){vr(p.h,8*v+5),p=p.h;var T=+x;T===0?0<1/T?Ye=Tt=0:(Tt=0,Ye=2147483648):isNaN(T)?(Tt=0,Ye=2147483647):(T=(v=0>T?-2147483648:0)?-T:T,34028234663852886e22<T?(Tt=0,Ye=(v|2139095040)>>>0):11754943508222875e-54>T?(T=Math.round(T/Math.pow(2,-149)),Tt=0,Ye=(v|T)>>>0):(x=Math.floor(Math.log(T)/Math.LN2),T*=Math.pow(2,-x),T=Math.round(8388608*T),16777216<=T&&++x,Tt=0,Ye=(v|x+127<<23|T&8388607)>>>0)),v=Ye,p.h.push(v>>>0&255),p.h.push(v>>>8&255),p.h.push(v>>>16&255),p.h.push(v>>>24&255)}}),e$=js(function(p,x,v){if(p.i!==0)return!1;var T=p.h,k=0,R=p=0,_=T.i,P=T.h;do{var M=_[P++];k|=(M&127)<<R,R+=7}while(32>R&&M&128);for(32<R&&(p|=(M&127)>>4),R=3;32>R&&M&128;R+=7)M=_[P++],p|=(M&127)<<R;if(br(T,P),128>M)T=k>>>0,M=p>>>0,(p=M&2147483648)&&(T=~T+1>>>0,M=~M>>>0,T==0&&(M=M+1>>>0)),T=4294967296*M+(T>>>0);else throw Qi();return Tn(x,v,p?-T:T),!0},function(p,x,v){x=fn(x,v),x!=null&&(typeof x=="string"&&Rh(x),x!=null&&(vr(p.h,8*v),typeof x=="number"?(p=p.h,Ih(x),zh(p,Ye,Tt)):(v=Rh(x),zh(p.h,v.i,v.h))))}),t$=js(function(p,x,v){return p.i!==0?!1:(Tn(x,v,Ms(p.h)),!0)},function(p,x,v){if(x=fn(x,v),x!=null&&x!=null)if(vr(p.h,8*v),p=p.h,v=x,0<=v)vr(p,v);else{for(x=0;9>x;x++)p.h.push(v&127|128),v>>=7;p.h.push(1)}}),dm=js(function(p,x,v){if(p.i!==2)return!1;var T=Ms(p.h)>>>0;p=p.h;var k=Uh(p,T);if(p=p.i,Fw){var R=p,_;(_=Zi)||(_=Zi=new TextDecoder("utf-8",{fatal:!0})),p=k+T,R=k===0&&p===R.length?R:R.subarray(k,p);try{var P=_.decode(R)}catch(ue){if(na===void 0){try{_.decode(new Uint8Array([128]))}catch(se){}try{_.decode(new Uint8Array([97])),na=!0}catch(se){na=!1}}throw!na&&(Zi=void 0),ue}}else{P=k,T=P+T,k=[];for(var M=null,j,X;P<T;)j=p[P++],128>j?k.push(j):224>j?P>=T?xr():(X=p[P++],194>j||(X&192)!==128?(P--,xr()):k.push((j&31)<<6|X&63)):240>j?P>=T-1?xr():(X=p[P++],(X&192)!==128||j===224&&160>X||j===237&&160<=X||((R=p[P++])&192)!==128?(P--,xr()):k.push((j&15)<<12|(X&63)<<6|R&63)):244>=j?P>=T-2?xr():(X=p[P++],(X&192)!==128||(j<<28)+(X-144)>>30||((R=p[P++])&192)!==128||((_=p[P++])&192)!==128?(P--,xr()):(j=(j&7)<<18|(X&63)<<12|(R&63)<<6|_&63,j-=65536,k.push((j>>10&1023)+55296,(j&1023)+56320))):xr(),8192<=k.length&&(M=Fh(M,k),k.length=0);P=Fh(M,k)}return Tn(x,v,P),!0},function(p,x,v){if(x=fn(x,v),x!=null){var T=!1;if(T=T===void 0?!1:T,Pw){if(T&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(x))throw Error("Found an unpaired surrogate");x=(Ph||(Ph=new TextEncoder)).encode(x)}else{for(var k=0,R=new Uint8Array(3*x.length),_=0;_<x.length;_++){var P=x.charCodeAt(_);if(128>P)R[k++]=P;else{if(2048>P)R[k++]=P>>6|192;else{if(55296<=P&&57343>=P){if(56319>=P&&_<x.length){var M=x.charCodeAt(++_);if(56320<=M&&57343>=M){P=1024*(P-55296)+M-56320+65536,R[k++]=P>>18|240,R[k++]=P>>12&63|128,R[k++]=P>>6&63|128,R[k++]=P&63|128;continue}else _--}if(T)throw Error("Found an unpaired surrogate");P=65533}R[k++]=P>>12|224,R[k++]=P>>6&63|128}R[k++]=P&63|128}}x=k===R.length?R:R.subarray(0,k)}vr(p.h,8*v+2),vr(p.h,x.length),ts(p,p.h.end()),ts(p,x)}}),fm=js(function(p,x,v,T,k){if(p.i!==2)return!1;x=Xh(x,v,T),v=p.h.j,T=Ms(p.h)>>>0;var R=p.h.h+T,_=R-v;if(0>=_&&(p.h.j=R,k(x,p,void 0,void 0,void 0),_=R-p.h.h),_)throw Error("Message parsing ended unexpectedly. Expected to read "+(T+" bytes, instead read "+(T-_)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return p.h.h=R,p.h.j=v,!0},function(p,x,v,T,k){if(x=cu(x,T,v),x!=null)for(T=0;T<x.length;T++){var R=p;vr(R.h,8*v+2);var _=R.h.end();ts(R,_),_.push(R.i),R=_,k(x[T],p),_=p;var P=R.pop();for(P=_.i+_.h.length()-P;127<P;)R.push(P&127|128),P>>>=7,_.i++;R.push(P),_.i++}});function pu(p){return function(x,v){e:{if(sa.length){var T=sa.pop();T.setOptions(v),eu(T.h,x,v),x=T}else x=new nu(x,v);try{var k=fu(p),R=cm(new k.P,x,k);break e}finally{k=x.h,k.i=null,k.m=!1,k.l=0,k.j=0,k.h=0,k.S=!1,x.l=-1,x.i=-1,100>sa.length&&sa.push(x)}R=void 0}return R}}function hu(p){return function(){var x=new Bw;lm(this,x,du(p)),ts(x,x.h.end());for(var v=new Uint8Array(x.i),T=x.j,k=T.length,R=0,_=0;_<k;_++){var P=T[_];v.set(P,R),R+=P.length}return x.j=[v],v}}function ns(p){Nt.call(this,p)}y(ns,Nt);var pm=[ns,1,t$,2,pn,3,dm,4,dm];ns.prototype.l=hu(pm);function mu(p){Nt.call(this,p,-1,n$)}y(mu,Nt),mu.prototype.addClassification=function(p,x){return Xh(this,1,ns,p,x),this};var n$=[1],r$=pu([mu,1,fm,pm]);function Hs(p){Nt.call(this,p)}y(Hs,Nt);var hm=[Hs,1,pn,2,pn,3,pn,4,pn,5,pn];Hs.prototype.l=hu(hm);function mm(p){Nt.call(this,p,-1,s$)}y(mm,Nt);var s$=[1],o$=pu([mm,1,fm,hm]);function da(p){Nt.call(this,p)}y(da,Nt);var gm=[da,1,pn,2,pn,3,pn,4,pn,5,pn,6,e$],a$=pu(gm);da.prototype.l=hu(gm);function ym(p,x,v){if(v=p.createShader(v===0?p.VERTEX_SHADER:p.FRAGMENT_SHADER),p.shaderSource(v,x),p.compileShader(v),!p.getShaderParameter(v,p.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+p.getShaderInfoLog(v));return v}function i$(p){return cu(p,ns,1).map(function(x){var v=fn(x,1);return{index:v==null?0:v,qa:Nn(x,2),label:fn(x,3)!=null?ia(fn(x,3),""):void 0,displayName:fn(x,4)!=null?ia(fn(x,4),""):void 0}})}function u$(p){return{x:Nn(p,1),y:Nn(p,2),z:Nn(p,3),visibility:uu(p,4)!=null?Nn(p,4):void 0}}function gu(p,x){this.i=p,this.h=x,this.m=0}function xm(p,x,v){return c$(p,x),typeof p.h.canvas.transferToImageBitmap=="function"?Promise.resolve(p.h.canvas.transferToImageBitmap()):v?Promise.resolve(p.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(p.h.canvas):(p.j===void 0&&(p.j=document.createElement("canvas")),new Promise(function(T){p.j.height=p.h.canvas.height,p.j.width=p.h.canvas.width,p.j.getContext("2d",{}).drawImage(p.h.canvas,0,0,p.h.canvas.width,p.h.canvas.height),T(p.j)}))}function c$(p,x){var v=p.h;if(p.s===void 0){var T=ym(v,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),k=ym(v,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),R=v.createProgram();if(v.attachShader(R,T),v.attachShader(R,k),v.linkProgram(R),!v.getProgramParameter(R,v.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+v.getProgramInfoLog(R));T=p.s=R,v.useProgram(T),k=v.getUniformLocation(T,"sampler0"),p.l={O:v.getAttribLocation(T,"aVertex"),N:v.getAttribLocation(T,"aTex"),ya:k},p.v=v.createBuffer(),v.bindBuffer(v.ARRAY_BUFFER,p.v),v.enableVertexAttribArray(p.l.O),v.vertexAttribPointer(p.l.O,2,v.FLOAT,!1,0,0),v.bufferData(v.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),v.STATIC_DRAW),v.bindBuffer(v.ARRAY_BUFFER,null),p.u=v.createBuffer(),v.bindBuffer(v.ARRAY_BUFFER,p.u),v.enableVertexAttribArray(p.l.N),v.vertexAttribPointer(p.l.N,2,v.FLOAT,!1,0,0),v.bufferData(v.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),v.STATIC_DRAW),v.bindBuffer(v.ARRAY_BUFFER,null),v.uniform1i(k,0)}T=p.l,v.useProgram(p.s),v.canvas.width=x.width,v.canvas.height=x.height,v.viewport(0,0,x.width,x.height),v.activeTexture(v.TEXTURE0),p.i.bindTexture2d(x.glName),v.enableVertexAttribArray(T.O),v.bindBuffer(v.ARRAY_BUFFER,p.v),v.vertexAttribPointer(T.O,2,v.FLOAT,!1,0,0),v.enableVertexAttribArray(T.N),v.bindBuffer(v.ARRAY_BUFFER,p.u),v.vertexAttribPointer(T.N,2,v.FLOAT,!1,0,0),v.bindFramebuffer(v.DRAW_FRAMEBUFFER?v.DRAW_FRAMEBUFFER:v.FRAMEBUFFER,null),v.clearColor(0,0,0,0),v.clear(v.COLOR_BUFFER_BIT),v.colorMask(!0,!0,!0,!0),v.drawArrays(v.TRIANGLE_FAN,0,4),v.disableVertexAttribArray(T.O),v.disableVertexAttribArray(T.N),v.bindBuffer(v.ARRAY_BUFFER,null),p.i.bindTexture2d(0)}function l$(p){this.h=p}var d$=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function f$(p,x){return x+p}function bm(p,x){window[p]=x}function p$(p){var x=document.createElement("script");return x.setAttribute("src",p),x.setAttribute("crossorigin","anonymous"),new Promise(function(v){x.addEventListener("load",function(){v()},!1),x.addEventListener("error",function(){v()},!1),document.body.appendChild(x)})}function h$(){return U(function(p){switch(p.h){case 1:return p.s=2,C(p,WebAssembly.instantiate(d$),4);case 4:p.h=3,p.s=0;break;case 2:return p.s=0,p.l=null,p.return(!1);case 3:return p.return(!0)}})}function yu(p){if(this.h=p,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=p&&p.locateFile||f$,typeof window=="object")var x=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location!="undefined")x=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=x,p.options){x=i(Object.keys(p.options));for(var v=x.next();!v.done;v=x.next()){v=v.value;var T=p.options[v].default;T!==void 0&&(this.l[v]=typeof T=="function"?T():T)}}}n=yu.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function m$(p){var x,v,T,k,R,_,P,M,j,X,ue;return U(function(se){switch(se.h){case 1:return p.ga?(x=p.h.files===void 0?[]:typeof p.h.files=="function"?p.h.files(p.l):p.h.files,C(se,h$(),2)):se.return();case 2:if(v=se.i,typeof window=="object")return bm("createMediapipeSolutionsWasm",{locateFile:p.locateFile}),bm("createMediapipeSolutionsPackedAssets",{locateFile:p.locateFile}),_=x.filter(function(ee){return ee.data!==void 0}),P=x.filter(function(ee){return ee.data===void 0}),M=Promise.all(_.map(function(ee){var ce=fa(p,ee.url);if(ee.path!==void 0){var he=ee.path;ce=ce.then(function(Be){return p.overrideFile(he,Be),Promise.resolve(Be)})}return ce})),j=Promise.all(P.map(function(ee){return ee.simd===void 0||ee.simd&&v||!ee.simd&&!v?p$(p.locateFile(ee.url,p.ha)):Promise.resolve()})).then(function(){var ee,ce,he;return U(function(Be){if(Be.h==1)return ee=window.createMediapipeSolutionsWasm,ce=window.createMediapipeSolutionsPackedAssets,he=p,C(Be,ee(ce),2);he.i=Be.i,Be.h=0})}),X=function(){return U(function(ee){return p.h.graph&&p.h.graph.url?ee=C(ee,fa(p,p.h.graph.url),0):(ee.h=0,ee=void 0),ee})}(),C(se,Promise.all([j,M,X]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return T=x.filter(function(ee){return ee.simd===void 0||ee.simd&&v||!ee.simd&&!v}).map(function(ee){return p.locateFile(ee.url,p.ha)}),importScripts.apply(null,u(T)),k=p,C(se,createMediapipeSolutionsWasm(Module),6);case 6:k.i=se.i,p.m=new OffscreenCanvas(1,1),p.i.canvas=p.m,R=p.i.GL.createContext(p.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext!="undefined"?2:1}),p.i.GL.makeContextCurrent(R),se.h=4;break;case 7:if(p.m=document.createElement("canvas"),ue=p.m.getContext("webgl2",{}),!ue&&(ue=p.m.getContext("webgl",{}),!ue))return alert("Failed to create WebGL canvas context when passing video frame."),se.return();p.K=ue,p.i.canvas=p.m,p.i.createContext(p.m,!0,!0,{});case 4:p.j=new p.i.SolutionWasm,p.ga=!1,se.h=0}})}function g$(p){var x,v,T,k,R,_,P,M;return U(function(j){if(j.h==1){if(p.h.graph&&p.h.graph.url&&p.fa===p.h.graph.url)return j.return();if(p.u=!0,!p.h.graph||!p.h.graph.url){j.h=2;return}return p.fa=p.h.graph.url,C(j,fa(p,p.h.graph.url),3)}for(j.h!=2&&(x=j.i,p.j.loadGraph(x)),v=i(Object.keys(p.D)),T=v.next();!T.done;T=v.next())k=T.value,p.j.overrideFile(k,p.D[k]);if(p.D={},p.h.listeners)for(R=i(p.h.listeners),_=R.next();!_.done;_=R.next())P=_.value,v$(p,P);M=p.l,p.l={},p.setOptions(M),j.h=0})}n.reset=function(){var p=this;return U(function(x){p.j&&(p.j.reset(),p.s={},p.v={}),x.h=0})},n.setOptions=function(p,x){var v=this;if(x=x||this.h.options){for(var T=[],k=[],R={},_=i(Object.keys(p)),P=_.next();!P.done;R={X:R.X,Y:R.Y},P=_.next())if(P=P.value,!(P in this.l&&this.l[P]===p[P])){this.l[P]=p[P];var M=x[P];M!==void 0&&(M.onChange&&(R.X=M.onChange,R.Y=p[P],T.push(function(j){return function(){var X;return U(function(ue){if(ue.h==1)return C(ue,j.X(j.Y),2);X=ue.i,X===!0&&(v.u=!0),ue.h=0})}}(R))),M.graphOptionXref&&(P=Object.assign({},{calculatorName:"",calculatorIndex:0},M.graphOptionXref,{valueNumber:M.type===1?p[P]:0,valueBoolean:M.type===0?p[P]:!1,valueString:M.type===2?p[P]:""}),k.push(P)))}(T.length!==0||k.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(k),this.F=(this.F===void 0?[]:this.F).concat(T))}};function y$(p){var x,v,T,k,R,_,P;return U(function(M){switch(M.h){case 1:if(!p.u)return M.return();if(!p.F){M.h=2;break}x=i(p.F),v=x.next();case 3:if(v.done){M.h=5;break}return T=v.value,C(M,T(),4);case 4:v=x.next(),M.h=3;break;case 5:p.F=void 0;case 2:if(p.H){for(k=new p.i.GraphOptionChangeRequestList,R=i(p.H),_=R.next();!_.done;_=R.next())P=_.value,k.push_back(P);p.j.changeOptions(k),k.delete(),p.H=void 0}p.u=!1,M.h=0}})}n.initialize=function(){var p=this;return U(function(x){return x.h==1?C(x,m$(p),2):x.h!=3?C(x,g$(p),3):C(x,y$(p),0)})};function fa(p,x){var v,T;return U(function(k){return x in p.L?k.return(p.L[x]):(v=p.locateFile(x,""),T=fetch(v).then(function(R){return R.arrayBuffer()}),p.L[x]=T,k.return(T))})}n.overrideFile=function(p,x){this.j?this.j.overrideFile(p,x):this.D[p]=x},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(p,x){var v=this,T,k,R,_,P,M,j,X,ue;return U(function(se){switch(se.h){case 1:return v.h.inputs?(T=1e3*(x==null?performance.now():x),C(se,v.I,2)):se.return();case 2:return C(se,v.initialize(),3);case 3:for(k=new v.i.PacketDataList,R=i(Object.keys(p)),_=R.next();!_.done;_=R.next())if(P=_.value,M=v.h.inputs[P]){e:{var ee=p[P];switch(M.type){case"video":var ce=v.s[M.stream];if(ce||(ce=new gu(v.i,v.K),v.s[M.stream]=ce),ce.m===0&&(ce.m=ce.i.createTexture()),typeof HTMLVideoElement!="undefined"&&ee instanceof HTMLVideoElement)var he=ee.videoWidth,Be=ee.videoHeight;else typeof HTMLImageElement!="undefined"&&ee instanceof HTMLImageElement?(he=ee.naturalWidth,Be=ee.naturalHeight):(he=ee.width,Be=ee.height);Be={glName:ce.m,width:he,height:Be},he=ce.h,he.canvas.width=Be.width,he.canvas.height=Be.height,he.activeTexture(he.TEXTURE0),ce.i.bindTexture2d(ce.m),he.texImage2D(he.TEXTURE_2D,0,he.RGBA,he.RGBA,he.UNSIGNED_BYTE,ee),ce.i.bindTexture2d(0),ce=Be;break e;case"detections":for(ce=v.s[M.stream],ce||(ce=new l$(v.i),v.s[M.stream]=ce),ce.data||(ce.data=new ce.h.DetectionListData),ce.data.reset(ee.length),Be=0;Be<ee.length;++Be){he=ee[Be];var Ae=ce.data,ct=Ae.setBoundingBox,Ht=Be,Et=he.la,we=new da;if(Cn(we,1,Et.sa),Cn(we,2,Et.ta),Cn(we,3,Et.height),Cn(we,4,Et.width),Cn(we,5,Et.rotation),Tn(we,6,Et.pa),Et=we.l(),ct.call(Ae,Ht,Et),he.ea)for(Ae=0;Ae<he.ea.length;++Ae){we=he.ea[Ae],ct=ce.data,Ht=ct.addNormalizedLandmark,Et=Be,we=Object.assign({},we,{visibility:we.visibility?we.visibility:0});var lt=new Hs;Cn(lt,1,we.x),Cn(lt,2,we.y),Cn(lt,3,we.z),we.visibility&&Cn(lt,4,we.visibility),we=lt.l(),Ht.call(ct,Et,we)}if(he.ba)for(Ae=0;Ae<he.ba.length;++Ae)ct=ce.data,Ht=ct.addClassification,Et=Be,we=he.ba[Ae],lt=new ns,Cn(lt,2,we.qa),we.index&&Tn(lt,1,we.index),we.label&&Tn(lt,3,we.label),we.displayName&&Tn(lt,4,we.displayName),we=lt.l(),Ht.call(ct,Et,we)}ce=ce.data;break e;default:ce={}}}switch(j=ce,X=M.stream,M.type){case"video":k.pushTexture2d(Object.assign({},j,{stream:X,timestamp:T}));break;case"detections":ue=j,ue.stream=X,ue.timestamp=T,k.pushDetectionList(ue);break;default:throw Error("Unknown input config type: '"+M.type+"'")}}return v.j.send(k),C(se,v.I,4);case 4:k.delete(),se.h=0}})};function x$(p,x,v){var T,k,R,_,P,M,j,X,ue,se,ee,ce,he,Be;return U(function(Ae){switch(Ae.h){case 1:if(!v)return Ae.return(x);for(T={},k=0,R=i(Object.keys(v)),_=R.next();!_.done;_=R.next())P=_.value,M=v[P],typeof M!="string"&&M.type==="texture"&&x[M.stream]!==void 0&&++k;1<k&&(p.M=!1),j=i(Object.keys(v)),_=j.next();case 2:if(_.done){Ae.h=4;break}if(X=_.value,ue=v[X],typeof ue=="string")return he=T,Be=X,C(Ae,b$(p,X,x[ue]),14);if(se=x[ue.stream],ue.type==="detection_list"){if(se){for(var ct=se.getRectList(),Ht=se.getLandmarksList(),Et=se.getClassificationsList(),we=[],lt=0;lt<ct.size();++lt){var er=a$(ct.get(lt)),w$=Nn(er,1),$$=Nn(er,2),S$=Nn(er,3),T$=Nn(er,4),C$=Nn(er,5,0),pa=void 0;pa=pa===void 0?0:pa,er={la:{sa:w$,ta:$$,height:S$,width:T$,rotation:C$,pa:ia(fn(er,6),pa)},ea:cu(o$(Ht.get(lt)),Hs,1).map(u$),ba:i$(r$(Et.get(lt)))},we.push(er)}ct=we}else ct=[];T[X]=ct,Ae.h=7;break}if(ue.type==="proto_list"){if(se){for(ct=Array(se.size()),Ht=0;Ht<se.size();Ht++)ct[Ht]=se.get(Ht);se.delete()}else ct=[];T[X]=ct,Ae.h=7;break}if(se===void 0){Ae.h=3;break}if(ue.type==="float_list"){T[X]=se,Ae.h=7;break}if(ue.type==="proto"){T[X]=se,Ae.h=7;break}if(ue.type!=="texture")throw Error("Unknown output config type: '"+ue.type+"'");return ee=p.v[X],ee||(ee=new gu(p.i,p.K),p.v[X]=ee),C(Ae,xm(ee,se,p.M),13);case 13:ce=Ae.i,T[X]=ce;case 7:ue.transform&&T[X]&&(T[X]=ue.transform(T[X])),Ae.h=3;break;case 14:he[Be]=Ae.i;case 3:_=j.next(),Ae.h=2;break;case 4:return Ae.return(T)}})}function b$(p,x,v){var T;return U(function(k){return typeof v=="number"||v instanceof Uint8Array||v instanceof p.i.Uint8BlobList?k.return(v):v instanceof p.i.Texture2dDataOut?(T=p.v[x],T||(T=new gu(p.i,p.K),p.v[x]=T),k.return(xm(T,v,p.M))):k.return(void 0)})}function v$(p,x){for(var v=x.name||"$",T=[].concat(u(x.wants)),k=new p.i.StringList,R=i(x.wants),_=R.next();!_.done;_=R.next())k.push_back(_.value);R=p.i.PacketListener.implement({onResults:function(P){for(var M={},j=0;j<x.wants.length;++j)M[T[j]]=P.get(j);var X=p.listeners[v];X&&(p.I=x$(p,M,x.outs).then(function(ue){ue=X(ue);for(var se=0;se<x.wants.length;++se){var ee=M[T[se]];typeof ee=="object"&&ee.hasOwnProperty&&ee.hasOwnProperty("delete")&&ee.delete()}ue&&(p.I=ue)}))}}),p.j.attachMultiListener(k,R),k.delete()}n.onResults=function(p,x){this.listeners[x||"$"]=p},oe("Solution",yu),oe("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function vm(p){switch(p===void 0&&(p=0),p){case 1:return"selfie_segmentation_landscape.tflite";default:return"selfie_segmentation.tflite"}}function wm(p){var x=this;p=p||{},this.h=new yu({locateFile:p.locateFile,files:function(v){return[{simd:!0,url:"selfie_segmentation_solution_simd_wasm_bin.js"},{simd:!1,url:"selfie_segmentation_solution_wasm_bin.js"},{data:!0,url:vm(v.modelSelection)}]},graph:{url:"selfie_segmentation.binarypb"},listeners:[{wants:["segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelSelection:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelSelection",fieldName:"int_value"},onChange:function(v){var T,k,R;return U(function(_){return _.h==1?(T=vm(v),k="third_party/mediapipe/modules/selfie_segmentation/"+T,C(_,fa(x.h,T),2)):(R=_.i,x.h.overrideFile(k,R),_.return(!0))})}}}})}n=wm.prototype,n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(p){this.h.onResults(p)},n.initialize=function(){var p=this;return U(function(x){return C(x,p.h.initialize(),0)})},n.reset=function(){this.h.reset()},n.send=function(p){var x=this;return U(function(v){return C(v,x.h.send(p),0)})},n.setOptions=function(p){this.h.setOptions(p)},oe("SelfieSegmentation",wm),oe("VERSION","0.1.1675465747")}).call(_n);/**
    * @license
    * Copyright 2022 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var Bc=function(n,e){return Bc=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var s in r)r.hasOwnProperty(s)&&(t[s]=r[s])},Bc(n,e)};function Cv(n,e){function t(){this.constructor=n}Bc(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var mt=function(){return mt=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var s in e=arguments[t])Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s]);return n},mt.apply(this,arguments)};function Ce(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){var l;c.done?s(c.value):(l=c.value,l instanceof t?l:new t(function(d){d(l)})).then(a,i)}u((r=r.apply(n,e||[])).next())})}function Ne(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(s=a.trys,!((s=s.length>0&&s[s.length-1])||l[0]!==6&&l[0]!==2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(d){l=[6,d],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}function li(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function xh(n){return Ce(this,void 0,void 0,function(){var e,t;return Ne(this,function(r){switch(r.label){case 0:return e=document.createElement("canvas"),n instanceof Te?[4,Ui(n,e)]:[3,2];case 1:return r.sent(),[3,3];case 2:e.width=li(n.width),e.height=li(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),r.label=3;case 3:return[2,e]}})})}function Nv(n){return Ce(this,void 0,void 0,function(){var e,t,r,s,o,a;return Ne(this,function(i){switch(i.label){case 0:return n instanceof Te?(e=n.shape.slice(0,2),t=e[0],r=e[1],s=ImageData.bind,[4,Ui(n)]):[3,2];case 1:return[2,new(s.apply(ImageData,[void 0,i.sent(),r,t]))];case 2:return o=document.createElement("canvas"),a=o.getContext("2d"),o.width=li(n.width),o.height=li(n.height),a.drawImage(n,0,0),[2,a.getImageData(0,0,o.width,o.height)]}})})}function Ev(n){return Ce(this,void 0,void 0,function(){var e,t;return Ne(this,function(r){switch(r.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,xh(n)]:[3,2];case 1:return t=r.sent(),[3,3];case 2:t=n,r.label=3;case 3:return e=t,[2,Wi(e,4)]}})})}function Gi(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got "+n);if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got "+n)}function Iv(n){var e=n.shape[2],t=ap(n,2),r=z(t,[-1]);return Co(r,e)}function va(n,e){return ie(function(){return Se(_s(n,de(e)),"int32")})}function oP(n,e){var t=e.shape,r=t[0],s=t[1],o=t[2];return ie(function(){var a=Iv(e),i=Rt(dr(0,o,1,"int32"),1),u=Se(ve(a,i),"int32"),c=z(u,[r,s]),l=ae(c,de(1,"int32"));return pe(function(d,f){return Y(d,f)}(l,n),de(1,"int32"))})}var kv=function(){function n(e,t){this.model=e,this.outputStride=t;var r=this.model.inputs[0].shape;E(r[1]===-1&&r[2]===-1,function(){return"Input shape ["+r[1]+", "+r[2]+"] must both be equal to or -1"})}return n.prototype.predict=function(e){var t=this;return ie(function(){var r=t.preprocessInput(Se(e,"float32")),s=Rt(r,0),o=t.model.predict(s).map(function(i){return tn(i,[0])}),a=t.nameOutputResults(o);return{heatmapScores:Rn(a.heatmap),offsets:a.offsets,displacementFwd:a.displacementFwd,displacementBwd:a.displacementBwd,segmentation:a.segmentation,partHeatmaps:a.partHeatmaps,longOffsets:a.longOffsets,partOffsets:a.partOffsets}})},n.prototype.dispose=function(){this.model.dispose()},n}(),aP=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return Cv(e,n),e.prototype.preprocessInput=function(t){return ie(function(){return pe(Ie(t,127.5),1)})},e.prototype.nameOutputResults=function(t){return{offsets:t[0],segmentation:t[1],partHeatmaps:t[2],longOffsets:t[3],heatmap:t[4],displacementFwd:t[5],displacementBwd:t[6],partOffsets:t[7]}},e}(kv),ji=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],xn=ji.length,di=ji.reduce(function(n,e,t){return n[e]=t,n},{});[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map(function(n){var e=n[0],t=n[1];return[di[e],di[t]]});function bh(n,e,t){var r=n[0],s=n[1],o=e[0],a=e[1],i=t.top,u=t.bottom;return[a/(t.left+t.right+s),o/(i+u+r)]}function _v(n,e,t,r){return{y:r.get(n,e,t),x:r.get(n,e,t+xn)}}function Rv(n,e,t){var r=_v(n.heatmapY,n.heatmapX,n.id,t),s=r.y,o=r.x;return{x:n.heatmapX*e+o,y:n.heatmapY*e+s}}function Ag(n,e,t){return n<e?e:n>t?t:n}function Og(n,e){return{x:n.x+e.x,y:n.y+e.y}}function iP(n,e,t){t===void 0&&(t=.3);for(var r=0,s=0,o=0;o<n.length;o++)e.keypoints[o].score>t&&(s+=1,r+=Math.pow(n[o].x-e.keypoints[o].position.x,2)+Math.pow(n[o].y-e.keypoints[o].position.y,2));return s===0?r=1/0:r/=s,r}function uP(n,e,t,r,s,o,a){for(var i=a[0],u=a[1],c=t(n),l=c.y*r+c.x,d=s[xn*(2*l)+e],f=s[xn*(2*l+1)+e],h=n.y+d,m=n.x+f,g=0;g<o;g++){h=Math.min(h,i-1);var y=t({x:m=Math.min(m,u-1),y:h}),b=y.y*r+y.x;h+=d=s[xn*(2*b)+e],m+=f=s[xn*(2*b+1)+e]}return{x:m,y:h}}function Av(n,e,t,r,s,o,a,i,u,c){for(var l=s[0],d=s[1],f=o[0],h=o[1],m=i[0],g=i[1],y=[],b=function(F){return function(V,W,U,G){var K=W[0],te=W[1],oe=U[0],le=U[1],fe=Math.round(((K+V.y+1)*le-1)/G);return{x:Math.round(((te+V.x+1)*oe-1)/G),y:fe}}(F,[l,d],[f,h],u)},$=0;$<r;$++){var S=uP(n,$,b,a,e,c,[m,g]);y.push(S)}for(var C=-1,I=1/0,A=0;A<t.length;A++){var L=iP(y,t[A]);L<I&&(C=A,I=L)}return C}function Ov(n,e){var t=n[0],r=n[1];return[Math.round((r-1)/e+1),Math.round((t-1)/e+1)]}function Dv(n,e,t,r,s,o,a,i,u,c,l){for(var d=a[0],f=a[1],h=n.shape,m=h[0],g=h[1],y=e.shape.slice(0,2),b=y[0],$=y[1],S=z(e,[b,$,2,xn]),C=new Float32Array(l*xn*3).fill(0),I=0;I<t.length;I++)for(var A=I*xn*3,L=t[I],F=0;F<xn;F++){var V=L.keypoints[F],W=A+3*F;C[W]=V.score,C[W+1]=V.position.y,C[W+2]=V.position.x}var U=bh([r,s],[d,f],i),G=U[0],K=U[1],te=sn(C,[l,xn,3]),oe=i.top,le=i.left,fe={variableNames:["segmentation","longOffsets","poses"],outputShape:[m,g],userCode:`
    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {
      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));
    }

    float convertToPositionInOutputFloat(
        int pos, int pad, float scale, int stride) {
      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);
    }

    float dist(float x1, float y1, float x2, float y2) {
      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);
    }

    float sampleLongOffsets(float h, float w, int d, int k) {
      float fh = fract(h);
      float fw = fract(w);
      int clH = int(ceil(h));
      int clW = int(ceil(w));
      int flH = int(floor(h));
      int flW = int(floor(w));
      float o11 = getLongOffsets(flH, flW, d, k);
      float o12 = getLongOffsets(flH, clW, d, k);
      float o21 = getLongOffsets(clH, flW, d, k);
      float o22 = getLongOffsets(clH, clW, d, k);
      float o1 = mix(o11, o12, fw);
      float o2 = mix(o21, o22, fw);
      return mix(o1, o2, fh);
    }

    int findNearestPose(int h, int w) {
      float prob = getSegmentation(h, w);
      if (prob < 1.0) {
        return -1;
      }

      // Done(Tyler): convert from output space h/w to strided space.
      float stridedH = convertToPositionInOutputFloat(
        h, `+oe+", "+K+", "+o+`);
      float stridedW = convertToPositionInOutputFloat(
        w, `+le+", "+G+", "+o+`);

      float minDist = 1000000.0;
      int iMin = -1;
      for (int i = 0; i < `+l+`; i++) {
        float curDistSum = 0.0;
        int numKpt = 0;
        for (int k = 0; k < `+xn+`; k++) {
          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);
          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);

          float y = float(h) + dy;
          float x = float(w) + dx;

          for (int s = 0; s < `+u+`; s++) {
            int yRounded = round(min(y, float(`+(r-1)+`)));
            int xRounded = round(min(x, float(`+(s-1)+`)));

            float yStrided = convertToPositionInOutputFloat(
              yRounded, `+oe+", "+K+", "+o+`);
            float xStrided = convertToPositionInOutputFloat(
              xRounded, `+le+", "+G+", "+o+`);

            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);
            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);

            y = y + dy;
            x = x + dx;
          }

          float poseScore = getPoses(i, k, 0);
          float poseY = getPoses(i, k, 1);
          float poseX = getPoses(i, k, 2);
          if (poseScore > `+c+`) {
            numKpt = numKpt + 1;
            curDistSum = curDistSum + dist(x, y, poseX, poseY);
          }
        }
        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {
          minDist = curDistSum / float(numKpt);
          iMin = i;
        }
      }
      return iMin;
    }

    void main() {
        ivec2 coords = getOutputCoords();
        int nearestPose = findNearestPose(coords[0], coords[1]);
        setOutput(float(nearestPose));
      }
  `};return Zx().compileAndRun(fe,[n,S,te])}function Fv(){return Yx()==="webgl"}function cP(n,e,t,r,s,o,a,i,u,c,l,d){var f=a[0],h=a[1];return u===void 0&&(u=.2),c===void 0&&(c=8),l===void 0&&(l=.3),d===void 0&&(d=10),Ce(this,void 0,void 0,function(){var m,g,y,b,$;return Ne(this,function(S){switch(S.label){case 0:return m=t.filter(function(C){return C.score>=u}),Fv()?(y=ie(function(){var C=Dv(n,e,m,r,s,o,[f,h],i,c,l,d),I=hn().makeTensorFromDataId(C.dataId,C.shape,C.dtype);return m.map(function(A,L){return function(F,V){return ie(function(){return Se(jo(F,de(V)),"int32")})}(I,L)})}),[4,Promise.all(y.map(function(C){return C.data()}))]):[3,2];case 1:return g=S.sent(),y.forEach(function(C){return C.dispose()}),[3,5];case 2:return[4,n.data()];case 3:return b=S.sent(),[4,e.data()];case 4:$=S.sent(),g=function(C,I,A,L,F,V,W,U,G,K){var te=W[0],oe=W[1];K===void 0&&(K=5);for(var le=A.map(function(re){return new Uint8Array(L*F).fill(0)}),fe=U.top,me=U.left,$e=bh([L,F],[te,oe],U),tt=$e[0],it=$e[1],nt=Ov([te,oe],V)[0],qe=0;qe<L;qe+=1)for(var ht=0;ht<F;ht+=1){var ut=qe*F+ht;if(C[ut]===1){var Ke=Av({x:ht,y:qe},I,A,K,[fe,me],[tt,it],nt,[L,F],V,G);Ke>=0&&(le[Ke][ut]=1)}}return le}(b,$,m,r,s,o,[f,h],i,c),S.label=5;case 5:return[2,g.map(function(C,I){return{data:C,pose:m[I],width:s,height:r}})]}})})}function lP(n,e,t,r,s,o,a,i,u,c,l,d,f){var h=i[0],m=i[1];return c===void 0&&(c=.2),l===void 0&&(l=8),d===void 0&&(d=.3),f===void 0&&(f=10),Ce(this,void 0,void 0,function(){var g,y,b,$,S,C;return Ne(this,function(I){switch(I.label){case 0:return g=r.filter(function(A){return A.score>=c}),Fv()?(b=ie(function(){var A=Dv(n,e,g,s,o,a,[h,m],u,l,d,f),L=hn().makeTensorFromDataId(A.dataId,A.shape,A.dtype);return g.map(function(F,V){return function(W,U,G){return ie(function(){return pe(Y(Se(jo(W,de(G)),"int32"),ae(U,1)),1)})}(L,t,V)})}),[4,Promise.all(b.map(function(A){return A.data()}))]):[3,2];case 1:return y=I.sent(),b.forEach(function(A){return A.dispose()}),[3,6];case 2:return[4,n.data()];case 3:return $=I.sent(),[4,e.data()];case 4:return S=I.sent(),[4,t.data()];case 5:C=I.sent(),y=function(A,L,F,V,W,U,G,K,te,oe,le){var fe=K[0],me=K[1];le===void 0&&(le=5);for(var $e=V.map(function(Le){return new Int32Array(W*U).fill(-1)}),tt=te.top,it=te.left,nt=bh([W,U],[fe,me],te),qe=nt[0],ht=nt[1],ut=Ov([fe,me],G)[0],Ke=0;Ke<W;Ke+=1)for(var re=0;re<U;re+=1){var ge=Ke*U+re;if(A[ge]===1){var Pe=Av({x:re,y:Ke},L,V,le,[tt,it],[qe,ht],ut,[W,U],G,oe);Pe>=0&&($e[Pe][ge]=F[ge])}}return $e}($,S,C,g,s,o,a,[h,m],u,l),I.label=6;case 6:return[2,y.map(function(A,L){return{pose:g[L],data:A,height:s,width:o}})]}})})}function Iu(n){return Math.floor(n/2)}var dP=function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(Iu(e),e);)this.exchange(e,Iu(e)),e=Iu(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var r=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=r},n}();function fP(n,e,t,r,s,o){for(var a=o.shape,i=a[0],u=a[1],c=!0,l=Math.max(t-s,0),d=Math.min(t+s+1,i),f=l;f<d;++f){for(var h=Math.max(r-s,0),m=Math.min(r+s+1,u),g=h;g<m;++g)if(o.get(f,g,n)>e){c=!1;break}if(!c)break}return c}var Pv=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map(function(n){var e=n[0],t=n[1];return[di[e],di[t]]}),ku=Pv.map(function(n){return n[1]}),Dg=Pv.map(function(n){return n[0]});function _u(n,e,t,r){return{y:Ag(Math.round(n.y/e),0,t-1),x:Ag(Math.round(n.x/e),0,r-1)}}function Fg(n,e,t,r,s,o,a,i){i===void 0&&(i=2);for(var u=r.shape,c=u[0],l=u[1],d=function($,S,C){var I=C.shape[2]/2;return{y:C.get(S.y,S.x,$),x:C.get(S.y,S.x,I+$)}}(n,_u(e.position,o,c,l),a),f=Og(e.position,d),h=0;h<i;h++){var m=_u(f,o,c,l),g=_v(m.y,m.x,t,s);f=Og({x:m.x*o,y:m.y*o},{x:g.x,y:g.y})}var y=_u(f,o,c,l),b=r.get(y.y,y.x,t);return{position:f,part:ji[t],score:b}}function pP(n,e,t,r,s,o){var a=e.shape[2],i=ku.length,u=new Array(a),c=n.part,l=n.score,d=Rv(c,r,t);u[c.id]={score:l,part:ji[c.id],position:d};for(var f=i-1;f>=0;--f){var h=ku[f],m=Dg[f];u[h]&&!u[m]&&(u[m]=Fg(f,u[h],m,e,t,r,o))}for(f=0;f<i;++f)h=Dg[f],m=ku[f],u[h]&&!u[m]&&(u[m]=Fg(f,u[h],m,e,t,r,s));return u}function Lv(n,e,t,r){var s=t.x,o=t.y;return n.some(function(a){var i,u,c,l,d,f,h=a.keypoints[r].position;return i=o,u=s,c=h.y,l=h.x,(d=c-i)*d+(f=l-u)*f<=e})}function hP(n,e,t){var r=t.reduce(function(s,o,a){var i=o.position,u=o.score;return Lv(n,e,i,a)||(s+=u),s},0);return r/t.length}function wa(n,e,t,r,s,o,a,i){a===void 0&&(a=.5),i===void 0&&(i=20);for(var u=[],c=function(m,g,y){for(var b=y.shape,$=b[0],S=b[1],C=b[2],I=new dP($*S*C,function(W){return W.score}),A=0;A<$;++A)for(var L=0;L<S;++L)for(var F=0;F<C;++F){var V=y.get(A,L,F);V<m||fP(F,V,A,L,g,y)&&I.enqueue({score:V,part:{heatmapY:A,heatmapX:L,id:F}})}return I}(a,1,n),l=i*i;u.length<o&&!c.empty();){var d=c.dequeue();if(!Lv(u,l,Rv(d.part,s,e),d.part.id)){var f=pP(d,n,e,s,t,r),h=hP(u,l,f);u.push({keypoints:f,score:h})}}return u}var Qs,mP=[-123.15,-115.9,-103.06],gP=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return Cv(e,n),e.prototype.preprocessInput=function(t){return ae(t,mP)},e.prototype.nameOutputResults=function(t){var r=t[0],s=t[1],o=t[2],a=t[3],i=t[4],u=t[5];return{offsets:i,segmentation:t[6],partHeatmaps:u,longOffsets:a,heatmap:o,displacementFwd:s,displacementBwd:r,partOffsets:t[7]}},e}(kv),Pg="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",Lg="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function no(n){if(typeof HTMLCanvasElement!="undefined"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&n instanceof OffscreenCanvas||typeof HTMLImageElement!="undefined"&&n instanceof HTMLImageElement)return function(e){if("offsetHeight"in e&&e.offsetHeight!==0&&"offsetWidth"in e&&e.offsetWidth!==0)return[e.offsetHeight,e.offsetWidth];if(e.height!=null&&e.width!=null)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(n);if(typeof ImageData!="undefined"&&n instanceof ImageData)return[n.height,n.width];if(typeof HTMLVideoElement!="undefined"&&n instanceof HTMLVideoElement)return function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}(n);if(n instanceof Te)return[n.shape[0],n.shape[1]];throw new Error("error: Unknown input type: "+n+".")}function Bg(n,e){return function(t,r){return(t-1)%r==0}(n,e)?n:Math.floor(n/e)*e+1}var ro={low:"low",medium:"medium",high:"high",full:"full"},yP=((Qs={})[ro.low]=.25,Qs[ro.medium]=.5,Qs[ro.high]=.75,Qs[ro.full]=1,Qs);function $a(n,e,t){var r=t[0],s=t[1],o=function(a){if(typeof a=="string"){var i=yP[a];return E(typeof i=="number",function(){return"string value of inputResolution must be one of "+Object.values(ro).join(",")+" but was "+a+"."}),i}return E(typeof a=="number"&&a<=2&&a>=.1,function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+a}),a}(n);return[Bg(r*o,e),Bg(s*o,e)]}function ss(n,e,t,r,s){var o=e[0],a=e[1],i=t[0],u=t[1],c=r[0],l=c[0],d=c[1],f=r[1],h=f[0],m=f[1];return s===void 0&&(s=!1),ie(function(){var g=Ur.resizeBilinear(n,[i,u],!0);return s&&(g=Rn(g)),function(y,b,$){var S=b[0],C=b[1],I=$[0],A=I[0],L=I[1],F=$[1],V=F[0],W=F[1];return ie(function(){var U=Rt(y);return tn(Ur.cropAndResize(U,[[A/(S+A+L-1),V/(C+V+W-1),(A+S-1)/(S+A+L-1),(V+C-1)/(C+V+W-1)]],[0],[S,C]),[0])})}(g,[o,a],[[l,d],[h,m]])})}function Sa(n,e){var t=e[0],r=e[1],s=no(n),o=s[0],a=s[1],i=r/t,u=[0,0,0,0],c=u[0],l=u[1],d=u[2],f=u[3];a/o<i?(c=0,l=0,d=Math.round(.5*(i*o-a)),f=Math.round(.5*(i*o-a))):(c=Math.round(.5*(1/i*a-o)),l=Math.round(.5*(1/i*a-o)),d=0,f=0);var h=ie(function(){var m=function(g){return g instanceof Te?g:Wi(g)}(n);return m=_p(m,[[c,l],[d,f],[0,0]]),Ur.resizeBilinear(m,[t,r])});return{resized:h,padding:{top:c,left:d,right:f,bottom:l}}}function Ta(n){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,Promise.all(n.map(function(t){return t.buffer()}))]})})}function Ca(n,e,t,r,s){var o=e[0],a=e[1],i=t[0],u=t[1],c=function(l,d,f,h,m){return h===void 0&&(h=0),m===void 0&&(m=0),f===1&&d===1&&h===0&&m===0?l:l.map(function(g){return function(y,b,$,S,C){return S===void 0&&(S=0),C===void 0&&(C=0),{score:y.score,keypoints:y.keypoints.map(function(I){var A=I.score,L=I.part,F=I.position;return{score:A,part:L,position:{x:F.x*$+C,y:F.y*b+S}}})}}(g,d,f,h,m)})}(n,(o+r.top+r.bottom)/i,(a+r.left+r.right)/u,-r.top,-r.left);return s?function(l,d){return d<=0?l:l.map(function(f){return function(h,m){return{score:h.score,keypoints:h.keypoints.map(function(g){var y=g.score,b=g.part,$=g.position;return{score:y,part:b,position:{x:m-1-$.x,y:$.y}}})}}(f,d)})}(c,a):c}var Vg={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},Mg=["MobileNetV1","ResNet50"],Ug={MobileNetV1:[8,16,32],ResNet50:[32,16]},Wg={MobileNetV1:[.5,.75,1],ResNet50:[1]},zg=[1,2,4],Na={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},Ea={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function Gg(n){var e=n.segmentationThreshold,t=n.maxDetections,r=n.scoreThreshold,s=n.nmsRadius;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".")}function jg(n){var e=n.segmentationThreshold,t=n.maxDetections,r=n.scoreThreshold,s=n.nmsRadius,o=n.minKeypointScore,a=n.refineSteps;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".");if(o<0||o>1)throw new Error("Invalid minKeypointScore "+o+".Should be in range [0.0, 1.0]");if(a<=0||a>20)throw new Error("Invalid refineSteps "+a+".Should be in range [1, 20]")}var Bv=function(){function n(e){this.baseModel=e}return n.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},n.prototype.segmentPersonActivation=function(e,t,r){var s=this;r===void 0&&(r=.5);var o=no(e),a=o[0],i=o[1],u=$a(t,this.baseModel.outputStride,[a,i]),c=Sa(e,u),l=c.resized,d=c.padding,f=ie(function(){var $=s.predictForPersonSegmentation(l),S=$.segmentLogits,C=$.heatmapScores,I=$.offsets,A=$.displacementFwd,L=$.displacementBwd,F=l.shape,V=F[0],W=F[1],U=ss(S,[a,i],[V,W],[[d.top,d.bottom],[d.left,d.right]],!0);return{segmentation:va(tn(U),r),heatmapScores:C,offsets:I,displacementFwd:A,displacementBwd:L}}),h=f.segmentation,m=f.heatmapScores,g=f.offsets,y=f.displacementFwd,b=f.displacementBwd;return l.dispose(),{segmentation:h,heatmapScores:m,offsets:g,displacementFwd:y,displacementBwd:b,padding:d,internalResolutionHeightAndWidth:u}},n.prototype.segmentPerson=function(e,t){return t===void 0&&(t=Na),Ce(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,d,f,h,m,g,y,b,$,S,C;return Ne(this,function(I){switch(I.label){case 0:return Gg(t=mt(mt({},Na),t)),r=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),s=r.segmentation,o=r.heatmapScores,a=r.offsets,i=r.displacementFwd,u=r.displacementBwd,c=r.padding,l=r.internalResolutionHeightAndWidth,d=s.shape,f=d[0],h=d[1],[4,s.data()];case 1:return m=I.sent(),s.dispose(),[4,Ta([o,a,i,u])];case 2:return g=I.sent(),y=g[0],b=g[1],$=g[2],S=g[3],C=Ca(C=wa(y,b,$,S,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[f,h],l,c,!1),o.dispose(),a.dispose(),i.dispose(),u.dispose(),[2,{height:f,width:h,data:m,allPoses:C}]}})})},n.prototype.segmentMultiPerson=function(e,t){return t===void 0&&(t=Ea),Ce(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,d,f,h,m,g,y,b,$,S,C,I,A,L,F=this;return Ne(this,function(V){switch(V.label){case 0:return jg(t=mt(mt({},Ea),t)),r=no(e),s=r[0],o=r[1],a=$a(t.internalResolution,this.baseModel.outputStride,[s,o]),i=Sa(e,a),u=i.resized,c=i.padding,l=ie(function(){var W,U=F.predictForMultiPersonInstanceSegmentationAndPart(u),G=U.segmentLogits,K=U.longOffsets,te=U.heatmapScores,oe=U.offsets,le=U.displacementFwd,fe=U.displacementBwd,me=ss(G,[s,o],a,[[c.top,c.bottom],[c.left,c.right]],!0);return W=K,{segmentation:va(tn(me),t.segmentationThreshold),longOffsets:W,heatmapScoresRaw:te,offsetsRaw:oe,displacementFwdRaw:le,displacementBwdRaw:fe}}),d=l.segmentation,f=l.longOffsets,h=l.heatmapScoresRaw,m=l.offsetsRaw,g=l.displacementFwdRaw,y=l.displacementBwdRaw,[4,Ta([h,m,g,y])];case 1:return b=V.sent(),$=b[0],S=b[1],C=b[2],I=b[3],A=Ca(A=wa($,S,C,I,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[s,o],a,c,!1),[4,cP(d,f,A,s,o,this.baseModel.outputStride,a,c,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return L=V.sent(),u.dispose(),d.dispose(),f.dispose(),h.dispose(),m.dispose(),g.dispose(),y.dispose(),[2,L]}})})},n.prototype.segmentPersonPartsActivation=function(e,t,r){var s=this;r===void 0&&(r=.5);var o=no(e),a=o[0],i=o[1],u=$a(t,this.baseModel.outputStride,[a,i]),c=Sa(e,u),l=c.resized,d=c.padding,f=ie(function(){var $=s.predictForPersonSegmentationAndPart(l),S=$.segmentLogits,C=$.partHeatmapLogits,I=$.heatmapScores,A=$.offsets,L=$.displacementFwd,F=$.displacementBwd,V=l.shape,W=V[0],U=V[1],G=ss(S,[a,i],[W,U],[[d.top,d.bottom],[d.left,d.right]],!0),K=ss(C,[a,i],[W,U],[[d.top,d.bottom],[d.left,d.right]],!0);return{partSegmentation:oP(va(tn(G),r),K),heatmapScores:I,offsets:A,displacementFwd:L,displacementBwd:F}}),h=f.partSegmentation,m=f.heatmapScores,g=f.offsets,y=f.displacementFwd,b=f.displacementBwd;return l.dispose(),{partSegmentation:h,heatmapScores:m,offsets:g,displacementFwd:y,displacementBwd:b,padding:d,internalResolutionHeightAndWidth:u}},n.prototype.segmentPersonParts=function(e,t){return t===void 0&&(t=Na),Ce(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,d,f,h,m,g,y,b,$,S,C;return Ne(this,function(I){switch(I.label){case 0:return Gg(t=mt(mt({},Na),t)),r=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),s=r.partSegmentation,o=r.heatmapScores,a=r.offsets,i=r.displacementFwd,u=r.displacementBwd,c=r.padding,l=r.internalResolutionHeightAndWidth,d=s.shape,f=d[0],h=d[1],[4,s.data()];case 1:return m=I.sent(),s.dispose(),[4,Ta([o,a,i,u])];case 2:return g=I.sent(),y=g[0],b=g[1],$=g[2],S=g[3],C=Ca(C=wa(y,b,$,S,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[f,h],l,c,!1),o.dispose(),a.dispose(),i.dispose(),u.dispose(),[2,{height:f,width:h,data:m,allPoses:C}]}})})},n.prototype.segmentMultiPersonParts=function(e,t){return t===void 0&&(t=Ea),Ce(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,d,f,h,m,g,y,b,$,S,C,I,A,L,F,V=this;return Ne(this,function(W){switch(W.label){case 0:return jg(t=mt(mt({},Ea),t)),r=no(e),s=r[0],o=r[1],a=$a(t.internalResolution,this.baseModel.outputStride,[s,o]),i=Sa(e,a),u=i.resized,c=i.padding,l=ie(function(){var U=V.predictForMultiPersonInstanceSegmentationAndPart(u),G=U.segmentLogits,K=U.longOffsets,te=U.heatmapScores,oe=U.offsets,le=U.displacementFwd,fe=U.displacementBwd,me=U.partHeatmaps,$e=ss(G,[s,o],a,[[c.top,c.bottom],[c.left,c.right]],!0),tt=ss(me,[s,o],a,[[c.top,c.bottom],[c.left,c.right]],!0),it=K,nt=va(tn($e),t.segmentationThreshold),qe=function(ht){var ut=ht.shape,Ke=ut[0],re=ut[1],ge=ut[2];return ie(function(){var Pe=Iv(ht),Le=Rt(dr(0,ge,1,"int32"),1),Xe=Se(ve(Pe,Le),"int32");return z(Xe,[Ke,re])})}(tt);return{segmentation:nt,longOffsets:it,heatmapScoresRaw:te,offsetsRaw:oe,displacementFwdRaw:le,displacementBwdRaw:fe,partSegmentation:qe}}),d=l.segmentation,f=l.longOffsets,h=l.heatmapScoresRaw,m=l.offsetsRaw,g=l.displacementFwdRaw,y=l.displacementBwdRaw,b=l.partSegmentation,[4,Ta([h,m,g,y])];case 1:return $=W.sent(),S=$[0],C=$[1],I=$[2],A=$[3],L=Ca(L=wa(S,C,I,A,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[s,o],a,c,!1),[4,lP(d,f,b,L,s,o,this.baseModel.outputStride,a,c,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return F=W.sent(),u.dispose(),d.dispose(),f.dispose(),h.dispose(),m.dispose(),g.dispose(),y.dispose(),b.dispose(),[2,F]}})})},n.prototype.dispose=function(){this.baseModel.dispose()},n}();function xP(n){return Ce(this,void 0,void 0,function(){var e,t,r,s,o,a;return Ne(this,function(i){switch(i.label){case 0:if(e=n.outputStride,t=n.quantBytes,r=n.multiplier,vv==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return s=function(u,c,l){var d={1:"100",.75:"075",.5:"050"},f="model-stride"+u+".json";return l===4?Lg+"float/"+d[c]+"/"+f:Lg+"quant"+l+"/"+d[c]+"/"+f}(e,r,t),[4,yh(n.modelUrl||s)];case 1:return o=i.sent(),a=new aP(o,e),[2,new Bv(a)]}})})}function bP(n){return Ce(this,void 0,void 0,function(){var e,t,r,s,o;return Ne(this,function(a){switch(a.label){case 0:if(e=n.outputStride,t=n.quantBytes,vv==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return r=function(i,u){var c="model-stride"+i+".json";return u===4?Pg+"float/"+c:Pg+"quant"+u+"/"+c}(e,t),[4,yh(n.modelUrl||r)];case 1:return s=a.sent(),o=new gP(s,e),[2,new Bv(o)]}})})}function vP(n){return n===void 0&&(n=Vg),Ce(this,void 0,void 0,function(){return Ne(this,function(e){return(n=function(t){if((t=t||Vg).architecture==null&&(t.architecture="MobileNetV1"),Mg.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+Mg);if(t.outputStride==null&&(t.outputStride=16),Ug[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+Ug[t.architecture]+" for architecture "+t.architecture+".");if(t.multiplier==null&&(t.multiplier=1),Wg[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+Wg[t.architecture]+" for architecture "+t.architecture+".");if(t.quantBytes==null&&(t.quantBytes=4),zg.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+zg+" for architecture "+t.architecture+".");return t}(n)).architecture==="ResNet50"?[2,bP(n)]:n.architecture==="MobileNetV1"?[2,xP(n)]:[2,null]})})}var Vc=["left_face","right_face","left_upper_arm_front","left_upper_arm_back","right_upper_arm_front","right_upper_arm_back","left_lower_arm_front","left_lower_arm_back","right_lower_arm_front","right_lower_arm_back","left_hand","right_hand","torso_front","torso_back","left_upper_leg_front","left_upper_leg_back","right_upper_leg_front","right_upper_leg_back","left_lower_leg_front","left_lower_leg_back","right_lower_leg_front","right_lower_leg_back","left_feet","right_feet"],Hg=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,xh(this.mask)]})})},n.prototype.toImageData=function(){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,this.mask]})})},n.prototype.toTensor=function(){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,Ev(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"imagedata"},n}();function wP(n){if(Gi(n),n!==255)throw new Error("Foreground id must be 255 but got "+n);return"person"}function $P(n){if(Gi(n),n>=Vc.length)throw new Error("Invalid body part value "+n);return Vc[n]}var SP=function(){function n(e){this.bodyPixModel=e}return n.prototype.segmentPeople=function(e,t){return Ce(this,void 0,void 0,function(){var r,s,o,a;return Ne(this,function(i){switch(i.label){case 0:return e instanceof ImageBitmap&&((r=document.createElement("canvas")).getContext("2d").drawImage(e,0,0),e=r),t.segmentBodyParts?t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPersonParts(e,t)]:[3,2]:[3,5];case 1:return o=i.sent(),[3,4];case 2:return[4,this.bodyPixModel.segmentPersonParts(e,t)];case 3:o=[i.sent()],i.label=4;case 4:return s=o.map(function(u){var c=u.data,l=u.width,d=u.height,f=new Uint8ClampedArray(l*d*4).fill(0);return c.forEach(function(h,m){h===-1?(f[4*m]=Vc.length,f[4*m+3]=0):(f[4*m]=h,f[4*m+3]=255)}),{maskValueToLabel:$P,mask:new Hg(new ImageData(f,l,d))}}),[3,10];case 5:return t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPerson(e,t)]:[3,7];case 6:return a=i.sent(),[3,9];case 7:return[4,this.bodyPixModel.segmentPerson(e,t)];case 8:a=[i.sent()],i.label=9;case 9:s=a.map(function(u){var c=u.data,l=u.width,d=u.height,f=new Uint8ClampedArray(l*d*4).fill(0);return c.forEach(function(h,m){h===0?(f[4*m]=0,f[4*m+3]=0):(f[4*m]=255,f[4*m+3]=255)}),{maskValueToLabel:wP,mask:new Hg(new ImageData(f,l,d))}}),i.label=10;case 10:return[2,s]}})})},n.prototype.dispose=function(){this.bodyPixModel.dispose()},n.prototype.reset=function(){},n}();function TP(n){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,vP(n).then(function(t){return new SP(t)})]})})}var qg={runtime:"mediapipe",modelType:"general"},CP=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,this.mask]})})},n.prototype.toImageData=function(){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,Nv(this.mask)]})})},n.prototype.toTensor=function(){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,Ev(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n}();function NP(n){return Gi(n),"person"}var EP=function(){function n(e){var t,r=this;this.selfieMode=!1,this.selfieSegmentationSolution=new sP.SelfieSegmentation({locateFile:function(s,o){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+s:o+"/"+s}}),e.modelType==="landscape"?t=1:t=0,this.selfieSegmentationSolution.setOptions({modelSelection:t,selfieMode:this.selfieMode}),this.selfieSegmentationSolution.onResults(function(s){r.segmentation=[{maskValueToLabel:NP,mask:new CP(s.segmentationMask)}]})}return n.prototype.segmentPeople=function(e,t){return Ce(this,void 0,void 0,function(){var r,s;return Ne(this,function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.selfieSegmentationSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Te?(s=ImageData.bind,[4,Ui(e)]):[3,2];case 1:return r=new(s.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,o.label=3;case 3:return e=r,[4,this.selfieSegmentationSolution.send({image:e})];case 4:return o.sent(),[2,this.segmentation]}})})},n.prototype.dispose=function(){this.selfieSegmentationSolution.close()},n.prototype.reset=function(){this.selfieSegmentationSolution.reset(),this.segmentation=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.selfieSegmentationSolution.initialize()},n}();function IP(n){return Ce(this,void 0,void 0,function(){var e,t;return Ne(this,function(r){switch(r.label){case 0:return e=function(s){if(s==null)return mt({},qg);var o=mt({},s);return o.runtime="mediapipe",o.modelType==null&&(o.modelType=qg.modelType),o}(n),[4,(t=new EP(e)).initialize()];case 1:return r.sent(),[2,t]}})})}function kP(n,e,t,r){var s=n.width,o=n.height,a=r?-1:1,i=Math.cos(n.rotation),u=Math.sin(n.rotation),c=n.xCenter,l=n.yCenter,d=1/e,f=1/t,h=new Array(16);return h[0]=s*i*a*d,h[1]=-o*u*d,h[2]=0,h[3]=(-.5*s*i*a+.5*o*u+c)*d,h[4]=s*u*a*f,h[5]=o*i*f,h[6]=0,h[7]=(-.5*o*i-.5*s*u*a+l)*f,h[8]=0,h[9]=0,h[10]=s*d,h[11]=0,h[12]=0,h[13]=0,h[14]=0,h[15]=1,function(m){if(m.length!==16)throw new Error("Array length must be 16 but got "+m.length);return[[m[0],m[1],m[2],m[3]],[m[4],m[5],m[6],m[7]],[m[8],m[9],m[10],m[11]],[m[12],m[13],m[14],m[15]]]}(h)}function Vv(n){return n instanceof Te?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function Ru(n,e){E(n.width!==0,function(){return e+" width cannot be 0."}),E(n.height!==0,function(){return e+" height cannot be 0."})}function _P(n,e){var t=function(r,s,o,a){var i=s-r,u=a-o;if(i===0)throw new Error("Original min and max are both "+r+", range cannot be 0.");var c=u/i;return{scale:c,offset:o-r*c}}(0,255,e[0],e[1]);return ie(function(){return ae(Y(n,t.scale),t.offset)})}function RP(n,e,t){var r=e.outputTensorSize,s=e.keepAspectRatio,o=e.borderMode,a=e.outputTensorFloatRange,i=Vv(n),u=function(f,h){return h?{xCenter:h.xCenter*f.width,yCenter:h.yCenter*f.height,width:h.width*f.width,height:h.height*f.height,rotation:h.rotation}:{xCenter:.5*f.width,yCenter:.5*f.height,width:f.width,height:f.height,rotation:0}}(i,t),c=function(f,h,m){if(m===void 0&&(m=!1),!m)return{top:0,left:0,right:0,bottom:0};var g=h.height,y=h.width;Ru(h,"targetSize"),Ru(f,"roi");var b,$,S=g/y,C=f.height/f.width,I=0,A=0;return S>C?(b=f.width,$=f.width*S,A=(1-C/S)/2):(b=f.height/S,$=f.height,I=(1-S/C)/2),f.width=b,f.height=$,{top:A,left:I,right:I,bottom:A}}(u,r,s),l=kP(u,i.width,i.height,!1),d=ie(function(){var f,h=(f=n)instanceof Te?f:Wi(f),m=Dr(function(b,$,S){return Ru(S,"inputResolution"),[1/S.width*b[0][0]*$.width,1/S.height*b[0][1]*$.width,b[0][3]*$.width,1/S.width*b[1][0]*$.height,1/S.height*b[1][1]*$.height,b[1][3]*$.height,0,0]}(l,i,r),[1,8]),g=o==="zero"?"constant":"nearest",y=Ur.transform(Rt(Se(h,"float32")),m,"bilinear",g,0,[r.height,r.width]);return a!=null?_P(y,a):y});return{imageTensor:d,padding:c,transformationMatrix:l}}function AP(n,e,t){return ie(function(){var r=tn(n,[0]),s=r.shape[2];if(s===1){var o=r;switch(e.activation){case"none":break;case"sigmoid":o=Rn(o);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported ("+e.activation+")")}var a=t?Ur.resizeBilinear(o,[t.height,t.width]):o;return tn(a,[2])}throw new Error("Unsupported number of tensor channels "+s)})}var Kg={runtime:"tfjs",modelType:"general",modelUrl:"https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1"},Xg={flipHorizontal:!1},OP={outputTensorSize:{width:256,height:256},keepAspectRatio:!1,borderMode:"zero",outputTensorFloatRange:[0,1]},DP={outputTensorSize:{width:256,height:144},keepAspectRatio:!1,borderMode:"zero",outputTensorFloatRange:[0,1]},FP={activation:"none"},PP=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,xh(this.mask)]})})},n.prototype.toImageData=function(){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,Nv(this.mask)]})})},n.prototype.toTensor=function(){return Ce(this,void 0,void 0,function(){return Ne(this,function(e){return[2,this.mask]})})},n.prototype.getUnderlyingType=function(){return"tensor"},n}();function LP(n){return Gi(n),"person"}var ko,BP=function(){function n(e,t){this.modelType=e,this.model=t}return n.prototype.segmentPeople=function(e,t){return Ce(this,void 0,void 0,function(){var r,s=this;return Ne(this,function(o){return t=function(a){if(a==null)return mt({},Xg);var i=mt({},a);return i.flipHorizontal==null&&(i.flipHorizontal=Xg.flipHorizontal),i}(t),e==null?(this.reset(),[2,[]]):(r=ie(function(){var a=RP(e,s.modelType==="general"?OP:DP).imageTensor,i=Ee(s.model.predict(a),[0,0,0,1],-1),u=Vv(e),c=AP(i,FP,u),l=Rt(c,2),d=Yr(l,[[0,0],[0,0],[0,1]]);return Ip(d,[[0,0],[0,0],[0,2]],"symmetric")}),[2,[{maskValueToLabel:LP,mask:new PP(r)}]])})})},n.prototype.dispose=function(){this.model.dispose()},n.prototype.reset=function(){},n}();function VP(n){return Ce(this,void 0,void 0,function(){var e,t,r;return Ne(this,function(s){switch(s.label){case 0:return e=function(o){if(o==null)return mt({},Kg);var a=mt({},o);if(a.runtime="tfjs",a.modelType==null&&(a.modelType=Kg.modelType),a.modelType!=="general"&&a.modelType!=="landscape")throw new Error("Model type must be one of general or landscape, but got "+a.modelType);return a.modelUrl==null&&(a.modelType==="general"?a.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1":a.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/landscape/1"),a}(n),t=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,yh(e.modelUrl,{fromTFHub:t})];case 1:return r=s.sent(),[2,new BP(e.modelType,r)]}})})}function MP(n,e){return Ce(this,void 0,void 0,function(){var t,r;return Ne(this,function(s){switch(n){case ko.MediaPipeSelfieSegmentation:if(t=void 0,(r=e)!=null){if(r.runtime==="tfjs")return[2,VP(r)];if(r.runtime==="mediapipe")return[2,IP(r)];t=r.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+t);case ko.BodyPix:return[2,TP(r=e)];default:throw new Error(n+" is not a supported model name.")}})})}(function(n){n.BodyPix="BodyPix",n.MediaPipeSelfieSegmentation="MediaPipeSelfieSegmentation"})(ko||(ko={}));function UP(n,e,t,r,s,o){o===void 0&&(o={r:0,g:255,b:255,a:255});for(var a=-s;a<=s;a++)for(var i=-s;i<=s;i++)if(a!==0&&i!==0){var u=(e+a)*r+(t+i);n[4*u+0]=o.r,n[4*u+1]=o.g,n[4*u+2]=o.b,n[4*u+3]=o.a}}function WP(n,e,t,r,s,o,a){a===void 0&&(a=1);for(var i=0,u=-a;u<=a;u++)for(var c=-a;c<=a;c++)if(u!==0&&c!==0){var l=(e+u)*r+(t+c);(!s[n[4*l]]||n[4*l+3]<o)&&(i+=1)}return i>0}function zP(n,e,t,r,s,o){return e===void 0&&(e={r:0,g:0,b:0,a:0}),t===void 0&&(t={r:0,g:0,b:0,a:255}),r===void 0&&(r=!1),s===void 0&&(s=.5),o===void 0&&(o=Array.from(Array(256).keys())),Ce(this,void 0,void 0,function(){var a,i,u,c,l,d,f,h,m,g,y,b,$,S;return Ne(this,function(C){switch(C.label){case 0:return(a=Array.isArray(n)?n:[n]).length===0?[2,null]:[4,Promise.all(a.map(function(I){return I.mask.toImageData()}))];case 1:for(i=C.sent(),u=i[0],c=u.width,l=u.height,d=new Uint8ClampedArray(c*l*4),f=Math.round(255*s),h=new Array(256).fill(!1),o.forEach(function(I){return h[I]=!0}),m=0;m<l;m++)for(g=0;g<c;g++)for(d[4*(y=m*c+g)+0]=t.r,d[4*y+1]=t.g,d[4*y+2]=t.b,d[4*y+3]=t.a,b=0,$=i;b<$.length;b++)S=$[b],h[S.data[4*y]]&&S.data[4*y+3]>=f&&(d[4*y]=e.r,d[4*y+1]=e.g,d[4*y+2]=e.b,d[4*y+3]=e.a,r&&m-1>=0&&m+1<l&&g-1>=0&&g+1<c&&WP(S.data,m,g,c,h,f)&&UP(d,m,g,c,1));return[2,new ImageData(d,c,l)]}})})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er={},Ia={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function GP(n,e){Er[n]=e}function vn(n,e){if(!(n in Er)||e!=null){const r=HP(n,e);if(r!==null)Er[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=Er[n];return t==null||t.isContextLost()?(delete Er[n],vn(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Er[n])}function jP(n){if(typeof OffscreenCanvas!="undefined"&&n===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function HP(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e==null?jP(n):e;return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete Er[n]},!1),B().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ia.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Ia)||t.getContext("experimental-webgl",Ia):t.getContext("webgl2",Ia)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var _o;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(_o||(_o={}));var Ut;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Ut||(Ut={}));var st;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(st||(st={}));function Xo(n,e){return[e,n]}function qP(n,e){return n*e}function ka(n){const e=q(n),t=Math.ceil(e/4);return Xa(t)}function As(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function KP(n,e){const[t,r]=As(n,e);return t*r*4}function vh(n,e){const t=n;let r,s,o,a,i,u,c,l,d,f;return B().getNumber("WEBGL_VERSION")===2?(r=t.R32F,s=t.R16F,o=t.RGBA16F,a=t.RGBA32F,i=t.RED,c=4,l=1,d=t.HALF_FLOAT,f=t.FLOAT,u=t.RGBA8):(r=n.RGBA,s=n.RGBA,o=n.RGBA,a=t.RGBA,i=n.RGBA,c=4,l=4,d=e!=null?e.HALF_FLOAT_OES:null,f=n.FLOAT,u=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:f}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J(n,e){const t=e();return B().getBool("DEBUG")&&XP(n),t}function XP(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+JP(n,e))}const YP=596e-10,QP=65504;function ZP(n){return!!(B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||YP<Math.abs(n)&&Math.abs(n)<QP)}function JP(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function _a(n,e){return Jn(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function e3(n,e){const t=Jn(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(J(n,()=>n.shaderSource(t,e)),J(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function t3(n,e){const t=Jn(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(J(n,()=>n.shaderSource(t,e)),J(n,()=>n.compileShader(t)),B().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw Mv(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const n3=/ERROR: [0-9]+:([0-9]+):/g;function Mv(n,e){const t=n3.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],s=n.split(`
`),o=s.length.toString().length+2,a=s.map((d,f)=>Rr((f+1).toString(),o)+d);let i=0;for(let d=0;d<a.length;d++)i=Math.max(a[d].length,i);const u=a.slice(0,r-1),c=a.slice(r-1,r),l=a.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Rr(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function r3(n){return Jn(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function s3(n,e){if(J(n,()=>n.linkProgram(e)),!B().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Au(n,e){if(J(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function o3(n,e){const t=Jn(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return J(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),J(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function a3(n,e){const t=Jn(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return J(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),J(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function i3(n){return Jn(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function u3(n,e){const t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,s=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function c3(n){return Jn(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Yg(n,e,t,r,s,o,a){const i=n.getAttribLocation(e,t);return i===-1?!1:(J(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),J(n,()=>n.vertexAttribPointer(i,s,n.FLOAT,!1,o,a)),J(n,()=>n.enableVertexAttribArray(i)),!0)}function l3(n,e,t){m3(n,t),J(n,()=>n.activeTexture(n.TEXTURE0+t)),J(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function d3(n,e,t){return Jn(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function f3(n,e,t){return n.getUniformLocation(e,t)}function p3(n,e,t,r){J(n,()=>l3(n,e,r)),J(n,()=>n.uniform1i(t,r))}function Ou(n,e,t){J(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),J(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Qg(n,e){J(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),J(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Ra(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+h3(n,e))}function h3(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Jn(n,e,t){const r=J(n,()=>e());if(r==null)throw new Error(t);return r}function m3(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const s=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${s}.`)}}function $s(n,e=2){return q(n.slice(0,n.length-e))}function Ss(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Aa(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[$s(n),...Ss(n)]),e}function g3(n,e=!1){let t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=B().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&B().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((i,u)=>u>=n.length-2?wi(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Qn(n).newShape);let s=q(n),o=null;n.length<=1&&s<=t?o=[1,s]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const i=$s(n);let u=2,c=2;n.length&&([u,c]=Ss(n)),s=i*(u/2)*(c/2),o=Xa(s).map(l=>l*2)}else o=Xa(s);return o}function Oa(n){return n%2===0}function fi(n,e){if(n=n.slice(-2),e=e.slice(-2),Me(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n.slice(-1)[0],r=e.slice(-1)[0];if(t===r||Oa(t)&&Oa(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Oa(n[0])&&Oa(e[0])}let Du,Fu;function y3(n){if(Du==null){const e=vn(n);Du=e.getParameter(e.MAX_TEXTURE_SIZE)}return Du}function x3(n){if(Fu==null){const e=vn(n);Fu=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Fu)}function b3(n){if(n===0)return 0;let e;const t=vn(n);return rn(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:rn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function rn(n,e){return n.getExtension(e)!=null}function Zg(n){try{if(vn(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function v3(n){if(n===0)return!1;const e=vn(n);if(n===1){if(!rn(e,"OES_texture_float"))return!1}else if(!rn(e,"EXT_color_buffer_float"))return!1;return Mc(e)}function w3(n){if(n===0)return!1;const e=vn(n);if(n===1){if(!rn(e,"OES_texture_float")||!rn(e,"WEBGL_color_buffer_float"))return!1}else{if(rn(e,"EXT_color_buffer_float"))return Mc(e);const r="EXT_color_buffer_half_float";if(rn(e,r)){const s=e.getExtension(r);return $3(e,s)}return!1}return Mc(e)}function Mc(n){const e=vh(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t);const r=1,s=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,r,s,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),a}function $3(n,e){const t=vh(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r);const s=1,o=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,s,o,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(a),i}function S3(n){return n!==2?!1:vn(n).fenceSync!=null}function Yo(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&E(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ne=B();ne.registerFlag("HAS_WEBGL",()=>ne.getNumber("WEBGL_VERSION")>0);ne.registerFlag("WEBGL_VERSION",()=>Zg(2)?2:Zg(1)?1:0);ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ne.get("WEBGL_VERSION")===2);ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ne.registerFlag("WEBGL_PACK",()=>ne.getBool("HAS_WEBGL"));ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_CLIP",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_REDUCE",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_CONV_IM2COL",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>y3(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>x3(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=ne.getNumber("WEBGL_VERSION");return n===0?0:b3(n)});ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Zf());ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>v3(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ne.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>w3(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>S3(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Zf()?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ne.registerFlag("WEBGL_EXP_CONV",()=>!1);ne.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ne.getBool("IS_TEST"));ne.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ne.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ne.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ne.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(){let n,e,t,r,s,o,a,i,u,c;return B().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",i=B().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zr(n,e,t="index"){const r=Je(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / ${s}`,i=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${s}`:`index -= ${n[o]} * ${s}`;return`${a}; ${i};`}).join("")}function Hi(n,e,t="index"){const r=Je(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,i=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function T3(n,e){const t=n.length,r=n.map(o=>`${e}[${o}]`),s=new Array(t-1);s[t-2]=r[t-1];for(let o=t-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}function C3(n,e,t="index"){const r=n.map((o,a)=>a),s=T3(r,e);return s.map((o,a)=>{const i=`int ${n[a]} = ${t} / ${s[a]}`,u=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${s[a]}`:`index -= ${n[a]} * ${s[a]}`;return`${i}; ${u};`}).join("")}function wh(n){const e=Je(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function $h(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Uv=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:Wv}=bv;function N3(n,e,t){const r=[];if(n.forEach(h=>{const m=q(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`)),t.enableShapeUniforms){const{uniformShape:g}=Sh(t.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(g.length){case 1:r.push(`uniform int ${h.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${h.name}Shape;`);break}r.push(`uniform ivec2 ${h.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(h=>{r.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});const s=r.join(`
`),o=n.map(h=>E3(h,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=$t(),u=_3(i);let c,l,d=O3(i);return e.isPacked?(c=I3(e.logicalShape,a,t.enableShapeUniforms),l=A3(i)):(c=k3(e.logicalShape,a,t.enableShapeUniforms),l=R3(i)),t.packedInputs&&(d+=L3),[d,u,l,s,c,o,t.userCode].join(`
`)}function Os(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return X3(n,e);case 1:return Q3(n,e);case 2:return J3(n,e);case 3:return tL(n,e);case 4:return rL(n,e);case 5:return sL(n);case 6:return oL(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function zv(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return K3(n);case 1:return Y3(n,e);case 2:return Z3(n,e);case 3:return eL(n,e);default:return nL(n,e)}}function E3(n,e,t=!1,r){let s="";t?s+=zv(n,r):s+=Os(n,r);const o=n.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(t?s+=aL(n,e):s+=iL(n,e)),s}function I3(n,e,t){switch(n.length){case 0:return Gv();case 1:return B3(n,e,t);case 2:return H3(n,e,t);case 3:return M3(n,e,t);default:return W3(n,e,t)}}function k3(n,e,t){switch(n.length){case 0:return Gv();case 1:return V3(n,e,t);case 2:return q3(n,e,t);case 3:return U3(n,e,t);case 4:return z3(n,e,t);case 5:return G3(n,e);case 6:return j3(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function _3(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function R3(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function A3(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function O3(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${D3}
    ${F3}
    ${P3}
  `}const D3=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,F3=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,P3=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,L3=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Gv(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function B3(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function V3(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function M3(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),o=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function U3(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Hi(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=Zr(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function W3(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),o=s*Math.ceil(n[n.length-2]/2);let a=o,i="",u="b, r, c";for(let c=2;c<n.length-1;c++)a*=n[n.length-c-1],i=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+i,u=`b${c}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${u});
    }
  `}function z3(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Hi(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=Zr(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function G3(n,e){const t=Zr(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function j3(n,e){const t=Zr(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function H3(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Me(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function q3(n,e,t){return Me(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Jr(n){return`offset${n}`}function K3(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=$t();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function X3(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[s,o]=n.shapeInfo.texShape;if(s===1&&o===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Jr(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[i,u]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Y3(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,o=$t();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function Q3(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Ds(n)}
      }
    `;const s=n.shapeInfo.texShape,o=s[0],a=s[1];if(a===1&&o===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Jr(t);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Z3(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=o[0],i=o[1],u=$t();if(o!=null&&Me(t,o))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function J3(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape;if(o!=null&&Me(t,o)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const f=o[0],h=o[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${f}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:i}=Qn(t),u=a;if(u.length<t.length){const f=Fs(n,u),h=["row","col"];return`
      ${Os(f,e)}
      float ${s}(int row, int col) {
        return ${s}(${Ps(h,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Ds(n)}
      }
    `;const c=o[0],l=o[1],d=Jr(r);return l===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${r}, uv);
    }
  `:c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${r}, uv);
  }
`}function eL(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const f=t.slice(1),h=[1,2],m=Fs(n,f),g=["b","row","col"];return`
        ${zv(m,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${Ps(g,h)});
        }
      `}const i=$t();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `;const u=a[0],c=a[1],l=Math.ceil(t[2]/2),d=l*Math.ceil(t[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${d}, ${l}, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `}function tL(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[1]*t[2],a=t[2],{newShape:i,keptDims:u}=Qn(t),c=i;if(c.length<t.length){const g=Fs(n,c),y=["row","col","depth"];return`
        ${Os(g,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${Ps(y,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${Ds(n)}
      }
    `;const l=n.shapeInfo.texShape,d=l[0],f=l[1],h=n.shapeInfo.flatOffset;if(f===o&&h==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${f}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(f===a&&h==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;const m=Jr(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${m};
        vec2 uv = uvFromFlat(${d}, ${f}, index);
        return sampleTexture(${r}, uv);
      }
  `}function nL(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=$t();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,i=n.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],d=Math.ceil(o[a-1]/2);let f=d*Math.ceil(o[a-2]/2),h="int b, int row, int col",m=`b * ${f} + (row / 2) * ${d} + (col / 2)`;for(let g=2;g<a-1;g++)h=`int b${g}, `+h,f*=o[a-g-1],m=`b${g} * ${f} + `+m;return`
    vec4 ${r}(${h}) {
      int index = ${m};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${s.texture2D}(${t}, uv);
    }
  `}function rL(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[3],a=t[2]*o,i=t[1]*a,{newShape:u,keptDims:c}=Qn(t);if(u.length<t.length){const $=Fs(n,u),S=["row","col","depth","depth2"];return`
      ${Os($,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${Ps(S,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${Ds(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,f=d[0],h=d[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(h===i&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${m}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${f}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(h===o&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${f}.0);
        return sampleTexture(${r}, uv);
      }
    `;const b=Jr(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${f}, ${h}, index + ${b});
      return sampleTexture(${r}, uv);
    }
  `}function sL(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e[4],o=e[3]*s,a=e[2]*o,i=e[1]*a,{newShape:u,keptDims:c}=Qn(e);if(u.length<e.length){const g=Fs(n,u),y=["row","col","depth","depth2","depth3"];return`
      ${Os(g)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Ps(y,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${s})) +
          depth3;
        ${Ds(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,f=d[0],h=d[1];if(h===i&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(h===s&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Jr(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${s} + depth3 + ${m};
      vec2 uv = uvFromFlat(${f}, ${h}, index);
      return sampleTexture(${t}, uv);
    }
  `}function oL(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:s,keptDims:o}=Qn(e);if(s.length<e.length){const y=Fs(n,s),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${Os(y)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Ps(b,o)});
      }
    `}const a=e[5],i=e[4]*a,u=e[3]*i,c=e[2]*u,l=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Ds(n)}
      }
    `;const d=n.shapeInfo.flatOffset,f=n.shapeInfo.texShape,h=f[0],m=f[1];if(m===l&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===a&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=Jr(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${g};
      vec2 uv = uvFromFlat(${h}, ${m}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Ds(n){const e=n.name,t=q(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function aL(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=Wv(n.shapeInfo.logicalShape,e.logicalShape),u=Re(a),c=a-o;let l;const d=["x","y","z","w","u","v"];o===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map($=>`coords.${d[$+c]} = 0;`).join(`
`);let f="";a<2&&o>0?f="coords":f=n.shapeInfo.logicalShape.map(($,S)=>`coords.${d[S+c]}`).join(", ");let h="return outputValue;";const g=q(n.shapeInfo.logicalShape)===1,b=q(e.logicalShape)===1;if(o===1&&!g&&!b)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!b)a===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){const $=o-2,S=o-1;i.indexOf($)>-1&&i.indexOf(S)>-1?h="return vec4(outputValue.x);":i.indexOf($)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(S)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${r}(${f});
      ${h}
    }
  `}function iL(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!n.shapeInfo.isUniform&&i===u&&n.shapeInfo.flatOffset==null&&Me(a,o))return`
      float ${s}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=Re(u),l=Wv(n.shapeInfo.logicalShape,e.logicalShape),d=u-i;let f;const h=["x","y","z","w","u","v"];i===0?f="":u<2&&l.length>=1?f="coords = 0;":f=l.map(g=>`coords.${h[g+d]} = 0;`).join(`
`);let m="";return u<2&&i>0?m="coords":m=n.shapeInfo.logicalShape.map((g,y)=>`coords.${h[y+d]}`).join(", "),`
    float ${s}() {
      ${c} coords = getOutputCoords();
      ${f}
      return get${r}(${m});
    }
  `}function Re(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Sh(n,e,t){const{newShape:r,keptDims:s}=Qn(e),o=e.length,a=n&&o===3&&e[0]===1,i=a?e.slice(1):r,u=!n&&o>1&&!Me(e,t)&&r.length<o||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:s}}function Fs(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Ps(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(n,e,t,r){const s=t.map((l,d)=>{const f={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(f.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:f}}),o=s.map(l=>l.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=N3(s,a,e),u=t3(n.gl,i),c=n.createProgram(u);return B().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a},jv(n,e,c))}function jv(n,e,t){const r={},s={},o={},a=[];let i,u,c,l=null,d=null;d=n.getUniformLocation(t,"NAN",!1),B().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const f=!1;for(let h=0;h<e.variableNames.length;h++){const m=e.variableNames[h];r[m]=n.getUniformLocation(t,m,f),r[`offset${m}`]=n.getUniformLocation(t,`offset${m}`,f),e.enableShapeUniforms&&(s[`${m}Shape`]=n.getUniformLocation(t,`${m}Shape`,f),o[`${m}TexShape`]=n.getUniformLocation(t,`${m}TexShape`,f))}return e.enableShapeUniforms&&(i=n.getUniformLocation(t,"outShape",f),c=n.getUniformLocation(t,"outShapeStrides",f),u=n.getUniformLocation(t,"outTexShape",f)),e.customUniforms&&e.customUniforms.forEach((h,m)=>{a[m]=n.getUniformLocation(t,h.name,f)}),{uniformLocations:r,customUniformLocations:a,infLoc:l,nanLoc:d,inShapesLocations:s,inTexShapesLocations:o,outShapeLocation:i,outShapeStridesLocation:c,outTexShapeLocation:u}}function Jg(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const s=t.logicalShape,o=e[r],a=o.shape;if(!Me(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(t.isUniform&&o.isUniform)return;const i=t.texShape,u=o.isUniform?null:o.texData.texShape;if(!Me(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function cL(n,e,t,r,s){e.program.enableShapeUniforms||(Jg(e.inShapeInfos,t),Jg([e.outShapeInfo],[r]));const o=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(e.webGLProgram),B().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN),t.forEach((u,c)=>{const l=e.program.variableNames[c],d=e.uniformLocations[l],f=e.uniformLocations[`offset${l}`],h=e.inShapesLocations[`${l}Shape`],m=e.inTexShapesLocations[`${l}TexShape`];if(h){const{uniformShape:g}=Sh(e.program.packedInputs,u.shape,u.texData.texShape);switch(g.length){case 1:n.gl.uniform1iv(h,new Int32Array(g));break;case 2:n.gl.uniform2iv(h,new Int32Array(g));break;case 3:n.gl.uniform3iv(h,new Int32Array(g));break;case 4:n.gl.uniform4iv(h,new Int32Array(g));break}}if(m&&n.gl.uniform2i(m,u.texData.texShape[0],u.texData.texShape[1]),d!=null){if(u.isUniform){if(q(u.shape)<2)n.gl.uniform1f(d,u.uniformValues[0]);else{let g=u.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),n.gl.uniform1fv(d,g)}return}u.texData.slice!=null&&f!=null&&n.gl.uniform1i(f,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,d,c)}});const i=e.outShapeLocation;if(i)switch(r.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=Je(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s&&e.program.customUniforms.forEach((u,c)=>{const l=e.customUniformLocations[c],d=s[c];if(u.type==="float")n.gl.uniform1fv(l,d);else if(u.type==="vec2")n.gl.uniform2fv(l,d);else if(u.type==="vec3")n.gl.uniform3fv(l,d);else if(u.type==="vec4")n.gl.uniform4fv(l,d);else if(u.type==="int")n.gl.uniform1iv(l,d);else if(u.type==="ivec2")n.gl.uniform2iv(l,d);else if(u.type==="ivec3")n.gl.uniform3iv(l,d);else if(u.type==="ivec4")n.gl.uniform4iv(l,d);else throw Error(`uniform type ${u.type} is not supported yet.`)}),n.executeProgram()}function lL(n,e,t){let r="";e.concat(t).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const u=a.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:d}=Sh(n.packedInputs,a.shape,u);let f="",h="",m="";if(l.length===1&&n.packedInputs){const I=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];f=`${I[0]>1}_${I[1]>1}`}else if(l.length===2&&!n.packedInputs)h=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const I=Je(l);m=`${I[0]===u[1]}_${I[I.length-1]===u[1]}`}const g=a.shape.length,y=l.length===2&&Me(a.shape,u),b=q(a.shape)===1,$=$o(a.shape,t.shape),S=!n.packedInputs&&g===t.shape.length&&Me(u,t.texData.texShape),C=n.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${g}_${S}_${c?d:""}_${l.length}_${b}_${$}_${y}_${f}_${h}_${m}_${C}_${i}`}else{const u=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${u}_${i}`}});const s=n.userCode;let o=n.constructor.name;return o+="_"+r+"_"+s+`${B().getNumber("WEBGL_VERSION")}`,o}function St(n){return B().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=_o.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$t();this.outputShape=e,this.enableShapeUniforms=St(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hi(["r","c","d"],e):Zr(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=_o.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$t();this.outputShape=e,this.enableShapeUniforms=St(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hi(["r","c","d"],e):Zr(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pL{constructor(e){this.variableNames=["A"],this.outTexUsage=Ut.DOWNLOAD;const t=$t();this.outputShape=e,this.userCode=`
      ${Uv}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ut.DOWNLOAD;const t=$t();this.outputShape=e,this.userCode=`
      ${Uv}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mL={R:0,G:1,B:2,A:3};class ey{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=$t();this.outputShape=e,this.enableShapeUniforms=St(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<r.length;i++){const u=r[i];a+=`
          if(offset == ${i}) {
            result = values[${mL[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?$h():wh(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${a}
        }
        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gL{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=$t();this.outputShape=e,this.enableShapeUniforms=St(this.outputShape.length);let s="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const u=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?$h():wh(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(n){const e=$t(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return e3(n,t)}function xL(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return o3(n,e)}function bL(n){const e=new Uint16Array([0,1,2,2,1,3]);return a3(n,e)}function Qo(n,e,t,r,s,o){u3(e,t);const a=i3(n),i=n.TEXTURE_2D;return J(n,()=>n.bindTexture(i,a)),J(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),J(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),J(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),J(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),B().getNumber("WEBGL_VERSION")===1?J(n,()=>n.texImage2D(i,0,r,e,t,0,s,o,null)):J(n,()=>n.texStorage2D(i,1,r,e,t)),J(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function Hv(n){return n.internalFormatFloat}function vL(n,e,t,r){const[s,o]=Xo(e,t);return Qo(n,s,o,Hv(r),r.textureFormatFloat,n.FLOAT)}function qv(n){return n.internalFormatHalfFloat}function wL(n,e,t,r){const[s,o]=Xo(e,t);return Qo(n,s,o,qv(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Kv(n){return n.downloadTextureFormat}function $L(n,e,t,r){const[s,o]=Xo(e,t);return Qo(n,s,o,Kv(r),n.RGBA,n.UNSIGNED_BYTE)}function Xv(n){return n.internalFormatPackedFloat}function SL(n,e,t,r){const[s,o]=As(e,t);return Qo(n,s,o,Xv(r),n.RGBA,n.FLOAT)}function Yv(n){return n.internalFormatPackedHalfFloat}function TL(n,e,t,r){const[s,o]=As(e,t);return Qo(n,s,o,Yv(r),n.RGBA,r.textureTypeHalfFloat)}function CL(n,e,t){return J(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Yg(n,e,"clipSpacePos",t,3,20,0)&&Yg(n,e,"uv",t,2,20,12)}function NL(n,e,t,r,s,o){J(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,i,u;s instanceof Uint8Array?(a=new Uint8Array(t*r*4),i=n.UNSIGNED_BYTE,u=n.RGBA):(a=new Float32Array(t*r*4),i=n.FLOAT,u=o.internalFormatPackedFloat),a.set(s),B().getNumber("WEBGL_VERSION")===2?J(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,i,a)):J(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,t,r,0,n.RGBA,i,a)),J(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function EL(n,e,t){J(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?B().getNumber("WEBGL_VERSION")===2?J(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):J(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):B().getNumber("WEBGL_VERSION")===2?J(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):J(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),J(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function IL(n,e,t,r){const s=n.createBuffer();J(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const i=4*4*e*t;return J(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),J(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),J(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function kL(n,e,t){const r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function _L(n,e,t,r){const[s,o]=Xo(e,t),a=4,i=new Uint8Array(qP(e*t,a));return J(n,()=>n.readPixels(0,0,s,o,r.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function RL(n,e,t,r,s,o,a,i){const u=n,c=new Float32Array(KP(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function AL(n,e,t){const r=new Float32Array(e*t*4);return J(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pu{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=B().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,GP(t,e)):this.gl=vn(t),e=this.gl,B().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>J(o,()=>o.createVertexArray()),this.bindVertexArray=a=>J(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>J(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>J(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>J(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>J(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>J(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>J(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),B().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=_a(this.gl,o),rn(this.gl,a))this.textureHalfFloatExtension=_a(this.gl,a);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),rn(this.gl,s))this.colorBufferHalfFloatExtension=_a(this.gl,s);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",rn(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(rn(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=xL(this.gl),this.indexBuffer=bL(this.gl),this.framebuffer=c3(this.gl),this.textureConfig=vh(this.gl,this.textureHalfFloatExtension)}get debug(){return B().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;J(e,()=>e.finish()),J(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),J(e,()=>e.deleteFramebuffer(this.framebuffer)),J(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),J(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),J(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),vL(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),wL(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),$L(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),EL(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,s){this.throwIfDisposed(),NL(this.gl,e,t,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),TL(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),SL(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Qg(this.gl,this.framebuffer),this.outputTexture=null),J(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>_L(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,s,o,a){return RL(this.gl,e,t,r,s,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return kL(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const s=IL(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(B().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,o=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=s.clientWaitSync(o,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=o}else B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>AL(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=yL(t));const r=r3(t);J(t,()=>t.attachShader(r,this.vertexShader)),J(t,()=>t.attachShader(r,e)),s3(t,r);let s;return s=Object.assign(r,{vao:this.createVertexArray()}),this.bindVertexArray(s.vao),J(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(CL(t,s,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Au(t,s),this.setProgram(s),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(J(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&Au(this.gl,this.program)),J(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?d3(this.gl,e,t):f3(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),J(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),p3(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[s,o]=As(t,r);this.setOutputMatrixTextureDriver(e,s,o)}setOutputMatrixWriteRegion(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Au(this.gl,this.program),Ra(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}J(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),J(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=_a(this.gl,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(e){return H(this,null,function*(){return yield Ju(()=>this.disposed||this.isQueryAvailable(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=OL(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in B().platform&&(r=B().platform.setTimeoutCustom.bind(B().platform)),Ju(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Ou(this.gl,e,this.framebuffer),this.debug&&Ra(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Ou(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ra(this.gl)):Qg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const s=this.gl;Ou(s,e,this.framebuffer),this.debug&&Ra(s),this.outputTexture=e,J(s,()=>s.viewport(0,0,t,r)),J(s,()=>s.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,s){this.throwIfDisposed(),J(this.gl,()=>this.gl.scissor(e,t,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function OL(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jt(n){return(e,t,r,s,o)=>{const a=xe(e,t),i=a.length,u=Je(a),c=q(a),l=On(o,c),d=e.length,f=t.length,h=Je(e),m=Je(t),g=$o(e,a),y=$o(t,a);if(g.length+y.length===0)for(let b=0;b<l.length;++b)l[b]=n(r[b%r.length],s[b%s.length]);else for(let b=0;b<l.length;++b){const $=$i(b,i,u),S=$.slice(-d);g.forEach(L=>S[L]=0);const C=Qa(S,d,h),I=$.slice(-f);y.forEach(L=>I[L]=0);const A=Qa(I,f,m);l[b]=n(r[C],s[A])}return[l,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=Vo([0],t),[o,a]=jt((i,u)=>i!==u?1:0)(e,[],n,s,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PL=jt((n,e)=>n+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(n,e,t,r,s){const o=q(r),a=Xn(s,t);for(let i=0;i<n.length;i++){const u=n[i];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(o>0?a[u]+=e[i]:a[u]+=1)}return a}function BL(n,e,t,r=!1){const s=n.shape[0],o=n.shape[1],a=Ue([s,t],e.dtype);for(let i=0;i<s;i++)for(let u=0;u<o;u++){const c=n.get(i,u);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(r?a.set(1,i,c):e.size>0?a.set(a.get(i,c)+e.get(i,u),i,c):a.set(a.get(i,c)+1,i,c))}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gr(n){return(e,t,r)=>{const s=On(t,e.length);for(let o=0;o<e.length;++o)s[o]=n(e[o],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VL=gr(n=>Math.ceil(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(n,e,t,r){const s=ot(t,q(e));if(r&&t!=="string"){let o=0;n.forEach(a=>{const i=q(a.shape);s.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=t==="string"?Io(a.vals):a.vals;let u=0;for(let c=0;c<a.shape[0];++c){const l=c*e[1]+o;for(let d=0;d<a.shape[1];++d)s[l+d]=i[u++]}o+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UL=jt((n,e)=>n===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WL=gr(n=>Math.exp(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zL=gr(n=>Math.expm1(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GL=gr(n=>Math.floor(n));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(n,e,t,r,s,o,a,i,u){const c=Ue([r,o],t);for(let l=0;l<r;l++){const d=[];let f=0;for(let h=0;h<s;h++){const m=n[l*s+h];f+=m*a[h],d.push(m)}if(f<0||f>=u/o)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<o;h++)c.values[l*o+h]=e.get(...e.indexToLoc(f*o+h))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(n,e,t){const r=Ue(t,n.dtype);for(let s=0;s<r.size;++s){const a=r.indexToLoc(s).slice(),i=a[0],u=a[2],c=e.locToIndex([i,u]);a[2]=e.values[c];const l=n.locToIndex(a);0<=l&&l<n.values.length&&(r.values[s]=n.values[l])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qL=jt((n,e)=>n>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KL=jt((n,e)=>n>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XL=jt((n,e)=>n<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YL=jt((n,e)=>n<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(n,e,t){const r=(e-n)/(t-1),s=Xn(t,"float32");s[0]=n;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZL=gr(n=>Math.log(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(n,e,t,r){const s=On(r,q(t));for(let o=0;o<s.length;++o){const a=o*e;let i=n[a];for(let u=0;u<e;++u){const c=n[a+u];(Number.isNaN(c)||c>i)&&(i=c)}s[o]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eB=jt((n,e)=>Math.max(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tB=jt((n,e)=>Math.min(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qv=jt((n,e)=>n*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(n,e,t){const r=Kr(-1,t);return Qv([],e,r,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rB=jt((n,e)=>n!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n,e,t,r,s){const o=e.length,a=q(e),i=Je(e),u=Je(s),c=On(t,q(s));for(let l=0;l<a;++l){const d=$i(l,o,i),f=new Array(d.length);for(let m=0;m<f.length;m++)f[m]=d[r[m]];const h=Qa(f,o,u);c[h]=n[l]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n,e,t,r){const[s,o]=Vn(n,r),a=bn(e,"int32"),i=Xn(q(s),a),u=q(o);for(let c=0;c<i.length;++c){const l=c*u;let d=1;for(let f=0;f<u;++f)d*=t[l+f];i[c]=d}return{outVals:i,outShape:s,outDtype:a}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const o=$i(s,e.length,Je(e)).join(",");throw new Error(`indices[${o}] = ${r} is not in [0, ${t})`)}})}function iB(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let o=1;o<r.length;++o)if(r[o-1]>r[o])throw new Error("Ragged splits must be sorted in ascending order")}}function uB(n,e,t,r){const s=[];let o=0;const a=e.length-1+t.length,i=new Array(a).fill(null).map(()=>[0]);iB(t,r);let u=1;for(let c=0;c<e.length-1;++c){u*=e[c];const l=e[c+1];for(let d=1;d<u+1;++d)i[c].push(d*l)}for(let c=0;c<n.length;++c){let l=n[c],d=n[c]+1;for(let f=0;f<t.length;++f){const h=t[f],m=f+e.length-1;if(m>=0){const g=i[m],y=g[g.length-1]-h[l];for(let b=l;b<d;++b)i[m].push(h[b+1]+y)}l=h[l],d=h[d]}d!==l&&(s.push([l,d]),o+=d-l)}return{outSplits:i,valueSlices:s,numValues:o}}function cB(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=ot("int32",r);e.push(s),n[t].forEach((o,a)=>s[a]=o)}return e}function ty(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function lB(n,e,t,r,s,o){const a=ty(e,2)[1],i=ty(o,2)[1];let u=0;for(const c of t)for(let l=c[0];l<c[1];++l){for(let d=0;d<r;++d)s[u*i+d]=n[l*a+d];++u}}function dB(n,e,t,r,s){const o=e.slice();o[0]=s;const a=ot(t,q(o)),i=n.length,u=i===0?0:i/e[0];return lB(n,e,r,u,a,o),[a,o]}function fB(n,e,t,r,s,o,a,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(aB(o,a,u),r.length===0)throw new Error("params.rank must be nonzero");const c=r[0],{outSplits:l,valueSlices:d,numValues:f}=uB(o,a,n,c),h=cB(l),m=dB(t,r,s,d,f);return[h,m[0],m[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ny=2147483647;function pB(n,e,t,r,s,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,u=s.length===0,c=a.length===0,l=[];i||l.push(e[0]),u||l.push(s[0]),c||l.push(a[0]);for(let y=1;y<l.length;++y)if(l[y]!==l[y-1])throw new Error("starts, limits, and deltas must have the same shape");const d=l.length===0?1:l[0],f=ot("int32",d+1);f[0]=0;for(let y=0;y<d;++y){const b=i?n[0]:n[y],$=u?r[0]:r[y],S=c?o[0]:o[y];if(S===0)throw new Error("Requires delta != 0");let C;if(S>0&&$<b||S<0&&$>b)C=0;else if(C=Math.ceil(Math.abs(($-b)/S)),C>ny)throw new Error(`Requires ((limit - start) / delta) <= ${ny}`);f[y+1]=f[y]+C}const h=f[d],m=ot(t,h);let g=0;for(let y=0;y<d;++y){const b=f[y+1]-f[y];let $=i?n[0]:n[y];const S=c?o[0]:o[y];for(let C=0;C<b;++C)m[g++]=$,$+=S}return[f,m]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qt=yn;class pi{constructor(e,t,r,s,o,a,i,u,c,l){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=B1(l),this.raggedRank=V1(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===qt.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===qt.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case qt.VALUE_ROWIDS:return pi.getMaxWidthValueRowID(t);case qt.ROW_SPLITS:return pi.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${qt[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const o=e[s+1]-e[s];o>r&&(r=o)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],o=0;for(let a=1;a<t;++a){const i=e[a];i!==s&&(s=i,o=Math.max(a-r,o),r=a)}return Math.max(t-r,o)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return sy(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;M1(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=L1(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),o=[];let a=0;for(let i=0;i<s;++i,a+=t)o.push(a);for(let i=s;i<e;++i)o.push(-1);return E(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,r,s){const o=e.length,a=[];for(let i=0;i<o-1;++i){const u=e[i+1]-e[i];let c=Math.min(s,u),l=t[i];l===-1&&(c=0);for(let d=0;d<c;++d)a.push(l),l+=r;for(let d=0;d<u-c;++d)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,r,s){const o=e.length,a=[];if(o===0)return[];let i=0,u=e[0];if(u>=t.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${t.length}`);let c=t[u];a.push(c);for(let l=1;l<o;++l){const d=e[l];if(d===u)c>=0&&(++i,i<s?c+=r:c=-1);else{if(i=0,u=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);c=t[d]}a.push(c)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,r,s){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case qt.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,r,s);case qt.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,r,s);default:throw new Error(`Unsupported partition type: ${qt[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case qt.FIRST_DIM_SIZE:return e[0];case qt.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case qt.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${qt[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const o=sy(r,!1),a=ot(this.valuesDType,q(o));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(t,s[0],r[0]);for(let c=1;c<=this.raggedRank;++c)u=this.calculateOutputIndex(c-1,u,s[c],r[c]);this.setOutput(this.raggedRank,u,a,o)}return[o,a]}setOutput(e,t,r,s){if(r.length===0)return;const o=this.values,a=r;let i=s.slice();i=i.slice(e+1);const u=q(i),c=t.length;let l=this.defaultValue;if(l.length!==u&&l.length!==1){const m=this.defaultValueShape;ie(()=>{const g=z(l,m);l=ds(g,i).dataSync()})}let d=0,f=0,h=0;for(let m=0;m<=c;++m){let g=m<c?t[m]:-1;if(g===h){++h;continue}if(f<h){const y=o.subarray(d*u),b=a.subarray(f*u),$=(h-f)*u;ry(b,y,$)}if(m>=c){const y=r.length;g=Math.floor(y/u)}if(g>h)if(this.defaultValue.length===1)a.subarray(h*u,g*u).fill(this.defaultValue[0]),h=g;else for(;g>h;){const y=a.slice(h*u);ry(y,l,u),++h}g<0?(d=m+1,f=h):(d=m,f=h,h=f+1)}}}function ry(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function sy(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function hB(n,e,t,r,s,o,a,i,u,c){return new pi(n,e,t,r,s,o,a,i,u,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(n,e,t,r){const s=n===e,o=n<e&&t<0,a=e<n&&t>1;if(s||o||a)return Xn(0,r);const i=Math.abs(Math.ceil((e-n)/t)),u=Xn(i,r);e<n&&t===1&&(t=-1),u[0]=n;for(let c=1;c<u.length;c++)u[c]=u[c-1]+t;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gB=gr(n=>1/Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n,e,t,r,s,o,a,i,u,c){const l=[r/s,s],d=n.values,f=e.values;if(r===0)return Ue(t,e.dtype);const h=Ue(l,e.dtype);typeof u=="string"||typeof u=="number"?h.values.fill(u):typeof u=="boolean"&&h.values.fill(+u);for(let m=0;m<o;m++){const g=[];let y=0;for(let b=0;b<a;b++){const $=d[m*a+b];g.push($),y+=$*i[b]}if(y<0||y>=r/s)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let b=0;b<s;b++)c?h.values[y*s+b]+=f[m*s+b]:h.values[y*s+b]=e.rank===0?f[0]:f[m*s+b]}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xB=gr(n=>1/(1+Math.exp(-n)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n,e,t,r,s){const o=lh(r,e,t),a=q(t),i=Je(r);if(o){const d=dh(e,i);return s==="string"?n.slice(d,d+a):n.subarray(d,d+a)}const u=s==="string"?Io(n):n,c=Ue(r,s,u),l=Ue(t,s);for(let d=0;d<l.size;++d){const f=l.indexToLoc(d),h=f.map((m,g)=>m+e[g]);l.set(c.get(...h),...f)}return s==="string"?xv(l.values):l.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n,e,t,r,s,o,a){const i=e[0],u=o[0],c=new Array(u),l=new Array(i),d=e[1];if(u===0){if(i!==0)throw new Error(sv(i));const y=ot(t,0),b=ot(s,0);return[y,[0,d],b,c,l]}let f=!0,h=0;const m=new Array(u).fill(0);for(let y=0;y<i;++y){const b=n[y*d];if(b<0)throw new Error(ov(y,b));if(b>=u)throw new Error(av(y,b,u));++m[b],f=f&&b>=h,h=b}let g=!0;for(let y=0;y<u;++y){const b=m[y]===0;c[y]=b,g=g&&!b,m[y]=Math.max(m[y],1),y>0&&(m[y]+=m[y-1])}if(g&&f){const y=n,b=r;for(let $=0;$<i;++$)l[$]=$;return[y,[i,d],b,c,l]}else{const y=m[u-1],b=ot(t,y*d),$=ot(s,y),S=new Array(u).fill(0);for(let C=0;C<i;++C){const I=n[C*d],A=S[I],L=(I===0?0:m[I-1])+A;S[I]++;for(let F=0;F<d;++F)b[L*d+F]=n[C*d+F];$[L]=r[C],l[C]=L}for(let C=0;C<u;++C)if(S[C]===0){const A=C===0?0:m[C-1];b[A*d+0]=C;for(let L=1;L<d;++L)b[A*d+L]=0;$[A]=a}return[b,[y,d],$,c,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n,e,t,r,s){const o=q(r),a=e[0],i=s.length,u=[];let c=1,l=-1;for(let y=0;y<i;++y){const b=s[y];if(b===-1){if(l!==-1)throw new Error(iv(l,y));l=y,u.push(1)}else{if(b<0)throw new Error(uv(y,b));c*=b,u.push(b)}}if(l!==-1){if(c<=0)throw new Error(cv());const y=Math.trunc(o/c);if(c*y!==o)throw new Error(lv(r,u));u[l]=y}if(q(u)!==o)throw new Error(dv(r,u));const f=r.length,h=[];if(f>0){h[f-1]=1;for(let y=f-2;y>=0;--y)h[y]=h[y+1]*r[y+1]}const m=[];if(i>0){m[i-1]=1;for(let y=i-2;y>=0;--y)m[y]=m[y+1]*u[y+1]}const g=ot(t,a*i);for(let y=0;y<a;++y){let b=0;for(let $=0;$<f;++$)b+=n[y*f+$]*h[$];for(let $=0;$<i;++$)g[y*i+$]=Math.trunc(b/m[$]),b%=m[$]}return[g,[a,i],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n,e,t,r,s,o=!1,a=0){const i=r.length,u=[e[0],n.length/e[0]],c=u[1],d=i>0?s[i-1]+1:0;if(d<0)throw new Error(Nc());const f=e.slice();f[0]=d;const h=f.reduce((S,C)=>S*C,1),m=ot(t,h);if(i===0)return d>0&&m.fill(a),[m,f];if(d<=0)throw new Error(Nc());let g=0,y=1,b=0,$=s[g];for(;;){let S=0;if(y<i){if(S=s[y],$===S){++y;continue}if($>=S)throw new Error(fv())}if($<0||$>=d)throw new Error(pv($,d));$>b&&m.fill(a,b*c,$*c);for(let C=g;C<y;++C){const I=r[C];if(I<0||I>=u[0])throw new Error(hv(C,r[C],u[0]));for(let A=0;A<c;A++)m[$*c+A]+=n[I*c+A]}if(o)for(let C=0;C<c;C++)m[$*c+C]/=y-g;if(g=y,++y,b=$+1,$=S,y>i)break}return b<d&&m.fill(a,b*c,d*c),[m,f]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SB=gr(n=>Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TB=jt((n,e)=>{const t=n-e;return t*t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n,e,t,r){const s=Ue(n,e.dtype);for(let o=0;o<s.size;o++){const a=s.indexToLoc(o),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*t[u]+r[u];s.set(e.get(...i),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NB{constructor(e,t,r,s,o,a){this.separator=qn(e),this.nGramWidths=t,this.leftPad=qn(r),this.rightPad=qn(s),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,o,a){for(let i=0;i<o;++i){const u=this.getPadWidth(a),c=Math.max(0,u-i),l=Math.max(0,u-(o-(i+1))),d=a-(c+l),f=t+(c>0?0:i-u);let h=0;h+=c*this.leftPad.length;for(let $=0;$<d;++$)h+=e[f+$].length;h+=l*this.rightPad.length;const m=c+l+d-1;h+=m*this.separator.length,r[s+i]=new Uint8Array(h);const g=r[s+i];let y=0;const b=$=>$.forEach(S=>g[y++]=S);for(let $=0;$<c;++$)b(this.leftPad),b(this.separator);for(let $=0;$<d-1;++$)b(e[f+$]),b(this.separator);if(d>0){b(e[f+d-1]);for(let $=0;$<l;++$)b(this.separator),b(this.rightPad)}else{for(let $=0;$<l-1;++$)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<s;++c){let l=t[c]>=u;if(l=l&&t[c]<=r,!l)throw new Error(`Invalid split value ${t[c]}, must be in [${u}, ${r}]`);u=t[c]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const o=s-1,a=ot("int32",s);if(r===0||s===0){const u=new Array(r);for(let c=0;c<=o;++c)a[c]=0;return[u,a]}a[0]=0;for(let u=1;u<=o;++u){const c=t[u]-t[u-1];let l=0;this.nGramWidths.forEach(d=>{l+=this.getNumNGrams(c,d)}),this.preserveShort&&c>0&&l===0&&(l=1),a[u]=a[u-1]+l}const i=new Array(a[o]);for(let u=0;u<o;++u){const c=t[u];let l=a[u];if(this.nGramWidths.forEach(d=>{const f=t[u+1]-t[u],h=this.getNumNGrams(f,d);this.createNGrams(e,c,i,l,h,d),l+=h}),this.preserveShort&&l===a[u]){const d=t[u+1]-t[u];if(d===0)continue;const f=d+2*this.padWidth,h=1;this.createNGrams(e,c,i,l,h,f)}}return[i,a]}}function EB(n,e,t,r,s,o,a,i){return new NB(t,r,s,o,a,i).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(n,e,t,r){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)r.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=n.indexOf(o);for(;a!==-1;){const i=n.subarray(0,a);(!t||i.length!==0)&&r.push(i),n=n.subarray(a+1),a=n.indexOf(o)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const a=n.subarray(s,o);(!t||a.length!==0)&&r.push(a),s=o+1}}function kB(n,e,t){const r=n.length,s=[];let o=0,a=0;const i=new Array(r);for(let f=0;f<r;++f){const h=s.length;IB(n[f],e,t,s);const m=s.length-h;i[f]=m,o+=m,a=Math.max(a,m)}const u=ot("int32",o*2),c=new Array(o),l=[r,a];let d=0;for(let f=0;f<r;++f)for(let h=0;h<i[f];++h)u[d*2]=f,u[d*2+1]=h,c[d]=s[d],++d;return[u,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n,e){const t=ot("int32",n.length);for(let r=0;r<n.length;++r)t[r]=Ox(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RB=jt((n,e)=>n-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=Ue(t,n.dtype);for(let s=0;s<r.values.length;++s){const o=r.indexToLoc(s),a=new Array(n.rank);for(let u=0;u<a.length;u++)a[u]=o[u]%n.shape[u];const i=n.locToIndex(a);r.values[s]=n.values[i]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const so=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function Zv(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const i=r-t+1,u=e-t+1,c=Math.log(i),l=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*l*(i-l)/i)*Math.sign(u-i/2),f=Math.max(t,Math.floor(e-u*l/i+d)),h=Math.min(r,Math.floor(e+(i-u)*l/i+d));Zv(n,e,f,h)}const s=n[e];let o=t,a=r;for(Gn(n,t,e),so(n[r],s)>0&&Gn(n,t,r);o<a;){for(Gn(n,o,a),o++,a--;so(n[o],s)<0;)o=o+1;for(;so(n[a],s)>0;)a=a-1}so(n[t],s)===0?Gn(n,t,a):(a=a+1,Gn(n,a,r)),a<=e&&(t=a+1),e<=a&&(r=a-1)}}function OB(n,e,t,r,s){const o=e[e.length-1],[a,i]=[n.length/o,o],u=On(t,a*r),c=On("int32",a*r);for(let d=0;d<a;d++){const f=d*i,h=n.subarray(f,f+i);let m=new Array(h.length);h.forEach(($,S)=>m[S]={value:$,index:S}),r<m.length&&(Zv(m,r),m=m.slice(0,r)),s&&m.sort(so);const g=d*r,y=u.subarray(g,g+r),b=c.subarray(g,g+r);for(let $=0;$<r;$++)y[$]=m[$].value,b[$]=m[$].index}const l=e.slice();return l[l.length-1]=r,[Ue(l,t,u),Ue(l,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(n,e,t,r){const s=He(e,t)[0],o=[1,t[0],1];for(let m=0;m<s;m++)o[0]*=t[m];o[1]=t[s];for(let m=s+1;m<t.length;m++)o[2]*=t[m];const a={},i=new Int32Array(t[s]),u=new gs(o,r,n),c=[],l=o[0]===1&&o[2]===1;for(let m=0;m<t[s];m++){let g;if(l)g=n[m].toString();else{const y=[];for(let b=0;b<o[0];b++)for(let $=0;$<o[2];$++)y.push(u.get(b,m,$));g=y.join(",")}if(a[g]!==void 0)i[m]=a[g];else{const y=Object.keys(a).length;a[g]=y,i[m]=y,c.push(m)}}const d=o.slice();d[1]=Object.keys(a).length;const f=new gs(d,r);c.forEach((m,g)=>{for(let y=0;y<o[0];y++)for(let b=0;b<o[2];b++)f.set(u.get(y,m,b),y,g,b)});const h=t.slice();return h[s]=d[1],{outputValues:f.values,outputShape:h,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB=Object.freeze(Object.defineProperty({__proto__:null,addImpl:PL,bincountImpl:LL,bincountReduceImpl:BL,castImpl:FL,ceilImpl:VL,concatImpl:ML,equalImpl:UL,expImpl:WL,expm1Impl:zL,floorImpl:GL,gatherNdImpl:jL,gatherV2Impl:HL,greaterEqualImpl:KL,greaterImpl:qL,lessEqualImpl:YL,lessImpl:XL,linSpaceImpl:QL,logImpl:ZL,maxImpl:JL,maximumImpl:eB,minimumImpl:tB,multiplyImpl:Qv,negImpl:nB,notEqualImpl:rB,prodImpl:oB,raggedGatherImpl:fB,raggedRangeImpl:pB,raggedTensorToTensorImpl:hB,rangeImpl:mB,rsqrtImpl:gB,scatterImpl:yB,sigmoidImpl:xB,simpleAbsImpl:DL,sliceImpl:bB,sparseFillEmptyRowsImpl:vB,sparseReshapeImpl:wB,sparseSegmentReductionImpl:$B,sqrtImpl:SB,squaredDifferenceImpl:TB,stridedSliceImpl:CB,stringNGramsImpl:EB,stringSplitImpl:kB,stringToHashBucketFastImpl:_B,subImpl:RB,tileImpl:AB,topKImpl:OB,transposeImpl:sB,uniqueImpl:DB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:PB,bincountImpl:Jv,bincountReduceImpl:LB,castImpl:BB,ceilImpl:VB,concatImpl:MB,equalImpl:UB,expImpl:WB,expm1Impl:zB,floorImpl:GB,gatherNdImpl:jB,gatherV2Impl:HB,greaterImpl:qB,greaterEqualImpl:KB,lessImpl:XB,lessEqualImpl:YB,linSpaceImpl:QB,logImpl:ZB,maxImpl:JB,maximumImpl:e4,minimumImpl:t4,multiplyImpl:n4,negImpl:r4,notEqualImpl:s4,prodImpl:o4,raggedGatherImpl:a4,raggedRangeImpl:i4,raggedTensorToTensorImpl:u4,rangeImpl:c4,rsqrtImpl:l4,scatterImpl:d4,sigmoidImpl:f4,simpleAbsImpl:ew,sliceImpl:p4,sparseFillEmptyRowsImpl:h4,sparseReshapeImpl:m4,sparseSegmentReductionImpl:tw,sqrtImpl:g4,stridedSliceImpl:y4,stringNGramsImpl:x4,stringSplitImpl:b4,stringToHashBucketFastImpl:v4,subImpl:w4,tileImpl:$4,topKImpl:S4,transposeImpl:Th,uniqueImpl:T4}=FB;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nw(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function vt(n,e){return e===1?[n]:nw(n,e)}function C4(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N4{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=St(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=vt("rc",this.rank),r=Re(this.rank),s=this.getOutOfBoundsCondition(t),o=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let o=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rw{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=St(this.outputShape.length);let r="";for(let s=0;s<4;s++){let o="thisRC = rc;";s%2===1&&(o+="thisRC.z += 1;"),s>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${E4(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?$h():wh(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function E4(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?C3(["r","c","d"],"inputShape"):Zr(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I4{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,r){const s=ay(t,r),o=iy(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=oy(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const u=this.freeTextures[o].shift();return this.usedTextures[o].push(u),u}let i;return s===st.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===st.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===st.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===st.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===st.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,r,s){if(this.freeTextures==null)return;const o=ay(r,s),a=iy(t,o,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=oy(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=B().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[a],l=c.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function k4(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function oy(n,e,t,r,s){const o=_4(e,r);let a;if(s){const[u,c]=As(n[0],n[1]);a=u*c}else{const[u,c]=Xo(n[0],n[1]);a=u*c}const i=k4(t,o);return a*i}function _4(n,e){switch(n){case st.PACKED_2X2_FLOAT32:return Xv(e);case st.PACKED_2X2_FLOAT16:return Yv(e);case st.UNPACKED_FLOAT32:return Hv(e);case st.UNPACKED_FLOAT16:return qv(e);case st.PACKED_4X1_UNSIGNED_BYTE:return Kv(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function R4(n){return B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?st.PACKED_2X2_FLOAT32:st.UNPACKED_FLOAT32:n?st.PACKED_2X2_FLOAT16:st.UNPACKED_FLOAT16}function ay(n,e){if(n===Ut.UPLOAD)return st.PACKED_2X2_FLOAT32;if(n===Ut.RENDER||n==null)return R4(e);if(n===Ut.DOWNLOAD||n===Ut.PIXELS)return st.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function iy(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=St(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const ln="if (isnan(x)) return x;",A4="return x;",uy="return abs(x);",O4="return (x >= 0.0) ? x : (exp(x) - 1.0);",D4=ln+`
  return (x < 0.0) ? 0.0 : x;
`,F4=ln+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,tr="return x;",P4="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L4="return x;",B4=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,V4=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,M4=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,U4="return 1.0 / (1.0 + exp(-1.0 * x));";class or{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=St(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W4{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=St(this.outputShape.length);const t=e.length,r=vt("rc",t),s=Re(t),o=C4(t,r),a=r.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z4=jp,G4=1e-7,j4=1e-4,Da={};function H4(n){return n in Da||(Da[n]={}),Da[n]}const q4=B().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),K4=600;function X4(){return B().global.screen==null?1024:B().global.screen.height*B().global.screen.width*window.devicePixelRatio*K4/1024/1024}class qi extends rl{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!B().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Pu)t=e;else{const r=vn(B().getNumber("WEBGL_VERSION"),e);t=new Pu(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=vn(B().getNumber("WEBGL_VERSION"));t=new Pu(r),this.binaryCache=H4(B().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new I4(this.gpgpu),this.numMBBeforeWarning=X4(),this.texData=new sx(this,hn())}nextDataId(){return qi.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,s,o,a){const i=this.makeTensorInfo(t,r),u=this.texData.get(i.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,o]},u.texShape=[s,o];const c=Aa(t),l=new ey(c,!1,a),d=this.runWebGLProgram(l,[i],r,[[s,o]]);return d.shape=t,u.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(e,t,r){if((B().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||B().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:r,values:e,usage:Ut.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,s,o){if(B().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:t,usage:Ut.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:o,slice:a,shape:i,isPacked:u}=t;if(a!=null){let f;u?f=new or(i,tr):f=new kn(i,tr);const h=this.runWebGLProgram(f,[{dataId:e,shape:i,dtype:s}],s),m=this.readSync(h.dataId);return this.disposeIntermediateTensorInfo(h),m}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const c=this.activeTimers!=null;let l;c&&(l=Yt());let d;if(s==="complex64"){const f=this.readSync(o.real.dataId),h=this.readSync(o.imag.dataId);d=Cc(f,h)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Yt()-l),this.convertAndCacheOnCPU(e,d)}read(e){return H(this,null,function*(){if(this.pendingRead.has(e)){const m=this.pendingRead.get(e);return new Promise(g=>m.push(g))}const t=this.texData.get(e),{values:r,shape:s,slice:o,dtype:a,complexTensorInfos:i,isPacked:u}=t;if(o!=null){let m;u?m=new or(s,tr):m=new kn(s,tr);const g=this.runWebGLProgram(m,[{dataId:e,shape:s,dtype:a}],a),y=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(r!=null)return this.convertAndCacheOnCPU(e);if(B().getBool("DEBUG")&&!B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&B().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,l;if(a!=="complex64"&&B().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const m=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(m.texture.texture,...ka(s))}this.pendingRead.set(e,[]),a!=="complex64"&&(yield this.gpgpu.createAndWaitForFence());let d;if(a==="complex64"){const m=yield Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),g=m[0],y=m[1];d=Cc(g,y)}else if(c==null)d=this.getValuesFromTexture(e);else{const m=q(s);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,m)}if(l!=null&&this.disposeIntermediateTensorInfo(l),c!=null){const m=this.gpgpu.gl;J(m,()=>m.deleteBuffer(c))}const f=this.convertAndCacheOnCPU(e,d),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(m=>m(f)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&hn().removeDataId(e,this),this.pendingDeletes--),f})}readToGPU(e,t={}){const r=this.texData.get(e),{values:s,shape:o,slice:a,dtype:i,isPacked:u,texture:c}=r;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let h;u?h=new or(o,tr):h=new kn(o,tr);const m=this.runWebGLProgram(h,[{dataId:e,shape:o,dtype:i}],i),g=this.readToGPU(m,t);return this.disposeIntermediateTensorInfo(m),g}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),d=hn().makeTensorFromTensorInfo(l),f=this.texData.get(l.dataId);return Object.assign({tensorRef:d},f.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>Pr(s));return Ue(e.shape,e.dtype,r)}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ue(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!ZP(r))throw B().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:s}=this.texData.get(e),o=q(t);if(B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const f=this.decode(e),h=this.texData.get(f.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(h.texture.texture,...ka(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(f),m}const a=B().getBool("WEBGL_PACK")&&s===!0,i=a?Aa(t):t,u=a?new hL(i):new pL(i),c=this.runWebGLProgram(u,[{shape:i,dtype:r,dataId:e}],"float32"),l=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=Dn(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=Dn(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(()=>H(this,null,function*(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=yield Promise.all(o);i.kernelMs=ax(u),i.getExtraProfileInfo=()=>u.map((c,l)=>({name:a[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}))()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Yt(),endMs:null}}endTimer(e){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Yt(),e)}getQueryTime(e){return H(this,null,function*(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs})}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:s,usage:o,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(t,s,o,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=q4){return B().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&q(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Qt("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return z4(e.shape,t)}packedUnaryOp(e,t,r){const s=new or(e.shape,t),o=this.compileAndRun(s,[e],r);return hn().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=ew(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(B().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,uy,e.dtype);const t=new kn(e.shape,uy),r=this.compileAndRun(t,[e]);return hn().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&Hn(r[0])){const o=r.map(a=>qn(a));s=this.write(o,e,t)}else s=this.write(r,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,r){return hn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new W4(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new N4(e.shape),r=!0;return this.runWebGLProgram(t,[e],e.dtype,null,r)}packedReshape(e,t){const r=[$s(e.shape),...Ss(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},o=[$s(t),...Ss(t)],a=new rw(o,r),i=!0,u=[r],c=this.runWebGLProgram(a,[s],e.dtype,u,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:s,shape:o,dtype:a}=r;if(t!=null){const f=q(o),h=t[0]*t[1]*4;E(f<=h,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=Aa(o);let u;s?u=new fL(i):u=new dL(i);const c=!0,l=[t!=null?t:ka(i)],d=this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:e}],a,l,c,t);return{dtype:a,shape:o,dataId:d.dataId}}runWebGLProgram(e,t,r,s,o=!1,a){const i=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===_o.DENSE){const b=a!=null?a:ka(e.outputShape);u.texShape=b.map($=>$*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),q(i.shape)===0)return u.values=On(i.dtype,0),i;const c=[],l=t.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let $=this.texData.get(b.dataId);if($.texture==null){if(!e.packedInputs&&q(b.shape)<=B().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:$.values};e.packedInputs&&($.isPacked=!0,$.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!$.isPacked!=!!e.packedInputs)b=$.isPacked?this.unpackTensor(b):this.packTensor(b),c.push(b),$=this.texData.get(b.dataId);else if($.isPacked&&!fi($.shape,b.shape)){const S=b,C=b.shape;b.shape=$.shape,b=this.packedReshape(b,C),c.push(b),$=this.texData.get(b.dataId),S.shape=C}return{shape:b.shape,texData:$,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:u,isUniform:!1},f=lL(e,l,d),h=this.getAndSaveBinary(f,()=>uL(this.gpgpu,e,l,d)),m=this.activeTimers!=null;let g;m&&(g=this.startTimer()),B().get("ENGINE_COMPILE_ONLY")||cL(this.gpgpu,h,l,d,s),c.forEach(b=>this.disposeIntermediateTensorInfo(b)),m&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=B().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const b=Yt();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!B().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const b=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),b}return i}compileAndRun(e,t,r,s,o=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,s,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(B().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ie(()=>{if(!B().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=B().getBool("DEBUG");B().set("DEBUG",!1);const t=this.abs(de(1e-8)).dataSync()[0];if(B().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?G4:j4}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:s,values:o,texture:a,usage:i,isPacked:u}=t;if(a!=null)return;const c=this.activeTimers!=null;let l;c&&(l=Yt());let d=t.texShape;if(d==null&&(d=g3(r,u),t.texShape=d),o!=null){const f=Aa(r);let h,m=d[1],g=d[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!y)&&([m,g]=As(d[0],d[1])),u?h=new gL(f,y):h=new ey(f,y);const b=y?[g,m]:d,$=this.makeTensorInfo(b,s),S=this.texData.get($.dataId);y?S.usage=Ut.PIXELS:S.usage=Ut.UPLOAD,S.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture($.dataId),m,g,o);const C=[[g,m]],I=!0,A=this.runWebGLProgram(h,[$],s,C,I),L=this.texData.get(A.dataId);t.texShape=L.texShape,t.isPacked=L.isPacked,t.usage=L.usage,B().get("ENGINE_COMPILE_ONLY")?this.disposeData(A.dataId):(t.texture=L.texture,t.values=null,this.texData.delete(A.dataId)),this.disposeIntermediateTensorInfo($),c&&(this.uploadWaitMs+=Yt()-l)}else{const f=this.acquireTexture(d,i,s,u);t.texture=f}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:s}=r;return t!=null&&(r.values=Y4(t,s)),r.values}acquireTexture(e,t,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*mo(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){return H(this,null,function*(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(o){throw o}});e.push(r)}return Promise.all(e)}})}checkCompletionAsync_(e){return H(this,null,function*(){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(yield F1(),this.checkCompletionAsync_(e))})}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Mv(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:r,infLoc:s,nanLoc:o,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:u,outShapeStridesLocation:c,outTexShapeLocation:l}=jv(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=o,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=u,e.outShapeStridesLocation=c,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:s,height:o,width:a,channels:i}=e,u=hn().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(s,t,r,o,a,i);return hn().makeTensorFromDataId(c,t,r,u)}}qi.nextDataId=0;function Y4(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Jf()&&Qx("webgl",()=>new qi,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ch=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Ts{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=xe(t,r),this.enableShapeUniforms=St(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Jo{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=xe(t,r);const o=this.outputShape.length;this.enableShapeUniforms=St(o);let a="";if(s)if(o===0||q(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Re(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=vt("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Q4={kernelName:Ci,backendName:"webgl",kernelFunc:Ft};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yr(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,o=t.makeTensorInfo(r.shape,"complex64"),a=t.texData.get(o.dataId),i=Ft({inputs:{x:r},backend:t}),u=Ft({inputs:{x:s},backend:t});return a.complexTensorInfos={real:i,imag:u},o}const Z4={kernelName:Il,backendName:"webgl",kernelFunc:yr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sw="return (a < 0.) ? b * a : a;",ow=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function J4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:o}=r,a=t.makeTensorInfo([],"float32",Kr(o,"float32")),i=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jo(ow,s.shape,a.shape):new Ts(sw,s.shape,a.shape),u=t.runWebGLProgram(i,[s,a],"float32");return t.disposeIntermediateTensorInfo(a),u}const eV={kernelName:yd,backendName:"webgl",kernelFunc:J4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aw="return (a < 0.) ? b * a : a;",iw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function tV(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,o=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jo(iw,r.shape,s.shape):new Ts(aw,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],"float32")}const nV={kernelName:Xd,backendName:"webgl",kernelFunc:tV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ls="if (isnan(x)) return x;";function be({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:s,backend:o})=>{const{x:a}=s,i=o,u=r||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){const d=i.texData.get(a.dataId),f=t(d.values,u);return i.makeTensorInfo(a.shape,u,f)}const c=B().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let l;return c?l=new or(a.shape,e):l=new kn(a.shape,n),i.runWebGLProgram(l,[a],u)}}function at({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:a,backend:i})=>{const{a:u,b:c}=a,l=i;if(r&&u.dtype==="complex64"){const m=l.texData.get(u.dataId),g=l.texData.get(c.dataId),[y,b]=[[m.complexTensorInfos.real,g.complexTensorInfos.real],[m.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(S=>{const[C,I]=S,A={dataId:C.dataId,dtype:C.dtype,shape:u.shape},L={dataId:I.dataId,dtype:I.dtype,shape:c.shape},F=new Ts(n,u.shape,c.shape);return l.runWebGLProgram(F,[A,L],bn(C.dtype,I.dtype))}),$=yr({inputs:{real:y,imag:b},backend:l});return l.disposeIntermediateTensorInfo(y),l.disposeIntermediateTensorInfo(b),$}const d=o||bn(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&s!=null){const m=l.texData.get(u.dataId).values,g=l.texData.get(c.dataId).values,y=u.dtype==="string"?Io(m):m,b=u.dtype==="string"?Io(g):g,[$,S]=s(u.shape,c.shape,y,b,d),C=l.makeTensorInfo(S,d),I=l.texData.get(C.dataId);return I.values=$,C}const f=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let h;return f?h=new Jo(e,u.shape,c.shape,t):h=new Ts(n,u.shape,c.shape),l.runWebGLProgram(h,[u,c],d)}}function Ro(n,e=!1){if(n==="linear")return e?L4:A4;if(n==="relu")return e?V4:D4;if(n==="elu")return e?B4:O4;if(n==="relu6")return e?M4:F4;if(n==="prelu")return e?iw:aw;if(n==="leakyrelu")return e?ow:sw;if(n==="sigmoid")return e?U4:P4;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uw{constructor(e,t,r,s=!1,o=!1,a=!1,i=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=St(this.outputShape.length);const l=s?e[1]:e[2],d=Math.ceil(l/2),f=s?"i * 2, rc.y":"rc.y, i * 2",h=o?"rc.z, i * 2":"i * 2, rc.z",m=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",b="";i&&(u?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:y=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");const $=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let S="rc.x",C="rc.x";e[0]<t[0]?S=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(C=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${S};
        int batchB = ${C};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${f});
          vec4 b = getMatrixB(batchB, ${h});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${m[0]} * ${g[0]});
          result += (${m[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${$}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cy={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class ly{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=xe(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dy="return a * b;";function Nh(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=bn(r.dtype,s.dtype);if(r.dtype==="complex64"){const i=t.texData.get(r.dataId),u=t.texData.get(s.dataId),c=new ly(cy.REAL,r.shape,s.shape),l=new ly(cy.IMAG,r.shape,s.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],f=t.runWebGLProgram(c,d,"float32"),h=t.runWebGLProgram(l,d,"float32"),m=yr({inputs:{real:f,imag:h},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),m}if(t.shouldExecuteOnCPU([r,s])){const i=t.texData.get(r.dataId),u=t.texData.get(s.dataId),[c,l]=n4(r.shape,s.shape,i.values,u.values,o),d=t.makeTensorInfo(l,o),f=t.texData.get(d.dataId);return f.values=c,d}let a;return B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Jo(dy,r.shape,s.shape):a=new Ts(dy,r.shape,s.shape),t.runWebGLProgram(a,[r,s],o)}const rV={kernelName:Bd,backendName:"webgl",kernelFunc:Nh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(n,e,t){const r=[$s(n.shape),...Ss(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},o=[$s(e),...Ss(e)],a=new rw(o,r),i=!0,u=[r],c=t.runWebGLProgram(a,[s],n.dtype,u,i);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:o}=r,a=t,i=q(s.shape),u=ix(o,i),c=q(u);E(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=a.texData.get(s.dataId);return l.isPacked&&!fi(s.shape,u)&&!(l.texture!==null&&fi(l.shape,u))?sV(s,u,a):(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const oV={kernelName:sf,backendName:"webgl",kernelFunc:Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fy{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];const i=Math.floor(r/4)*4,u=r%4;let c="sumValue += dot(values, ones);";if(t!=null){const d=1/t;c=`sumValue += dot(values * ${Fr(d)?d.toPrecision(2):d}, ones);`}let l="";o%r>0&&(l=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aV{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];let i="0.0",u="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",u="min"):t==="max"&&(i="-1.0 / 1e-20",u="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const l=Math.floor(r/4)*4,d=r%4;let f=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,h="vec4";t==="all"?(i="1.0",f=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,h="bvec4"):t==="any"&&(i="0.0",f=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,h="bvec4");let m="";o%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${f}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${d===2}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${d===3}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${f}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=zi(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function es(n,e,t,r){const s=iV(n.shape);let o=n;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:u,outSize:c}=s[a];let l,d;t==="mean"?l=a===0?new fy({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},i):new fy({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c}):l=new aV({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},t),d=o,o=r.runWebGLProgram(l,[o],e),d.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uV{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];this.outputShape=r,this.rank=r.length;const s=Re(this.rank),o=cV(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function cV(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<n.length;s++)r[n[s]]=t[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lV{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let l=0;l<r.length;l++)r[l]=e[t[l]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=Re(this.rank),o=nw("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=o[l];const i=`vec2(${a.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${u}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${c};
        if(${u}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ki(n,e,t){const r=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lV(n.shape,e):new uV(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n,e,t,r){const s=e,o=n.shape.length,a=He(s,n.shape);let i=a;const u=un(i,o),c=u!=null;let l=n;c&&(l=Ki(n,u,r),i=cn(i.length,o)),$n("sum",i,o);const[d,f]=Vn(l.shape,i);let h=d;t&&(h=Gt(d,a));const m=q(f),y=q(n.shape)/m,b=Z({inputs:{x:l},attrs:{shape:[y,m]},backend:r}),$=Ei(n.dtype),S=es(b,$,"sum",r),C=Z({inputs:{x:S},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(S),c&&r.disposeIntermediateTensorInfo(l),C}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xi(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;return dV(s,o,a,t)}const fV={kernelName:Sf,backendName:"webgl",kernelFunc:Xi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wt(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:o}=r,a=t,i=s.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=s.shape[o[l]];let c;if(a.shouldExecuteOnCPU([s])){const d=a.texData.get(s.dataId).values,f=Th(d,s.shape,s.dtype,o,u);c=a.makeTensorInfo(u,s.dtype);const h=a.texData.get(c.dataId);h.values=f}else c=Ki(s,o,a);return c}const pV={kernelName:uo,backendName:"webgl",kernelFunc:wt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cw=1e3;function hi({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const c=n.shape.length,l=e.shape.length,d=t?n.shape[c-2]:n.shape[c-1],f=r?e.shape[l-1]:e.shape[l-2],h=t?n.shape[c-1]:n.shape[c-2],m=r?e.shape[l-2]:e.shape[l-1],g=n.shape.slice(0,-2),y=e.shape.slice(0,-2),b=q(g),$=q(y),C=xe(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([h,m]);E(d===f,()=>`Error in matMul: inner shapes (${d}) and (${f}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const I=t?[b,d,h]:[b,h,d],A=r?[$,m,f]:[$,f,m],L=Z({inputs:{x:n},backend:s,attrs:{shape:I}}),F=Z({inputs:{x:e},backend:s,attrs:{shape:A}}),V=[L,F],W=Math.max(b,$),U=t?L.shape[1]:L.shape[2],G=o!=null,K=a!=null,te=u==="leakyrelu",oe=u!=null?Ro(u,!0):null,le=G||K||te||oe!=null;let fe;if((h===1||m===1)&&U>cw&&le===!1){let $e=L,tt=F;t&&($e=wt({inputs:{x:L},backend:s,attrs:{perm:[0,2,1]}}),V.push($e)),r&&(tt=wt({inputs:{x:F},backend:s,attrs:{perm:[0,2,1]}}),V.push(tt));const it=m!==1,nt=m===1;let qe=$e;it&&(qe=Z({inputs:{x:$e},backend:s,attrs:{shape:[W,U,1]}}),V.push(qe));const ht=m===1?2:1;let ut=tt;nt&&(ut=Z({inputs:{x:tt},backend:s,attrs:{shape:[W,1,U]}}),V.push(ut));const Ke=Nh({inputs:{a:qe,b:ut},backend:s});fe=Xi({inputs:{x:Ke},backend:s,attrs:{axis:ht,keepDims:!0}}),V.push(Ke)}else{const $e=bn(n.dtype,e.dtype),tt=new uw(I,A,[W,h,m],t,r,G,oe,K,te),it=[L,F];if(o!=null&&it.push(o),K&&it.push(a),te){const nt=s.makeTensorInfo([],"float32",Kr(i,"float32"));it.push(nt),V.push(nt)}fe=s.runWebGLProgram(tt,it,$e)}const me=Z({inputs:{x:fe},backend:s,attrs:{shape:C}});V.push(fe);for(const $e of V)s.disposeIntermediateTensorInfo($e);return me}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return hi({a:s,b:o,transposeA:u,transposeB:c,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}const mV={kernelName:Ja,backendName:"webgl",kernelFunc:hV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const py="return abs(x);";function gV(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const o=t.texData.get(r.dataId),a=ew(o.values);return t.makeTensorInfo(r.shape,r.dtype,a)}let s;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new or(r.shape,py):s=new kn(r.shape,py),t.runWebGLProgram(s,[r],r.dtype)}const yV={kernelName:il,backendName:"webgl",kernelFunc:gV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xV=ln+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,bV=be({opSnippet:xV}),vV={kernelName:ul,backendName:"webgl",kernelFunc:bV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wV=ln+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,$V=be({opSnippet:wV}),SV={kernelName:cl,backendName:"webgl",kernelFunc:$V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hy="return a + b;",TV=at({opSnippet:hy,packedOpSnippet:hy,supportsComplex:!0,cpuKernelImpl:PB}),CV={kernelName:Si,backendName:"webgl",kernelFunc:TV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NV{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`float v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EV{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`vec4 v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wa(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return Ft({inputs:{x:r[0]},backend:t});if(r.length>B().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),c=Wa({inputs:r.slice(0,u),backend:t}),l=Wa({inputs:r.slice(u),backend:t});return Wa({inputs:[c,l],backend:t})}const s=r.map(u=>u.dtype).reduce((u,c)=>bn(u,c)),o=r.map(u=>u.shape),i=B().getBool("WEBGL_PACK")?new EV(r[0].shape,o):new NV(r[0].shape,o);return t.runWebGLProgram(i,r,s)}const IV={kernelName:ll,backendName:"webgl",kernelFunc:Wa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=He(o,s.shape);let c=u;const l=un(c,i);let d=s;l!=null&&(d=wt({inputs:{x:s},backend:t,attrs:{perm:l}}),c=cn(c.length,i)),$n("all",c,i);const[f,h]=Vn(d.shape,c),m=q(h),g=Z({inputs:{x:d},backend:t,attrs:{shape:[-1,m]}}),y=es(g,g.dtype,"all",t);let b;if(a){const $=Gt(f,u);b=Z({inputs:{x:y},backend:t,attrs:{shape:$}})}else b=Z({inputs:{x:y},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),l!=null&&t.disposeIntermediateTensorInfo(d),b}const _V={kernelName:dl,backendName:"webgl",kernelFunc:kV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=He(o,s.shape);let c=u;const l=un(c,i);let d=s;l!=null&&(d=wt({inputs:{x:s},backend:t,attrs:{perm:l}}),c=cn(c.length,i)),$n("any",c,i);const[f,h]=Vn(d.shape,c),m=q(h),g=Z({inputs:{x:d},backend:t,attrs:{shape:[-1,m]}}),y=es(g,g.dtype,"any",t);let b;if(a){const $=Gt(f,u);b=Z({inputs:{x:y},backend:t,attrs:{shape:$}})}else b=Z({inputs:{x:y},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),l!=null&&t.disposeIntermediateTensorInfo(d),b}const AV={kernelName:fl,backendName:"webgl",kernelFunc:RV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OV{constructor(e,t,r){this.variableNames=["A"];const{windowSize:s,batchSize:o,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=t==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DV{constructor(e,t,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,E(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=Re(u),l=vt("coords",u);let d,f;if(a===1){f=u+1;const F=Re(f);d=`
        ${F} sourceLocR = ${F}(${l.join()}, 0);
        ++${l[u-1]};
        ${F} sourceLocG = ${F}(${l.join()}, 0);
        ++${l[u-2]};
        ${F} sourceLocA = ${F}(${l.join()}, 0);
        --${l[u-1]};
        ${F} sourceLocB = ${F}(${l.join()}, 0);
        --${l[u-2]};`}else f=u,d=`
        ${c} sourceLocR = coords;
        ++${l[u-1]};
        ${c} sourceLocG = coords;
        ++${l[u-2]};
        ${c} sourceLocA = coords;
        --${l[u-1]};
        ${c} sourceLocB = coords;
        --${l[u-2]};`;const h=["x","y","z","w","u","v"].slice(0,f),m="."+h[f-1],g=h.map(F=>"int "+F),y=vt("sourceLocR",f-1).concat("inIdx.r"),b=vt("sourceLocG",f-1).concat("inIdx.g"),$=vt("sourceLocB",f-1).concat("inIdx.b"),S=vt("sourceLocA",f-1).concat("inIdx.a"),C=r==="max"?"greaterThan":"lessThan",I=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${$.join()}),
                             getBestIndicesAChannel(${S.join()})));`,A=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${$.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${S.join()}) : 0.)`,L=s?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${h.join()}),
                                          vec2(${h.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${h.join()}),
                               vec2(${h.slice(-2).join()}));
      }
      ${L}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${A};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${A};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${C}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lw(n,e,t,r=null){let s=e.shape[0],o=e.shape[1];r!=null&&(s=r.shape[0],o=r.shape[1]);const a=zi(o),i={windowSize:a,inSize:o,batchSize:s,outSize:Math.ceil(o/a)},u=new OV(i,t,r==null),c=[e];r!=null&&c.push(r);const l=n.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;const d=lw(n,e,t,l);return n.disposeIntermediateTensorInfo(l),d}function dw(n,e,t,r=null){const s=r!=null?r.shape:e.shape,o=s[s.length-1],a=zi(o),i=new DV(s,a,t,r==null),u=r==null?[e]:[e,r],c=n.runWebGLProgram(i,u,"int32");if(c.shape.length===e.shape.length){const l=dw(n,e,t,c);return n.disposeIntermediateTensorInfo(c),l}return c}function fw(n,e,t,r){const s=[t];if($n("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!B().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=n.texData.get(e.dataId),i=a!==null&&a.isPacked;let u=e;i&&(u=n.unpackTensor(e),o.push(u));const[c,l]=Vn(u.shape,s),d=q(l),f=Z({inputs:{x:u},backend:n,attrs:{shape:[-1,d]}});o.push(f);const h=lw(n,f,r);o.push(h);const m=Z({inputs:{x:h},backend:n,attrs:{shape:c}});return o.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}return dw(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=He(o,s.shape);const i=un(a,s.shape.length);let u=s;const c=[];i!=null&&(u=wt({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=cn(a.length,u.shape.length)),$n("argMax",[a[0]],u.shape.length);const l=fw(t,u,a[0],"max");return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const PV={kernelName:pl,backendName:"webgl",kernelFunc:FV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=He(o,s.shape);const i=un(a,s.shape.length);let u=s;const c=[];i!=null&&(u=wt({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=cn(a.length,u.shape.length)),$n("argMin",[a[0]],u.shape.length);const l=fw(t,u,a[0],"min");return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const BV={kernelName:hl,backendName:"webgl",kernelFunc:LV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VV=ln+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,MV=be({opSnippet:VV}),UV={kernelName:ml,backendName:"webgl",kernelFunc:MV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WV=ln+"return log(x + sqrt(x * x + 1.0));",zV=be({opSnippet:WV}),GV={kernelName:gl,backendName:"webgl",kernelFunc:zV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jV=ln+`
  return atan(x);
`,HV=be({opSnippet:jV}),qV={kernelName:yl,backendName:"webgl",kernelFunc:HV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KV=Ch+`
  return atan(a, b);
`,XV=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Zo+`
  return result;
`,YV=at({opSnippet:KV,packedOpSnippet:XV}),QV={kernelName:bl,backendName:"webgl",kernelFunc:YV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV=ln+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,JV=be({opSnippet:ZV}),eM={kernelName:xl,backendName:"webgl",kernelFunc:JV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ao{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,h=e.padInfo.top,m=e.padInfo.left;this.outputShape=e.outShape;const g=t==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let $="0.0";if(g||($="-1.0 / 1e-20"),r){const F=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${h}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?o?y:b:`wR * ${f} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const S="max";let C=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(C="avgValue / max(count, 1.0)");const I=Math.floor(a/4)*4,A=a%4,L=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${S}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${h}, ${m});
      const float initializationValue = ${$};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${$});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${L}
          }

          int xC = xCCorner + ${I};
          if (${A===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${L}
          } else if (${A===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${L}
          } else if (${A===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${L}
          }
        }
        setOutput(${C});
      }
    `}}class Eh{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,d=e.dilationHeight,f=e.dilationWidth,h=e.effectiveFilterDepth,m=e.effectiveFilterHeight,g=e.effectiveFilterWidth,y=e.padInfo.front,b=e.padInfo.top,$=e.padInfo.left;this.outputShape=e.outShape;const S=t==="avg";let C="0.0";if(S||(C="-1.0 / 1e-20"),r){const W=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${c});
        const ivec3 pads = ivec3(${y}, ${b}, ${$});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${f}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${W} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${m} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / max(count, 1.0)");const L=Math.floor(a/4)*4,F=a%4,V=`
      if (${S}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${c});
      const ivec3 pads = ivec3(${y}, ${b}, ${$});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${L}; wC += 4) {
              int xC = xCCorner + wC * ${f};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                getValue(batch, xD, xR, xC + 3 * ${f}, ch)
              );

              ${V}
            }

            int xC = xCCorner + ${L};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${V}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                initializationValue,
                initializationValue
              );

              ${V}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                initializationValue
              );

              ${V}
            }
          }
        }
        setOutput(${A});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Yo(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;E(Bt(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Xr(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&Me(l.inShape,l.outShape))return Ft({inputs:{x:s},backend:t});const d=new Ao(l,"avg",!1);return t.runWebGLProgram(d,[s],"float32")}const nM={kernelName:vl,backendName:"webgl",kernelFunc:tM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r,l=[1,1,1],d=Uo(s.shape,o,a,l,i,u,c),f=new Eh(d,"avg",!1);return t.runWebGLProgram(f,[s],"float32")}const sM={kernelName:wl,backendName:"webgl",kernelFunc:rM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=u-1-e.padInfo.top,d=c-1-e.padInfo.left,f=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${d});
      const float avgMultiplier = float(${f});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class aM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterDepth,f=e.effectiveFilterHeight,h=e.effectiveFilterWidth,m=d-1-e.padInfo.front,g=f-1-e.padInfo.top,y=h-1-e.padInfo.left,b=1/(t*r*s);this.userCode=`
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${f};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,d=[1,1,1],f=Uo(a.shape,i,u,d,c,l),h=new aM(f);return t.runWebGLProgram(h,[s],a.dtype)}const uM={kernelName:xx,backendName:"webgl",kernelFunc:iM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o;Yo([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=Xr(a.shape,i,u,1,c),d=new oM(l);return t.runWebGLProgram(d,[s],a.dtype)}const lM={kernelName:yx,backendName:"webgl",kernelFunc:cM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;return hi({a:s,b:o,transposeA:a,transposeB:i,backend:t})}const fM={kernelName:$l,backendName:"webgl",kernelFunc:dM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pM{constructor(e,t,r,s,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],xe(e,t),xe(e,r);let i="0.0";s!=null&&(xe(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";o!=null&&(xe(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hM{constructor(e,t,r,s,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],xe(e,t),xe(e,r);let i="vec4(0.0)";s!=null&&(xe(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&(xe(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mM=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:s,variance:o,offset:a,scale:i}=n;E(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);const c=[r,s,o];let l=null;a!=null&&(l=a.shape,c.push(a));let d=null;i!=null&&(d=i.shape,c.push(i));const f=B().getBool("WEBGL_PACK_NORMALIZATION")?new hM(r.shape,s.shape,o.shape,l,d,u):new pM(r.shape,s.shape,o.shape,l,d,u);return e.runWebGLProgram(f,c,c[0].dtype)},gM={kernelName:id,backendName:"webgl",kernelFunc:mM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yM{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Re(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=xM(this.rank);let s;const o=e.map((a,i)=>`sourceLoc.${Uc[i]} = start[${i}] + coords.${Uc[i]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const Uc=["x","y","z","w","u","v"];function xM(n){if(n===1)return"sourceLoc";if(n<=6)return Uc.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bM{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Re(this.rank),r=vt("coords",this.rank),s=vt("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,d)=>`start[${d}]`).join()});`:e.map((l,d)=>`${s[d]} = ${r[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(n,e,t,r){const s=r.texData.get(n.dataId),o=r.makeTensorInfo(t,n.dtype),a=r.texData.get(o.dataId);Object.assign(a,s),a.refCount=1,a.shape=t,a.dtype=n.dtype;let i=dh(e,Je(n.shape));s.slice&&(i+=s.slice.flatOffset),a.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||n.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),o}function Bs(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,size:a}=r,[i,u]=R1(s,o,a);if(w1(s,i,u),q(u)===0)return t.makeTensorInfo(u,s.dtype,[]);if(t.shouldExecuteOnCPU([s])||s.dtype==="string"){const d=t.texData.get(s.dataId),f=p4(d.values,i,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,f)}const{isPacked:c}=t.texData.get(s.dataId),l=lh(s.shape,i,u);if(c||!l){const d=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bM(u):new yM(u),f=[i];return t.runWebGLProgram(d,[s],s.dtype,f)}return t.uploadToGPU(s.dataId),vM(s,i,u,t)}const wM={kernelName:gf,backendName:"webgl",kernelFunc:Bs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $M=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,crops:a}=r;E(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce(($,S)=>$*S),u=ph(s.shape,o,i),c=hh(u.length,o.length),l=mh(s.shape,o,i),d=W1(a,o.length),f=z1(l,a,o.length),h=[],m=Z({inputs:{x:s},backend:t,attrs:{shape:u}}),g=wt({inputs:{x:m},backend:t,attrs:{perm:c}}),y=Z({inputs:{x:g},backend:t,attrs:{shape:l}}),b=Bs({inputs:{x:y},backend:t,attrs:{begin:d,size:f}});return h.push(m),h.push(g),h.push(y),h.forEach($=>t.disposeIntermediateTensorInfo($)),b},SM={kernelName:Sl,backendName:"webgl",kernelFunc:$M};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a}=r,i=t.readSync(s.dataId),u=t.readSync(o.dataId),c=Jv(i,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,c)}const CM={kernelName:Tl,backendName:"webgl",kernelFunc:TM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NM(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,o=t.readSync(r.dataId),a=t.readSync(s.dataId),i=xe(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const EM={kernelName:Cl,backendName:"webgl",kernelFunc:NM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IM="return float(a != b);",pw=at({opSnippet:IM,cpuKernelImpl:s4,dtype:"bool"}),kM={kernelName:Md,backendName:"webgl",kernelFunc:pw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ea(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return Ft({inputs:{x:s.complexTensorInfos.real},backend:t})}const _M={kernelName:tf,backendName:"webgl",kernelFunc:ea};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RM="return float(int(x));";function AM(n,e){const t=new kn(n.shape,RM),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wc(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return Ft({inputs:{x:s},backend:t});const a=lr(s.shape),i=Wc({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),u=yr({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),u}if(s.dtype==="complex64"){const a=ea({inputs:{input:s},backend:t}),i=Wc({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),i}if(!lx(s.dtype,o)){const a=Ft({inputs:{x:s},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(t.shouldExecuteOnCPU([s])){const a=t.texData.get(s.dataId).values,[i,u,c]=BB(a,s.shape,s.dtype,o);return t.makeTensorInfo(i,u,c)}if(o==="int32")return AM(s,t);if(o==="bool"){const a=t.makeTensorInfo([],"bool",On("bool",1)),u=pw({inputs:{a:s,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const OM={kernelName:Ti,backendName:"webgl",kernelFunc:Wc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const my="return ceil(x);",DM=be({opSnippet:my,packedOpSnippet:my,cpuKernelImpl:VB}),FM={kernelName:Nl,backendName:"webgl",kernelFunc:DM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PM{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:o,clipValueMax:a}=r;let i;B().getBool("WEBGL_PACK_CLIP")?i=new LM(s.shape):i=new PM(s.shape);const u=[[o],[a]];return t.runWebGLProgram(i,[s],s.dtype,u)}const VM={kernelName:El,backendName:"webgl",kernelFunc:BM};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MM{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gy(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function UM(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.texData.get(r.dataId),o=new MM(r.shape),a=[gy(r,s.complexTensorInfos.real),gy(r,s.complexTensorInfos.imag)];return t.runWebGLProgram(o,a,a[0].dtype)}const WM={kernelName:kl,backendName:"webgl",kernelFunc:UM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zM{constructor(e){this.outputShape=[],this.outputShape=zr(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const i=t[a-1];r.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const s=t.length,o=t[t.length-1];r.push(`else setOutput(getT${s}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GM{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=zr(e,t);const r=this.outputShape,s=r.length,o=Re(s),a=vt("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((g,y)=>`T${y}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let g=1;g<u.length;g++)u[g]=u[g-1]+e[g][t];const c=i[t],l=i.slice(-2),d=i.join();let f=`if (${c} < ${u[0]}) {
        return getChannel(
            getT0(${d}), vec2(${l.join()}));
        }`;for(let g=1;g<u.length;g++){const y=u[g-1];f+=`
        if (${c} < ${u[g]}  && ${c} >= ${u[g-1]}) {
          return getChannel(
            getT${g}(${Fa(i,c,y)}),
            vec2(${Fa(l,c,y)}));
        }`}const h=u.length,m=u[u.length-1];f+=`
        return getChannel(
          getT${h}(${Fa(i,c,m)}),
          vec2(${Fa(l,c,m)}));`,this.userCode=`
      float getValue(${i.map(g=>"int "+g)}) {
        ${f}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${r[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${r[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${r[s-2]} &&
            ${a[s-1]} < ${r[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function Fa(n,e,t){const r=n.indexOf(e);return n.map((o,a)=>a===r?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yi(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return Ft({inputs:{x:s.complexTensorInfos.imag},backend:t})}const jM={kernelName:pd,backendName:"webgl",kernelFunc:Yi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oo(n,e,t){const r=n[0].dtype;if(r==="complex64"){const h=n.map($=>ea({inputs:{input:$},backend:t})),m=n.map($=>Yi({inputs:{input:$},backend:t})),g=oo(h,e,t),y=oo(m,e,t),b=yr({inputs:{real:g,imag:y},backend:t});return h.forEach($=>t.disposeIntermediateTensorInfo($)),m.forEach($=>t.disposeIntermediateTensorInfo($)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),b}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const h=n.map(C=>{const A=[-1,q(C.shape.slice(e))];return Z({inputs:{x:C},backend:t,attrs:{shape:A}})}),m=h.map(C=>({vals:t.readSync(C.dataId),shape:C.shape})),g=zr(h.map(C=>C.shape),1),y=h[0].shape[0]===1,b=MB(m,g,r,y),$=zr(n.map(C=>C.shape),e),S=t.makeTensorInfo($,r,b);return h.forEach(C=>t.disposeIntermediateTensorInfo(C)),S}const o=n.filter(h=>q(h.shape)>0),a=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const h=a?new kn(n[0].shape,tr):new or(n[0].shape,tr);return t.runWebGLProgram(h,n,r)}const i=B().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const h=[];for(let g=0;g<o.length;g+=i){const y=o.slice(g,g+i);h.push(oo(y,e,t))}const m=oo(h,e,t);for(const g of h)t.disposeIntermediateTensorInfo(g);return m}if(a){const h=new GM(o.map(m=>m.shape),e);return t.runWebGLProgram(h,o,r)}const{tensors2D:u,outShape:c}=HM(o,e,t),l=new zM(u.map(h=>h.shape)),d=t.runWebGLProgram(l,u,r);u.forEach(h=>t.disposeIntermediateTensorInfo(h));const f=Z({inputs:{x:d},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(d),f}function HM(n,e,t){const r=zr(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>Z({inputs:{x:o},attrs:{shape:[-1,q(o.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hw(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,o=He(s,e[0].shape)[0],a=e.map(c=>c.shape);P1(a,o);const i=zr(e.map(c=>c.shape),o);if(q(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(c=>q(c.shape)>0);return u.length===1?Ft({inputs:{x:u[0]},backend:t}):oo(u,o,t)}const qM={kernelName:_l,backendName:"webgl",kernelFunc:hw};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mw{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,d=e.dilationWidth,f=e.filterHeight,h=e.filterWidth,m=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,y=e.dataFormat==="channelsLast",b=y?1:2,$=y?2:3,S=y?3:1;let C="",I="";r&&(s?C=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?C=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:C=`
          float activation(float x) {
            ${r}
          }
        `,I="result = activation(result);");const A=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${C}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${S}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${$}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${f}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${A}
        ${I}
        setOutput(result);
      }
    `}}class KM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterDepth,f=e.filterHeight,h=e.filterWidth,m=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gw{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=St(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,d=l;let f=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<l;y++)f+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;f+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<l;y++)f+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;f+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(d+1)/2;y++){const b=y*2;if(f+=`
           xC = xCCorner + ${b*u};
           `,i===1){if(b<l&&(a%2===1?(f+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,u===1&&b>0?f+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:f+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):f+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<l)){const $=a%2===0?wi(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(f+=`
                   xCOffset = xC + imod(pads[1], 2) + ${$};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,u>1?f+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:f+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):$===1?f+=`
                     xC${b+1} = xTexelC${b};
                     `:f+=`
                     xCOffset = xC + ${$};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<l&&(a%2===1?(f+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<l&&(f+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(f+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<l&&(f+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<l&&(f+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<l&&(f+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}f+=`
     }
   `,f+=`
     }
   `,f+=`
     }
   `;let h="",m="";r&&(s?h=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?h=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:h=`vec4 activation(vec4 x) {
           ${r}
         }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${h}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${f}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${m}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=St(this.outputShape.length);const{dataFormat:r}=t,s=$t(),o=r==="channelsLast",a=o?1:2,i=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let l=0;l<=1;l++)for(let d=0;d<=1;d++)c+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mi(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function yw({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=n.shape,c=r.texData.get(n.dataId),l=t.inChannels,d=u[0]*u[1]*u[2],f=t.outChannels,h=t.dataFormat==="channelsLast",m=!1,g=!1;let y;const b=[];if(o!=null){const C=mi(o.shape,h);C!=null&&(o=Z({inputs:{x:o},backend:r,attrs:{shape:C}}),b.push(o))}if(s!=null){const C=mi(s.shape,h);C!=null&&(s=Z({inputs:{x:s},backend:r,attrs:{shape:C}}),b.push(s))}if(!((d===1||f===1)&&l>cw)&&c.isPacked&&h&&c.texture!=null&&u[2]%2!==0&&Me(c.shape.slice(-3),u.slice(-3))){const C=u[0]*u[1]*(u[2]+1),I={dataId:n.dataId,shape:[1,C,t.inChannels],dtype:n.dtype},A=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,E(fi(c.shape,I.shape),()=>`packed reshape ${c.shape} to ${I.shape} isn't free`);const L=Z({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});b.push(L);const F=hi({a:I,b:L,backend:r,transposeA:m,transposeB:g,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),V=r.texData.get(F.dataId);E(V.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=A,V.shape=t.outShape,y=Ft({inputs:{x:F},backend:r}),y.shape=t.outShape,b.push(F)}else{const C=t.outHeight*t.outWidth,I=Z({inputs:{x:n},backend:r,attrs:{shape:h?[t.batchSize,C,t.inChannels]:[t.batchSize,t.inChannels,C]}}),A=Z({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),L=hi({a:h?I:A,b:h?A:I,transposeA:!h,transposeB:g,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a});y=Z({inputs:{x:L},backend:r,attrs:{shape:t.outShape}}),b.push(I),b.push(A),b.push(L)}for(const C of b)r.disposeIntermediateTensorInfo(C);return y}function xw({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:f,dataFormat:h}=t,m=h==="channelsLast",g=u*c*l,y=f*d,b=[t.batchSize,g,y],$=!0,S=!1,C=[];if(o!=null){const me=mi(o.shape,m);me!=null&&(o=Z({inputs:{x:o},backend:r,attrs:{shape:me}}),C.push(o))}if(s!=null){const me=mi(s.shape,m);me!=null&&(s=Z({inputs:{x:s},backend:r,attrs:{shape:me}}),C.push(s))}const I=Z({inputs:{x:e},backend:r,attrs:{shape:[1,g,q(e.shape)/g]}});C.push(I);const A=new XM(b,t),L=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],F=r.runWebGLProgram(A,[n],"float32",L),V=Z({inputs:{x:F},backend:r,attrs:{shape:b}});C.push(F),C.push(V);const W=s!=null,U=o!=null,G=i==="leakyrelu",K=i?Ro(i,!0):null,te=new uw(m?V.shape:I.shape,m?I.shape:V.shape,m?[t.batchSize,y,t.outChannels]:[t.batchSize,t.outChannels,y],$,S,W,K,U,G),oe=m?[V,I]:[I,V];if(s&&oe.push(s),U&&oe.push(o),G){const me=r.makeTensorInfo([],"float32",Kr(a,"float32"));oe.push(me),C.push(me)}const le=r.runWebGLProgram(te,oe,"float32"),fe=Z({inputs:{x:le},backend:r,attrs:{shape:t.outShape}});C.push(le);for(const me of C)r.disposeIntermediateTensorInfo(me);return fe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r,d=Is(u),f=zt(s.shape,o.shape,a,c,i,l,!1,d);let h;if(f.filterHeight===1&&f.filterWidth===1&&f.dilationHeight===1&&f.dilationWidth===1&&f.strideHeight===1&&f.strideWidth===1&&(f.padInfo.type==="SAME"||f.padInfo.type==="VALID"))h=yw({x:s,filter:o,convInfo:f,backend:t});else if(f.strideWidth<=2&&d==="channelsLast"&&B().getBool("WEBGL_EXP_CONV")){const g=new gw(f),y=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]];h=t.runWebGLProgram(g,[s,o],"float32",y)}else if(B().getBool("WEBGL_CONV_IM2COL"))h=xw({x:s,filter:o,convInfo:f,backend:t});else{const g=new mw(f);h=t.runWebGLProgram(g,[s,o],"float32")}const m=Z({inputs:{x:h},backend:t,attrs:{shape:f.outShape}});return t.disposeIntermediateTensorInfo(h),m}const QM={kernelName:Rl,backendName:"webgl",kernelFunc:YM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class JM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,u=r-1-e.padInfo.left,c=a?1:2,l=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class eU{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class tU{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=t-1-e.padInfo.front,c=r-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${c}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,d=Is(u),f=zt(s.shape,l,a,1,i,c,!1,d),h=new ZM(f);return t.runWebGLProgram(h,[s,o],"float32")}const rU={kernelName:Al,backendName:"webgl",kernelFunc:nU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=Is(c),f=zt(a,o.shape,i,1,u,l,!1,d),h=new JM(f);return t.runWebGLProgram(h,[s,o],"float32")}const oU={kernelName:Ol,backendName:"webgl",kernelFunc:sU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=Wo(s.shape,o.shape,a,u,i),l=new KM(c);return t.runWebGLProgram(l,[s,o],"float32")}const iU={kernelName:Dl,backendName:"webgl",kernelFunc:aU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r,c=Wo(s.shape,u,a,1,i),l=new eU(c);return t.runWebGLProgram(l,[s,o],"float32")}const cU={kernelName:bx,backendName:"webgl",kernelFunc:uU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r,c=Wo(u,o.shape,i,1,a),l=new tU(c);return t.runWebGLProgram(l,[s,o],"float32")}const dU={kernelName:Fl,backendName:"webgl",kernelFunc:lU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU=Ls+`
  return cos(x);
`,pU=be({opSnippet:fU}),hU={kernelName:Pl,backendName:"webgl",kernelFunc:pU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mU=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,gU=be({opSnippet:mU}),yU={kernelName:Ll,backendName:"webgl",kernelFunc:gU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xU{constructor(e,t,r,s,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,u,c]=e,[l]=t,[d,f]=r;this.outputShape=[l,d,f,c];const h=s==="bilinear"?1:0,[m,g]=[`${i-1}.0`,`${u-1}.0`],[y,b,$]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${m} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${m}`],[S,C,I]=f>1?[`${(u-1)/(f-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${S});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${C};

        float in_y = ${$};
        if( in_y < 0.0 || in_y > ${m} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${h} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bU=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:c}=r,l=new xU(s.shape,o.shape,i,u,c);return t.runWebGLProgram(l,[s,o,a],"float32")},vU={kernelName:Ml,backendName:"webgl",kernelFunc:bU};var Oo;(function(n){n.Prod="*",n.Sum="+"})(Oo||(Oo={}));class yy{constructor(e,t,r,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===Oo.Prod?"1.0":"0.0",i=r?a:`getX(${xy(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",l="";r?(c=s?`end != ${u-1}`:"end != 0",l=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${u}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Re(o)} coords = getOutputCoords();
        int end = ${by(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${l};
          ${by(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${xy(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function xy(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function by(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bw(n,e,t,r,s,o){const a=e.shape.length,i=un([r],a);let u=e;i!=null&&(u=wt({inputs:{x:e},backend:t,attrs:{perm:i}}));const c=cn(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const l=u.shape[c];let d=Ft({inputs:{x:u},backend:t});for(let f=0;f<=Math.ceil(Math.log2(l))-1;f++){const h=new yy(n,u.shape,!1,o),m=[[f]],g=d;d=t.runWebGLProgram(h,[d],d.dtype,m),t.disposeIntermediateTensorInfo(g)}if(s){const f=new yy(n,u.shape,s,o),h=d;d=t.runWebGLProgram(f,[d],d.dtype),t.disposeIntermediateTensorInfo(h)}if(i!=null){const f=hp(i),h=wt({inputs:{x:d},backend:t,attrs:{perm:f}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(u),h}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return bw(Oo.Prod,s,t,o,a,i)}const $U={kernelName:Bl,backendName:"webgl",kernelFunc:wU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return bw(Oo.Sum,s,t,o,a,i)}const TU={kernelName:Vl,backendName:"webgl",kernelFunc:SU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(s.shape.length===1){const u=t.readSync(s.dataId),c=t.readSync(o.dataId),l=Jv(u,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}else if(s.shape.length===2){const u=t.bufferSync(s),c=t.bufferSync(o),l=LB(u,c,a,i);return t.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const NU={kernelName:Ul,backendName:"webgl",kernelFunc:CU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EU{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:o,dataFormat:a}=r,i=s.shape[0],u=a==="NHWC"?s.shape[1]:s.shape[2],c=a==="NHWC"?s.shape[2]:s.shape[3],l=a==="NHWC"?s.shape[3]:s.shape[1],d=u*o,f=c*o,h=l/(o*o),m=a==="NHWC"?[i,d,f,h]:[i,h,d,f],g=new EU(m,o,a);return t.runWebGLProgram(g,[s],s.dtype)}const kU={kernelName:Wl,backendName:"webgl",kernelFunc:IU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vw{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=St(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels;let c="",l="";r&&(s?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:c=`
          float activation(float x) {
            ${r}
          }
        `,l="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ww{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=St(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,f=d;let h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<d;b++)h+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;h+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let b=0;b<d;b++)h+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(f+1)/2;b++){const $=b*2;if(h+=`
          xC = xCCorner + ${$*c};
          `,u===1){if($<d&&(i%2===1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }
              `,c===1&&$>0?h+=`
                xC${$} = vec4(xTexelC${$-2}.zw, xTexelC${$}.xy);
                `:h+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${$} = vec4(previous.zw, xTexelC${$}.xy);
                  } else {
                    xC${$} = vec4(0.0, 0.0, xTexelC${$}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xC${$} = xTexelC${$};
                `,$+1<d)){const S=i%2===0?wi(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${S};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                    xTexelC${$+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${$+1}.zw = vec2(0.0);
                    }
                    xTexelC${$+1}Ready = 1;
                  }
                  `,c>1?h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${$+1} = vec4(previous.zw, xTexelC${$+1}.xy);
                    } else {
                     xC${$+1} = vec4(0.0, 0.0, xTexelC${$+1}.xy);
                    }
                    `:h+=`
                    xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.xy);
                    `):S===1?h+=`
                    xC${$+1} = xTexelC${$};
                    `:h+=`
                    xCOffset = xC + ${S};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                      xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${$+1}.zw = vec2(0.0);
                      }
                      xTexelC${$+1}Ready = 1;
                    }

                    xC${$+1} = xTexelC${$+1};
                    `}}else $<d&&(i%2===1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.0);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
              `,$+1<d&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${$+1} = vec4(xTexelC${$+1}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(
                  xTexelC${$}.xy, xTexelC${$+1}.xy);
              `,$+1<d&&(h+=`
                  xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
                `)));$<d&&(h+=`
            wTexel = getW(r, ${$}, d1, q);
            dotProd += xC${$} * vec4(wTexel.xz, wTexel.xz);
          `,$+1<d&&(h+=`
              wTexel = getW(r, ${$+1}, d1, q);
              dotProd += xC${$+1} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  `,h+=`
      }
    `;let m="",g="";r&&(s?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:m=`vec4 activation(vec4 x) {
          ${r}
        }`,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _U(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=r;let l=u;l==null&&(l=[1,1]),E(Bt(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const d=zt(s.shape,o.shape,a,l,i,c,!0);let f;B().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?f=new ww(d):f=new vw(d);const h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return t.runWebGLProgram(f,[s,o],"float32",h)}const RU={kernelName:zl,backendName:"webgl",kernelFunc:_U};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AU{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class OU{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,i=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r,d=zt(s.shape,l,a,i,u,c,!0),f=new AU(d);return t.runWebGLProgram(f,[s,o],"float32")}const FU={kernelName:Gl,backendName:"webgl",kernelFunc:DU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r,d=zt(l,o.shape,a,i,u,c,!0),f=new OU(d);return t.runWebGLProgram(f,[s,o],"float32")}const LU={kernelName:jl,backendName:"webgl",kernelFunc:PU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BU{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],o=q(r.shape),a=Z({inputs:{x:r},backend:t,attrs:{shape:[o]}}),i=new BU(o),u=t.runWebGLProgram(i,[a],a.dtype),c=Z({inputs:{x:u},backend:t,attrs:{shape:s}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),c}const MU={kernelName:Hl,backendName:"webgl",kernelFunc:VU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UU{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:s,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:c,dilationWidth:l}=e,{top:d,left:f}=s;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${d}, ${f});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=l0(s.shape,o.shape,a,i,"NHWC",u);let l;const d=new UU(c);l=t.runWebGLProgram(d,[s,o],"float32");const f=Z({inputs:{x:l},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(l),f}const zU={kernelName:ql,backendName:"webgl",kernelFunc:WU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=Z1(s,o.length);ev(a.length,u,o);const{path:c,steps:l}=tv(i,u),d=l.length;let f=null,h=a.length;const m=[];for(let g=0;g<d;++g){for(const y of l[g]){const{permutationIndices:b,expandDims:$}=J1(h,u[y]);let S;nv(b)?S=o[y]:(S=wt({inputs:{x:o[y]},backend:t,attrs:{perm:b}}),m.push(S));const C=S.shape.slice();for(let I=0;I<$.length;++I)C.splice($[I],0,1);Me(S.shape,C)||(S=Z({inputs:{x:S},backend:t,attrs:{shape:C}}),m.push(S)),f===null?f=S:(f=Nh({inputs:{a:S,b:f},backend:t}),m.push(f))}g<d-1&&(c[g]>=0&&(f=Xi({inputs:{x:f},backend:t,attrs:{axis:c[g]-(a.length-h),keepDims:!1}}),m.push(f)),h--)}for(const g of m)g!==f&&t.disposeIntermediateTensorInfo(g);return f}const jU={kernelName:Xl,backendName:"webgl",kernelFunc:GU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HU="return (x >= 0.0) ? x : (exp(x) - 1.0);",qU=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,KU=be({opSnippet:HU,packedOpSnippet:qU}),XU={kernelName:Yl,backendName:"webgl",kernelFunc:KU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YU="return (b >= 1.0) ? a : a * (b + 1.0);",QU=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,ZU=n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,o=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jo(QU,r.shape,s.shape):new Ts(YU,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],r.dtype)},JU={kernelName:vx,backendName:"webgl",kernelFunc:ZU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eW=`
  return vec4(equal(a, b));
`,tW="return float(a == b);",nW=at({opSnippet:tW,packedOpSnippet:eW,dtype:"bool",cpuKernelImpl:UB}),rW={kernelName:Zl,backendName:"webgl",kernelFunc:nW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sW=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${H1};
  float a1 = ${q1};
  float a2 = ${K1};
  float a3 = ${X1};
  float a4 = ${Y1};
  float a5 = ${Q1};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,oW=be({opSnippet:sW}),aW={kernelName:Ql,backendName:"webgl",kernelFunc:oW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iW=Ls+`
  return exp(x);
`,uW=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$w=be({opSnippet:iW,packedOpSnippet:uW,cpuKernelImpl:WB,dtype:"float32"}),cW={kernelName:Jl,backendName:"webgl",kernelFunc:$w};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zc(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:o}=e,a=o.shape.length,i=o.shape.slice();let u=s;return s<0&&(E(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),Z({inputs:{x:o},backend:r,attrs:{shape:i}})}const lW={kernelName:ed,backendName:"webgl",kernelFunc:zc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vy="return exp(x) - 1.0;",dW=be({opSnippet:vy,packedOpSnippet:vy,cpuKernelImpl:zB}),fW={kernelName:td,backendName:"webgl",kernelFunc:dW};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wy{constructor(e,t,r){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const o=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${s}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sw(n,e,t){const r=t.texData.get(n.dataId),s=q(n.shape),o=n.shape[n.shape.length-1],a=s/o,i=Z({inputs:{x:n},backend:t,attrs:{shape:[a,o]}}),u=i.shape,c=new wy("real",u,e),l=new wy("imag",u,e),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],f=t.runWebGLProgram(c,d,"float32"),h=t.runWebGLProgram(l,d,"float32"),m=yr({inputs:{real:f,imag:h},backend:t});t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h);const g=Z({inputs:{x:m},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(m),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pW(n){const{inputs:e,backend:t}=n,{input:r}=e;return Sw(r,!1,t)}const hW={kernelName:nd,backendName:"webgl",kernelFunc:pW};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mW{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ta(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:o}=t;if(o=o||Lo(s),o==="string"){const a=ot(o,q(r));return a.fill(s),e.makeTensorInfo(r,o,a)}else{const a=new mW(r,s),i=[[s]];return e.runWebGLProgram(a,[],o,i)}}const gW={kernelName:rd,backendName:"webgl",kernelFunc:ta};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yW{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xW={kernelName:sd,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new yW(t.shape);return r.runWebGLProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $y="return floor(x);",bW=be({opSnippet:$y,packedOpSnippet:$y,cpuKernelImpl:GB}),vW={kernelName:od,backendName:"webgl",kernelFunc:bW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,$W=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,SW=at({opSnippet:wW,packedOpSnippet:$W,dtype:"int32"}),TW={kernelName:ad,backendName:"webgl",kernelFunc:SW};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CW{constructor(e){this.variableNames=["A"];const t=$t(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NW{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=$t(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EW={kernelName:Za,backendName:"webgl",kernelFunc:IW};let os,Lu=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function IW(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:o}=r,a=typeof HTMLVideoElement!="undefined"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement,[u,c]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],l=[c,u],d=[c,u,o];if(i||a){const g=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(os==null||g!==Lu)&&(Lu=g,os=document.createElement("canvas").getContext("2d",{willReadFrequently:Lu})),os.canvas.width=u,os.canvas.height=c,os.drawImage(s,0,0,u,c),s=os.canvas}const f=t.makeTensorInfo(l,"int32");t.texData.get(f.dataId).usage=Ut.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(f.dataId),s);const h=B().getBool("WEBGL_PACK")?new NW(d):new CW(d),m=t.runWebGLProgram(h,[f],"int32");return t.disposeData(f.dataId),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:f,activation:h,leakyreluAlpha:m}=r,g=Is(l),y=zt(s.shape,o.shape,u,d,c,f,!1,g);let b;const $=[],S=a!=null,C=i!=null,I=h==="leakyrelu",A=()=>{const F=[s,o],V=(W,U)=>{if(U==="NCHW"&&W.shape.length===1&&W.shape[0]!==1){const G=Z({inputs:{x:W},backend:t,attrs:{shape:[W.shape[0],1,1]}});return $.push(G),G}return W};if(S&&F.push(V(a,l)),C&&F.push(V(i,l)),I){const W=t.makeTensorInfo([],"float32",Kr(m,"float32"));F.push(W),$.push(W)}return F};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))b=yw({x:s,filter:o,convInfo:y,backend:t,bias:a,activation:h,preluActivationWeights:i,leakyreluAlpha:m});else if(y.strideWidth<=2&&g==="channelsLast"&&B().getBool("WEBGL_EXP_CONV")){const F=h?Ro(h,!0):null,V=new gw(y,S,F,C,I),W=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],U=A();b=t.runWebGLProgram(V,U,"float32",W)}else if(B().getBool("WEBGL_CONV_IM2COL"))b=xw({x:s,filter:o,convInfo:y,backend:t,bias:a,activation:h,preluActivationWeights:i,leakyreluAlpha:m});else{const F=h?Ro(h,!1):null,V=new mw(y,S,F,C,I),W=A();b=t.runWebGLProgram(V,W,"float32")}const L=Z({inputs:{x:b},backend:t,attrs:{shape:y.outShape}});return $.push(b),$.forEach(F=>t.disposeIntermediateTensorInfo(F)),L}const _W={kernelName:ei,backendName:"webgl",kernelFunc:kW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:f,leakyreluAlpha:h}=r,m=[];let g=l;g==null&&(g=[1,1]),E(Bt(u,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`);const y=zt(s.shape,o.shape,u,g,c,d,!0),b=B().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,$=f?Ro(f,b):null,S=[s,o],C=a!=null,I=i!=null,A=f==="leakyrelu";if(C&&S.push(a),I&&S.push(i),A){const W=t.makeTensorInfo([],"float32",Kr(h,"float32"));S.push(W),m.push(W)}let L;b?L=new ww(y,C,$,I,A):L=new vw(y,C,$,I,A);const F=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],V=t.runWebGLProgram(L,S,"float32",F);return m.forEach(W=>t.disposeIntermediateTensorInfo(W)),V}const AW={kernelName:ti,backendName:"webgl",kernelFunc:RW};class OW{constructor(e,t,r,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const o=Re(r.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DW(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,o=s.shape,a=o[o.length-1],i=q(r.shape),[u,c,l,d]=ch(r,s),f=Z({inputs:{x:s},backend:t,attrs:{shape:[c,a]}}),h=Z({inputs:{x:r},backend:t,attrs:{shape:[q(r.shape)/l,l]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const b=t.readSync(s.dataId),$=t.bufferSync(r),S=jB(b,$,r.dtype,c,a,l,d,r.shape,i);return t.makeTensorInfo(u,r.dtype,S.values)}const m=new OW(a,d,[c,l],r.shape),g=t.runWebGLProgram(m,[h,f],h.dtype),y=Z({inputs:{x:g},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),y}const FW={kernelName:cd,backendName:"webgl",kernelFunc:DW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PW{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=Re(this.rank),s=LW(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function LW(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)s===2?r.push("index"):r.push(`${t[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tw(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:o}=e,{axis:a,batchDims:i}=r,u=He(a,s.shape)[0];if(B().get("DEBUG")){const $=t.readSync(o.dataId),S=s.shape[u];for(let C=0;C<$.length;++C){const I=$[C];E(I<=S-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${S-1}]`)}}const c=yv(s,o,u,i),l=q(o.shape),d=[],f=Z({inputs:{x:s},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=Z({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(f),d.push(h);const m=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const $=t.bufferSync(h),S=t.bufferSync(f),C=HB(S,$,m);return d.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.makeTensorInfo(c.outputShape,C.dtype,C.values)}const g=new PW(f.shape,m),y=t.runWebGLProgram(g,[f,h],f.dtype);d.push(y);const b=Z({inputs:{x:y},backend:t,attrs:{shape:c.outputShape}});return d.forEach($=>t.disposeIntermediateTensorInfo($)),b}const BW={kernelName:ud,backendName:"webgl",kernelFunc:Tw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VW="return float(a > b);",MW=`
  return vec4(greaterThan(a, b));
`,UW=at({opSnippet:VW,packedOpSnippet:MW,cpuKernelImpl:qB,dtype:"bool"}),WW={kernelName:ld,backendName:"webgl",kernelFunc:UW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zW="return float(a >= b);",GW=`
  return vec4(greaterThanEqual(a, b));
`,jW=at({opSnippet:zW,packedOpSnippet:GW,dtype:"bool",cpuKernelImpl:KB}),HW={kernelName:dd,backendName:"webgl",kernelFunc:jW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qW(n){const{inputs:e,backend:t}=n,{input:r}=e;return Sw(r,!0,t)}const KW={kernelName:fd,backendName:"webgl",kernelFunc:qW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW="return float(!isnan(x) && !isinf(x));",YW=be({opSnippet:XW,dtype:"bool"}),QW={kernelName:hd,backendName:"webgl",kernelFunc:YW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZW="return float(isinf(x));",JW=be({opSnippet:ZW,dtype:"bool"}),ez={kernelName:md,backendName:"webgl",kernelFunc:JW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tz="return float(isnan(x));",nz=be({opSnippet:tz,dtype:"bool"}),rz={kernelName:gd,backendName:"webgl",kernelFunc:nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sz="return float(a < b);",oz=`
  return vec4(lessThan(a, b));
`,az=at({opSnippet:sz,packedOpSnippet:oz,cpuKernelImpl:XB,dtype:"bool"}),iz={kernelName:xd,backendName:"webgl",kernelFunc:az};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uz="return float(a <= b);",cz=`
  return vec4(lessThanEqual(a, b));
`,lz=at({opSnippet:uz,packedOpSnippet:cz,cpuKernelImpl:YB,dtype:"bool"}),dz={kernelName:bd,backendName:"webgl",kernelFunc:lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:o}=t,a=QB(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const pz={kernelName:vd,backendName:"webgl",kernelFunc:fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hz=Ls+`
  return x < 0.0 ? 0./0. : log(x);
`,mz=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,gz=be({opSnippet:hz,packedOpSnippet:mz,cpuKernelImpl:ZB}),yz={kernelName:wd,backendName:"webgl",kernelFunc:gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xz=Ls+`
  return log(1.0 + x);
`,bz=be({opSnippet:xz}),vz={kernelName:$d,backendName:"webgl",kernelFunc:bz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wz="return float(a >= 1.0 && b >= 1.0);",$z=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Sz=at({opSnippet:wz,packedOpSnippet:$z,dtype:"bool"}),Tz={kernelName:Sd,backendName:"webgl",kernelFunc:Sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cz="return float(!(x >= 1.0));",Nz=be({opSnippet:Cz}),Ez={kernelName:Td,backendName:"webgl",kernelFunc:Nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iz="return float(a >= 1.0 || b >= 1.0);",kz=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,_z=at({opSnippet:Iz,packedOpSnippet:kz,dtype:"bool"}),Rz={kernelName:Cd,backendName:"webgl",kernelFunc:_z};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Az{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oz{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dz=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r,c=B().getBool("WEBGL_PACK_NORMALIZATION")?new Oz(s.shape,o,a,i,u):new Az(s.shape,o,a,i,u);return t.runWebGLProgram(c,[s],s.dtype)},Fz={kernelName:Nd,backendName:"webgl",kernelFunc:Dz};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pz{constructor(e,t,r,s,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=s,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lz=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=r,d=new Pz(s.shape,i,u,c,l);return t.runWebGLProgram(d,[s,o,a],s.dtype)},Bz={kernelName:wx,backendName:"webgl",kernelFunc:Lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(n,e,t,r){const s=q(e),a=q(n.shape)/s,i=Z({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=es(i,n.dtype,"max",r),c=Z({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cw(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=s.shape.length,u=He(o,s.shape);let c=u;const l=un(c,i),d=l!=null,f=t.shouldExecuteOnCPU([s]);let h=s;if(d){if(f){const S=t.texData.get(h.dataId).values,C=new Array(i);for(let L=0;L<C.length;L++)C[L]=s.shape[l[L]];const I=Th(S,s.shape,s.dtype,l,C);h=t.makeTensorInfo(C,s.dtype);const A=t.texData.get(h.dataId);A.values=I}else h=Ki(s,l,t);c=cn(c.length,i)}$n("max",c,i);const[m,g]=Vn(h.shape,c);let y=m;a&&(y=Gt(m,u));let b;if(f){const S=t.texData.get(h.dataId).values,C=JB(S,q(g),y,s.dtype);b=t.makeTensorInfo(y,s.dtype);const I=t.texData.get(b.dataId);I.values=C}else b=Vz(h,g,y,t);return d&&t.disposeIntermediateTensorInfo(h),b}const Mz={kernelName:Ed,backendName:"webgl",kernelFunc:Cw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uz=Ch+`
  return max(a, b);
`,Wz=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Zo+`
  return result;
`,zz=at({opSnippet:Uz,packedOpSnippet:Wz,cpuKernelImpl:e4}),Gz={kernelName:Id,backendName:"webgl",kernelFunc:zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Yo(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;E(Bt(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Xr(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&Me(l.inShape,l.outShape))return Ft({inputs:{x:s},backend:t});const d=new Ao(l,"max",!1);return t.runWebGLProgram(d,[s],s.dtype)}const Hz={kernelName:kd,backendName:"webgl",kernelFunc:jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:c}=r,l=[1,1,1],d=Uo(s.shape,o,a,l,i,c,u),f=new Eh(d,"max",!1);return t.runWebGLProgram(f,[s],s.dtype)}const Kz={kernelName:_d,backendName:"webgl",kernelFunc:qz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,u=a-1-e.padInfo.left,c=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Yz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,d=u-1-e.padInfo.front,f=c-1-e.padInfo.top,h=l-1-e.padInfo.left,m=u*c*l-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${f}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${m} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,d=[1,1,1],f=Uo(a.shape,i,u,d,c,l),h=new Eh(f,"max",!0),m=t.runWebGLProgram(h,[a],a.dtype),g=new Yz(f),y=t.runWebGLProgram(g,[s,m],a.dtype);return t.disposeIntermediateTensorInfo(m),y}const Zz={kernelName:Sx,backendName:"webgl",kernelFunc:Qz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o,output:a}=e,i=o;Yo([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,f=Xr(i.shape,u,c,1,l,d),h=!0,m=new Ao(f,"max",h),g=t.runWebGLProgram(m,[i],i.dtype),y=new Xz(f),b=t.runWebGLProgram(y,[s,g],i.dtype);return t.disposeIntermediateTensorInfo(g),b}const eG={kernelName:$x,backendName:"webgl",kernelFunc:Jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(n,e,t,r){let s=new Ao(t,"max",!1);const o=r.runWebGLProgram(s,[n],"float32");s=new Ao(t,"max",!0,!0,e);const a=r.runWebGLProgram(s,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nG={kernelName:Rd,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=t;E(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];E(Bt(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Xr(r.shape,s,o,c,a),[d,f]=tG(r,i,l,u);return[d,f]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(n,e,t,r){const s=q(e),a=q(n.shape)/s,i=Z({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=es(i,"float32","mean",r),c=Z({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sG={kernelName:Ad,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:s,axis:o}=e,a=t,i=r.shape.length,u=He(o,r.shape);let c=u;const l=un(c,i),d=l!=null,f=a.shouldExecuteOnCPU([r]),h=[];let m=r;if(d){if(f){const C=a.texData.get(m.dataId).values,I=new Array(i);for(let F=0;F<I.length;F++)I[F]=r.shape[l[F]];const A=Th(C,r.shape,r.dtype,l,I);m=a.makeTensorInfo(I,r.dtype);const L=a.texData.get(m.dataId);L.values=A}else m=Ki(r,l,a);h.push(m),c=cn(c.length,i)}$n("sum",c,i);const[g,y]=Vn(m.shape,c);let b=g;s&&(b=Gt(g,u));const $=rG(m,y,b,a);for(const S of h)a.disposeIntermediateTensorInfo(S);return $}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=He(o,s.shape);let c=u;const l=un(c,i);let d=s;l!=null&&(d=wt({inputs:{x:s},backend:t,attrs:{perm:l}}),c=cn(c.length,s.shape.length)),$n("min",c,i);const[f,h]=Vn(d.shape,c),m=q(h),g=Z({inputs:{x:d},backend:t,attrs:{shape:[-1,m]}}),y=es(g,g.dtype,"min",t);let b;if(a){const $=Gt(f,u);b=Z({inputs:{x:y},backend:t,attrs:{shape:$}})}else b=Z({inputs:{x:y},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),l!=null&&t.disposeIntermediateTensorInfo(d),b}const aG={kernelName:Od,backendName:"webgl",kernelFunc:oG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iG=Ch+`
  return min(a, b);
`,uG=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Zo+`
  return result;
`,cG=at({opSnippet:iG,packedOpSnippet:uG,cpuKernelImpl:t4}),lG={kernelName:Dd,backendName:"webgl",kernelFunc:cG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dG{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((l,d)=>l[0]+e[d]+l[1]);const s=e.length,o=Re(s),a=t.map(l=>l[0]).join(","),i=t.map((l,d)=>l[0]+e[d]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),c=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fG{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const s=e.length,o=Re(s),a=t.map(m=>m[0]).join(","),i=t.map((m,g)=>m[0]+e[g]).join(","),u=vt("rc",s),c=vt("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${c.slice(-2).join()})`,f=r==="reflect"?0:1;let h="";if(s===1){const m=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${f};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${f};
        }
        source -= start;
      `;h=`
        ${o} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${u[s-1]} += 1;
        if(${l}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
      `}else{const m=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${f}) +
                gte * ((end - 1) * 2 - source + ${f});
        source -= start;
      `;h=`
        ${o} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${u[s-1]} += 1;
        if(${l}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${m}
          result[2] = getChannel(getX(${c.join()}), ${d});
          ${u[s-1]} += 1;
          if(${l}) {
            ${m}
            result[3] = getChannel(getX(${c.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pG=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:s,mode:o}=t,a=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fG(r.shape,s,o):new dG(r.shape,s,o);return e.runWebGLProgram(a,[r],r.dtype)},hG={kernelName:Fd,backendName:"webgl",kernelFunc:pG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mG=`if (b == 0.0) return NAN;
  return mod(a, b);`,gG=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Zo+`
  return result;
`,yG=at({opSnippet:mG,packedOpSnippet:gG}),xG={kernelName:Pd,backendName:"webgl",kernelFunc:yG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bG{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vG=`
if (a == b) {
  return 1.0;
};
return a / b;`,wG=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Nw=at({opSnippet:vG,packedOpSnippet:wG,checkOutOfBounds:!0}),$G={kernelName:Kl,backendName:"webgl",kernelFunc:Nw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sy="return a - b;",Ew=at({opSnippet:Sy,packedOpSnippet:Sy,supportsComplex:!0,cpuKernelImpl:w4}),SG={kernelName:Lf,backendName:"webgl",kernelFunc:Ew};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iw(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:o}=r,a=He([o],s.shape),i=Cw({inputs:{x:s},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=Gt(i.shape,a),c=Z({inputs:{x:i},backend:t,attrs:{shape:u}}),l=Ew({inputs:{a:s,b:c},backend:t}),d=$w({inputs:{x:l},backend:t}),f=Xi({inputs:{x:d},backend:t,attrs:{axis:a,keepDims:!1}}),h=Z({inputs:{x:f},backend:t,attrs:{shape:u}}),m=Nw({inputs:{a:d,b:h},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),m}const TG={kernelName:Nf,backendName:"webgl",kernelFunc:Iw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r,u=i?s:Iw({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new bG(c,l,o),f=[[a]],h=t.runWebGLProgram(d,[u],"int32",f);return i||t.disposeIntermediateTensorInfo(u),h}const NG={kernelName:Ld,backendName:"webgl",kernelFunc:CG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG=ln+`
  return -x;
`,IG=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function kG(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId),[a,i]=r4(o.values,r.shape,r.dtype);return t.makeTensorInfo(i,r.dtype,a)}let s;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new or(r.shape,IG):s=new kn(r.shape,EG),t.runWebGLProgram(s,[r],r.dtype)}const _G={kernelName:Vd,backendName:"webgl",kernelFunc:kG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG=Yp;function AG(n){Qt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r,c=t.readSync(s.dataId),l=t.readSync(o.dataId),{selectedIndices:d}=RG(c,l,a,i,u);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const OG={kernelName:Ud,backendName:"webgl",kernelFunc:AG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG=Qp;function FG(n){Qt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r,l=t.readSync(s.dataId),d=t.readSync(o.dataId),{selectedIndices:f,validOutputs:h}=DG(l,d,a,i,u,c);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([],"int32",new Int32Array([h]))]}const PG={kernelName:Wd,backendName:"webgl",kernelFunc:FG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG=Zp;function BG(n){Qt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r,l=t.readSync(s.dataId),d=t.readSync(o.dataId),f=a,h=i,m=u,g=c,{selectedIndices:y,selectedScores:b}=LG(l,d,f,h,m,g);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const VG={kernelName:zd,backendName:"webgl",kernelFunc:BG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MG{constructor(e,t,r,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UG=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r,c=q(s.shape),l=new MG(c,a,i,u),d=Z({inputs:{x:s},backend:t,attrs:{shape:[c]}}),f=t.runWebGLProgram(l,[d],o);t.disposeIntermediateTensorInfo(d);const h=[...s.shape,a],m=Z({inputs:{x:f},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(f),m},WG={kernelName:jd,backendName:"webgl",kernelFunc:UG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gi(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=ea({inputs:{input:r},backend:t}),o=gi({inputs:{x:s},backend:t}),a=Yi({inputs:{input:r},backend:t}),i=gi({inputs:{x:a},backend:t}),u=yr({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return ta({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const zG={kernelName:jf,backendName:"webgl",kernelFunc:gi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kw(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=ea({inputs:{input:r},backend:t}),o=kw({inputs:{x:s},backend:t}),a=Yi({inputs:{input:r},backend:t}),i=gi({inputs:{x:a},backend:t}),u=yr({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return ta({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const GG={kernelName:Gd,backendName:"webgl",kernelFunc:kw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return zc({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{ft(o,l.shape,"All tensors passed to stack must have matching shapes"),E(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const d=zc({inputs:{input:l},backend:t,attrs:{dim:s}});return i.push(d),d}),c=hw({inputs:u,backend:t,attrs:{axis:s}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),c}const HG={kernelName:Hd,backendName:"webgl",kernelFunc:jG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qG{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,l)=>c[0]+e[l]+c[1]);const s=e.length,o=Re(s),a=t.map(c=>c[0]).join(","),i=t.map((c,l)=>c[0]+e[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KG{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((g,y)=>g[0]+e[y]+g[1]);const s=e.length,o=Re(s),a=t.map(g=>g[0]).join(","),i=t.map((g,y)=>g[0]+e[y]).join(","),u=vt("rc",s),c=vt("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${c.slice(-2).join()})`,f=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${l}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${l}) {`],h=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let g=0,y=s===1?2:4;g<y;g++)m+=`
        ${f[g]}
        if (${h}) {
          result[${g}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${g}] = getChannel(getX(${c.join()}), ${d});
        }
      `;m+=s===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _w=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,constantValue:a}=r;if(q(s.shape)===0){const c=o.map((l,d)=>l[0]+s.shape[d]+l[1]);return ta({backend:t,attrs:{shape:c,value:a,dtype:s.dtype}})}const i=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KG(s.shape,o,a):new qG(s.shape,o,a),u=[[a]];return t.runWebGLProgram(i,[s],s.dtype,u)},XG={kernelName:qd,backendName:"webgl",kernelFunc:_w};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YG=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,QG=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Zo+`
  return result;
`,ZG=at({opSnippet:YG,packedOpSnippet:QG}),JG={kernelName:Kd,backendName:"webgl",kernelFunc:ZG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ej(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=[],c=He(o,s.shape);let l=c;const d=un(l,i);let f=s;d!=null&&(f=wt({inputs:{x:s},backend:t,attrs:{perm:d}}),l=cn(l.length,i),u.push(f)),$n("prod",l,i);let h;if(t.shouldExecuteOnCPU([f])){const m=t.texData.get(f.dataId).values,{outVals:g,outShape:y,outDtype:b}=o4(f.shape,f.dtype,m,l);h=t.makeTensorInfo(y,b,g)}else{const[m,g]=Vn(f.shape,l),y=q(g),b=Z({inputs:{x:f},backend:t,attrs:{shape:[-1,y]}}),$=Ei(s.dtype),S=es(b,$,"prod",t);h=Z({inputs:{x:S},backend:t,attrs:{shape:m}}),u.push(b),u.push(S)}if(a){u.push(h);const m=Gt(h.shape,c);h=Z({inputs:{x:h},backend:t,attrs:{shape:m}})}return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),h}const tj={kernelName:Yd,backendName:"webgl",kernelFunc:ej};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nj(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map(b=>t.readSync(b.dataId)),c=s.map(b=>b.shape),l=t.readSync(o.dataId),d=t.readSync(a.dataId),[f,h,m]=a4(u,c,l,o.shape,o.dtype,d,a.shape,i),g=f.map(b=>t.makeTensorInfo([b.length],"int32",b)),y=t.makeTensorInfo(m,o.dtype,h);return g.concat([y])}const rj={kernelName:Qd,backendName:"webgl",kernelFunc:nj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sj(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:o}=e,a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=i4(a,r.shape,r.dtype,i,s.shape,u,o.shape),d=t.makeTensorInfo([c.length],"int32",c),f=t.makeTensorInfo([l.length],r.dtype,l);return[d,f]}const oj={kernelName:Zd,backendName:"webgl",kernelFunc:sj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aj(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,c=t.readSync(s.dataId),l=t.readSync(o.dataId),d=t.readSync(a.dataId),f=i.map(y=>t.readSync(y.dataId)),h=i.map(y=>y.shape),[m,g]=u4(c,s.shape,l,o.shape,o.dtype,d,a.shape,f,h,u);return t.makeTensorInfo(m,o.dtype,g)}const ij={kernelName:Jd,backendName:"webgl",kernelFunc:aj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rw=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:o,dtype:a}=t,i=c4(r,s,o,a);return e.makeTensorInfo([i.length],a,i)},uj={kernelName:ef,backendName:"webgl",kernelFunc:Rw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj="return 1.0 / x;",lj=be({opSnippet:cj}),dj={kernelName:nf,backendName:"webgl",kernelFunc:lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj=ln+`
  return (x < 0.0) ? 0.0 : x;
`,pj=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hj=be({opSnippet:fj,packedOpSnippet:pj}),mj={kernelName:rf,backendName:"webgl",kernelFunc:hj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj=ln+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,yj=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xj=be({opSnippet:gj,packedOpSnippet:yj}),bj={kernelName:uf,backendName:"webgl",kernelFunc:xj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vj{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r];let f;o?f="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wj{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r];let f;o?f="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new wj(s.shape,u,c,o,a):new vj(s.shape,u,c,o,a);return t.runWebGLProgram(l,[s],"float32")}const Sj={kernelName:af,backendName:"webgl",kernelFunc:$j};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tj{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],d=u[1]/c[1],f=1/l,h=1/d,m=Math.ceil(f)*2+2,g=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${h});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cj(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,i=new Tj(o.shape,s.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const Nj={kernelName:Cx,backendName:"webgl",kernelFunc:Cj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ej{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r],f=s?"0.5":"0.0";let h;o?h="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ij{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r],f=s?"0.5":"0.0";let h;o?h="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kj(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ij(s.shape,u,c,o,a):new Ej(s.shape,u,c,o,a);return t.runWebGLProgram(l,[s],s.dtype)}const _j={kernelName:of,backendName:"webgl",kernelFunc:kj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rj{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],d=u[1]/c[1],f=1/l,h=1/d,m=Math.ceil(f)*2+2,g=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${h});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aj(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,i=new Rj(o.shape,s.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const Oj={kernelName:Tx,backendName:"webgl",kernelFunc:Aj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dj{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,u)=>s(u)).join(","),a=Re(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fj{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=vt("rc",r),o=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,i=Re(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${o}){
            result.g = ${c(s.slice())};
          }
          if(${a}) {
            result.b = ${l(s.slice())};
            if(${o}) {
              result.a = ${d(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(m){return f(m)}function c(m){return m[r-1]="("+m[r-1]+" + 1)",f(m)}function l(m){return m[r-2]="("+m[r-2]+" + 1)",f(m)}function d(m){return m[r-1]="("+m[r-1]+" + 1)",m[r-2]="("+m[r-2]+" + 1)",f(m)}function f(m){const g=e.map(($,S)=>h(S,m)),y=g.join(","),b=g.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${b}))`}function h(m,g){return t.indexOf(m)!==-1&&e[m]!==1?`${e[m]} - ${g[m]} - 1`:`${g[m]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:o}=r,a=s.shape.length,i=He(o,s.shape);if(a===0)return Ft({inputs:{x:s},backend:t});const u=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fj(s.shape,i):new Dj(s.shape,i);return t.runWebGLProgram(u,[s],s.dtype)}const Lj={kernelName:cf,backendName:"webgl",kernelFunc:Pj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bj{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vj={kernelName:qf,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:o,center:a}=e,i=t,u=new Bj(r.shape,o),[c,l]=U1(a,r.shape[1],r.shape[2]),d=[[c,l,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Uj=be({opSnippet:Mj}),Wj={kernelName:lf,backendName:"webgl",kernelFunc:Uj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zj="return inversesqrt(x);",Gj=be({opSnippet:zj,cpuKernelImpl:l4}),jj={kernelName:df,backendName:"webgl",kernelFunc:Gj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aw{constructor(e,t,r,s,o,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=Re(o.length),c=Re(a.length);let l="";r===1?l="i":r===2&&(l="i, j");const d=`getIndices(${l})`;let f="";s===1?f="i":s===2&&(f="i, coords[1]");const h=`getUpdates(${f})`,m=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${m};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${h};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hj(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=Di(o,s,a),f=[d/c,c];if(d===0)return t.makeTensorInfo(a,s.dtype);const h=Z({inputs:{x:s},backend:t,attrs:{shape:[u,i]}}),m=Z({inputs:{x:o},backend:t,attrs:{shape:[u,c]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0])),y=new Aw(u,i,h.shape.length,m.shape.length,l,f),b=t.runWebGLProgram(y,[m,h,g],m.dtype),$=Z({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(g),$}const qj={kernelName:ff,backendName:"webgl",kernelFunc:Hj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kj{constructor(e,t,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=B().getNumber("WEBGL_VERSION")===2?o:a,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xj(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:o}=e,{side:a}=r,i=new Kj(s.shape[0],s.shape[1],o.shape[1],a),u=[[s.shape[1]]];return t.runWebGLProgram(i,[s,o],"int32",u)}const Yj={kernelName:pf,backendName:"webgl",kernelFunc:Xj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qj{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let s,o;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)o="resRC",s="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let l=0;l<t.length;l++)c.push(`${i[l]}`),l<e&&u.push(`${i[l]}`);s=u.join(),o=c.join()}const a=Re(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zj(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:o}=e,a=new Qj(r.shape.length,s.shape,s.shape.length);return t.runWebGLProgram(a,[r,s,o],bn(s.dtype,o.dtype))}const Jj={kernelName:hf,backendName:"webgl",kernelFunc:Zj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eH=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${G1};
  float scale = ${j1};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,tH=be({opSnippet:eH}),nH={kernelName:mf,backendName:"webgl",kernelFunc:tH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rH=Ls+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,sH=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,oH=be({opSnippet:rH,packedOpSnippet:sH,cpuKernelImpl:f4}),aH={kernelName:vf,backendName:"webgl",kernelFunc:oH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iH=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,uH=be({opSnippet:iH}),cH={kernelName:bf,backendName:"webgl",kernelFunc:uH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lH=Ls+`
  return sin(x);
`,dH=be({opSnippet:lH}),fH={kernelName:yf,backendName:"webgl",kernelFunc:dH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pH=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,hH=be({opSnippet:pH}),mH={kernelName:xf,backendName:"webgl",kernelFunc:hH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gH=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,yH=be({opSnippet:gH}),xH={kernelName:wf,backendName:"webgl",kernelFunc:yH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,paddings:a}=r;E(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((b,$)=>b*$),u=[[0,0]];u.push(...a);for(let b=1+o.length;b<s.shape.length;++b)u.push([0,0]);const c=[],l=_w({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),d=ph(l.shape,o,i,!1),f=hh(d.length,o.length,!1),h=mh(l.shape,o,i,!1),m=Z({inputs:{x:l},backend:t,attrs:{shape:d}}),g=wt({inputs:{x:m},backend:t,attrs:{perm:f}}),y=Z({inputs:{x:g},backend:t,attrs:{shape:h}});return c.push(l),c.push(m),c.push(g),c.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},vH={kernelName:Tf,backendName:"webgl",kernelFunc:bH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.readSync(r.dataId),u=t.readSync(s.dataId),c=t.readSync(o.dataId),l=t.readSync(a.dataId)[0],[d,f,h,m,g]=h4(i,r.shape,r.dtype,u,s.dtype,c,l);return[t.makeTensorInfo(f,r.dtype,d),t.makeTensorInfo([f[0]],s.dtype,h),t.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(y=>Number(y)))),t.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const $H={kernelName:Ef,backendName:"webgl",kernelFunc:wH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.readSync(s.dataId)),i=t.readSync(r.dataId),u=Array.from(t.readSync(o.dataId)),[c,l,d]=m4(i,r.shape,r.dtype,a,u);return[t.makeTensorInfo(l,r.dtype,c),t.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const TH={kernelName:If,backendName:"webgl",kernelFunc:SH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=tw(a,r.shape,r.dtype,i,u,!0);return t.makeTensorInfo(l,r.dtype,c)}const NH={kernelName:kf,backendName:"webgl",kernelFunc:CH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=tw(a,r.shape,r.dtype,i,u);return t.makeTensorInfo(l,r.dtype,c)}const IH={kernelName:_f,backendName:"webgl",kernelFunc:EH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:f}=Di(o,s,i),h=!1;if(o.dtype==="string"){const b=t.bufferSync(s),$=t.bufferSync(o),S=Pr(t.readSync(a.dataId)[0]),C=d4(b,$,i,f,l,c,u,d,S,h);return t.makeTensorInfo(i,C.dtype,C.values)}const m=new Aw(c,u,s.shape.length,o.shape.length,d,[f,1],h),g=t.runWebGLProgram(m,[o,s,a],o.dtype),y=Z({inputs:{x:g},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(g),y}const _H={kernelName:Rf,backendName:"webgl",kernelFunc:kH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=He(a,s.shape)[0],u=rv(s,o,i),c=s.shape.length,l=new Array(c).fill(0),d=s.shape.slice();return u.map(f=>{const h=[...d];h[i]=f;const m=Bs({inputs:{x:s},backend:t,attrs:{begin:l,size:h}});return l[i]+=f,m})}const AH={kernelName:Cf,backendName:"webgl",kernelFunc:RH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ty="return sqrt(x);",OH=be({opSnippet:Ty,packedOpSnippet:Ty,cpuKernelImpl:g4}),DH={kernelName:$f,backendName:"webgl",kernelFunc:OH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FH="return x * x;",PH=be({opSnippet:FH}),LH={kernelName:Nx,backendName:"webgl",kernelFunc:PH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cy="return (a - b) * (a - b);",BH=at({opSnippet:Cy,packedOpSnippet:Cy}),VH={kernelName:Af,backendName:"webgl",kernelFunc:BH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=ln+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new kn(r.shape,s);return t.runWebGLProgram(o,[r],r.dtype)}const UH={kernelName:Hf,backendName:"webgl",kernelFunc:MH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WH{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,o=Re(r.length),a=Re(r.length);let i="";if(s===1)i="coords * strides + begin";else{let u=0;i=r.map((c,l)=>(u++,r.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:f}=r,{finalShapeSparse:h,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:$,end:S,strides:C}=A1(s.shape,o,a,i,u,c,l,d,f);let I;if(g)I=Z({inputs:{x:s},backend:t,attrs:{shape:m}});else if(y||b){E(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const L=$1($,S,C),F=Bs({inputs:{x:s},backend:t,attrs:{begin:$,size:L}});I=Z({inputs:{x:F},backend:t,attrs:{shape:m}}),t.disposeIntermediateTensorInfo(F)}else if(t.shouldExecuteOnCPU([s])){const F=t.readSync(s.dataId),V=Ue(s.shape,s.dtype,F),W=y4(h,V,C,$);I=t.makeTensorInfo(m,s.dtype,W.values)}else{const F=new WH($,C,h);I=t.runWebGLProgram(F,[s],s.dtype)}const A=Z({inputs:{x:I},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(I),A}const GH={kernelName:Of,backendName:"webgl",kernelFunc:zH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jH(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=e,f=t.readSync(l.dataId),h=t.readSync(d.dataId),[m,g]=x4(f,h,s,o,a,i,u,c);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(d.shape,"int32",g)]}const HH={kernelName:Df,backendName:"webgl",kernelFunc:jH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.readSync(o.dataId),u=t.readSync(a.dataId)[0],[c,l,d]=b4(i,u,s),f=l.length;return[t.makeTensorInfo([f,2],"int32",c),t.makeTensorInfo([f],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const KH={kernelName:Ff,backendName:"webgl",kernelFunc:qH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(o.dataId),i=v4(a,s);return t.makeTensorInfo(o.shape,"int32",i)}const YH={kernelName:Pf,backendName:"webgl",kernelFunc:XH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QH="return tan(x);",ZH=be({opSnippet:QH}),JH={kernelName:Bf,backendName:"webgl",kernelFunc:ZH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,t6=be({opSnippet:e6}),n6={kernelName:Vf,backendName:"webgl",kernelFunc:t6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r6{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*t[a];this.outputShape=r,this.rank=r.length;const s=Re(this.rank),o=s6(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function s6(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${t[s]}, ${n[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ow(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:o}=r;if(s.dtype==="string"||s.shape.length>5){const u=t.readSync(s.dataId),c=s.dtype==="string"?u.map(f=>Pr(f)):u,l=Ue(s.shape,s.dtype,c),d=$4(l,o);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new r6(s.shape,o);return t.runWebGLProgram(a,[s],s.dtype)}const o6={kernelName:Ni,backendName:"webgl",kernelFunc:Ow};class a6{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class i6{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sr(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function Ny(n){let e=1;for(;e<n;)e*=2;return e}function u6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:o,sorted:a}=r,i=B().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=B().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,l=c[c.length-1];if(t.shouldExecuteOnCPU([s])||l<i||o>u){const W=t.readSync(s.dataId),[U,G]=S4(W,c,s.dtype,o,a);return[t.makeTensorInfo(U.shape,U.dtype,U.values),t.makeTensorInfo(G.shape,G.dtype,G.values)]}if(o===0)return c[c.length-1]=0,[t.makeTensorInfo(c,s.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(l===1)return[s,ta({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const d=t.texData.get(s.dataId),f=d!==null&&d.isPacked,h=f?t.unpackTensor(s):s,g=q(c)/l,y=Z({inputs:{x:h},attrs:{shape:[g,l]},backend:t});f&&Sr(t,h);const b=Ny(o),$=Ny(l);let S=null;const C=()=>S===null?[y,y]:[y,S],I=(W,U,G)=>{const K=C(),te=new a6(G),le=[[l],[S===null?1:0],[Number.NEGATIVE_INFINITY],[W],[U]],fe=S;S=t.runWebGLProgram(te,K,"int32",le),Sr(t,fe)};for(let W=1;W<b;W*=2){const U=W*2;for(let G=W;G>=1;G/=2)I(U,G,[g,$])}for(let W=$;W>b;W/=2){const U=C(),G=new i6([g,W/2]),te=[[l],[S===null?1:0],[b]],oe=S;S=t.runWebGLProgram(G,U,"int32",te),Sr(t,oe);const le=b/2,fe=le*2;for(let me=le;me>=1;me/=2)I(fe,me,S.shape)}let A=S;S=Bs({inputs:{x:S},backend:t,attrs:{begin:0,size:[g,o]}}),Sr(t,A);let L=Tw({inputs:{x:y,indices:S},backend:t,attrs:{axis:1,batchDims:1}});Sr(t,y);const F=c.slice(0,-1);F.push(o),A=S,S=Z({inputs:{x:S},attrs:{shape:F},backend:t}),Sr(t,A);const V=L;return L=Z({inputs:{x:L},attrs:{shape:F},backend:t}),Sr(t,V),[L,S]}const c6={kernelName:Mf,backendName:"webgl",kernelFunc:u6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l6{constructor(e,t,r,s,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=r,[l,d,f,h]=s.shape,[m,g]=c!=null?c:[d,f],y=[l,m,g,h],b=new l6(d,f,a,i,u,y);return t.runWebGLProgram(b,[s,o],"float32")}const f6={kernelName:Uf,backendName:"webgl",kernelFunc:d6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:o}=e;Yo(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:c}=T4(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}const h6={kernelName:Wf,backendName:"webgl",kernelFunc:p6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s,i=a.shape.length,u=s.shape[o],c=new Array(i-1);let l=0;for(let g=0;g<i;g++)g!==o&&(c[l++]=a.shape[g]);const d=[],f=new Array(i).fill(0),h=a.shape.slice();h[o]=1;const m=new Array(u);for(let g=0;g<m.length;g++){f[o]=g;const y=Bs({inputs:{x:a},backend:t,attrs:{begin:f,size:h}}),b=Z({inputs:{x:y},backend:t,attrs:{shape:c}});m[g]=b,d.push(y)}return d.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const g6={kernelName:zf,backendName:"webgl",kernelFunc:m6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y6{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/r);this.outputShape=[s,i];const u="0.0",c="sumValue",l=Math.floor(r/4)*4,d=r%4,f=`
        sumValue += dot(values, segFilter);
    `;let h="";o%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let m="";o%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${m}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${f}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${f}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${f}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${f}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:o}=e,{numSegments:a}=r,i=s.shape.length,u=[];let c=0;const l=un([c],i);let d=s;l!=null&&(d=wt({inputs:{x:s},backend:t,attrs:{perm:l}}),u.push(d),c=cn(1,i)[0]);const f=gv(d.shape,c,a),h=q([d.shape[c]]),m=Z({inputs:{x:d},backend:t,attrs:{shape:[-1,h]}});u.push(m);const g=Ei(s.dtype),y=(C,I,A,L,F)=>{const V=C.shape[0],W=C.shape[1],U=mv(W,F),G={windowSize:U,inSize:W,batchSize:V,numSegments:F},K=new y6(G,I),te=t.compileAndRun(K,[C,A],L);if(u.push(te),te.shape[1]===F)return te;const oe=Rw({backend:t,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),le=Ow({inputs:{x:oe},backend:t,attrs:{reps:[W/U]}});return u.push(oe),u.push(le),y(te,I,le,L,F)},b=y(m,"unsortedSegmentSum",o,g,a),$=Z({inputs:{x:b},backend:t,attrs:{shape:f}});let S=$;if(l!=null){u.push($);const C=hp(l);S=wt({inputs:{x:S},backend:t,attrs:{perm:C}})}return u.forEach(C=>t.disposeIntermediateTensorInfo(C)),S}const b6={kernelName:Gf,backendName:"webgl",kernelFunc:x6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6=[mV,yV,vV,SV,CV,IV,_V,AV,PV,BV,UV,GV,qV,QV,eM,nM,sM,uM,lM,fM,gM,SM,CM,EM,OM,FM,VM,Z4,WM,qM,QM,rU,oU,iU,cU,dU,hU,yU,vU,$U,TU,NU,kU,RU,FU,LU,MU,zU,jU,XU,JU,rW,aW,cW,lW,fW,hW,gW,xW,vW,TW,EW,_W,AW,FW,BW,WW,HW,Q4,KW,jM,QW,ez,rz,eV,iz,dz,pz,yz,vz,Tz,Ez,Rz,Fz,Bz,Mz,Gz,Hz,Kz,Zz,eG,nG,sG,aG,lG,hG,xG,NG,rV,_G,OG,PG,VG,kM,WG,GG,HG,XG,JG,nV,tj,rj,oj,ij,uj,_M,$G,dj,mj,bj,oV,Sj,Nj,_j,Oj,Lj,Vj,Wj,jj,qj,Yj,Jj,nH,aH,cH,fH,mH,wM,TG,xH,vH,$H,TH,NH,IH,_H,AH,DH,LH,VH,UH,GH,HH,KH,YH,SG,fV,JH,n6,o6,c6,f6,pV,h6,g6,b6,zG];for(const n of v6)Kf(n);const w6=(n,e=0,t=0)=>{if(n&&e&&t){const r=document.createElement("canvas"),s=r.getContext("2d");return r.width=e,r.height=t,s.drawImage(n,0,0,e,t),s.getImageData(0,0,e,t)}return null},$6=n=>{if(!n)return null;const{width:e,height:t}=n,r=document.createElement("canvas"),s=r.getContext("2d");return r.width=e,r.height=t,s.putImageData(n,0,0,0,0,e,t),r.toDataURL("image/png")},S6={class:"danmu"},T6={class:"danmu-video","element-loading-text":"人物检测模型加载中... ","element-loading-background":"rgba(0, 0, 0, 0.7)"},C6=Ns({__name:"index",setup(n){const e=lo({message:""}),t=At(!0),r=At(),s=At(),o=At(0),a=At(),i=10,u=16,c=4,l=2,d=!1,f=.3,h=new WeakMap;let m=0,g=0,y=0,b;const $=lo({message:[{required:!0,message:"请输入一个弹幕",trigger:"change"}]}),S=()=>H(this,null,function*(){const F=w6(r.value,m,g);if(F){const V={flipHorizontal:!1,multiSegmentaion:!1,segmentBodyParts:!1,segmentationThreshold:1},W=yield b==null?void 0:b.segmentPeople(F,V),K=yield zP(W,{r:0,g:0,b:0,a:0},{r:0,g:0,b:0,a:255},d,f),te=$6(K);s.value.style["-webkit-mask-image"]=`url(${te})`,s.value.style["-webkit-mask-size"]=`${m}px ${g}px`}o.value===1&&(y=window.requestAnimationFrame(S))}),C=F=>{const{left:V}=F.style,W=Number(V.replace("px",""));if(W>=-m){F.style.left=`${W-l}px`;const U=window.requestAnimationFrame(()=>C(F));h.set(F,U);return}F&&(F.parentNode.removeChild(F),window.cancelAnimationFrame(h.get(F)),h.delete(F))},I=()=>H(this,null,function*(){var F;yield(F=a.value)==null?void 0:F.validate((V,W)=>{var U;if(V){const G=document.createElement("span");G.innerText=e.message,G.style.fontSize=`${u}px`,G.style.fontWeight="500",G.style.color="#fff",G.style.whiteSpace="nowrap",G.style.position="absolute";const te=Math.floor(Math.random()*i)*(u+c)+u;G.style.top=`${te}px`,G.style.left=`${m}px`,s.value.appendChild(G),C(G),(U=a.value)==null||U.resetFields()}else console.log("error submit!",W)})}),A=()=>{const F=r.value;F.paused?(F.play(),o.value=1,S()):(F.pause(),o.value=2,window.cancelAnimationFrame(y))},L=()=>H(this,null,function*(){const F=ko.MediaPipeSelfieSegmentation,V={runtime:"mediapipe",modelType:"landscape",solutionPath:"https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation"};try{b=yield MP(F,V),t.value=!1;const{width:U,height:G}=r.value.getBoundingClientRect();m=U,g=G,S()}catch(W){console.log(W)}});return Xc(()=>L()),e2(()=>{y&&window.cancelAnimationFrame(y)}),(F,V)=>{const W=r2,U=o2,G=zC,K=WC,te=XC;return fo(),ja("div",S6,[Ly((fo(),ja("div",T6,[qa("video",{src:YC,class:"danmu-video-inner",preload:"true",ref_key:"videoRef",ref:r,loop:"","x5-video-player-fullscreen":"true","x5-playsinline":"true",playsInline:"","webkit-playsinline":"true",crossOrigin:"anonymous"},null,512),qa("div",{class:"danmu-mask",ref_key:"barrageBoxRef",ref:s},null,512),mn(W,{type:"primary",class:"danmu-video-btn",onClick:A},{default:zn(()=>[Mu(Uu(o.value===1?"暂停":"播放"),1)]),_:1})])),[[te,t.value]]),mn(K,{inline:!0,model:e,rules:$,disabled:t.value,ref_key:"ruleFormRef",ref:a,onSubmit:V[1]||(V[1]=n2(()=>{},["stop","prevent"]))},{default:zn(()=>[mn(G,{label:"",prop:"message",class:"danmu-input"},{default:zn(()=>[mn(U,{modelValue:e.message,"onUpdate:modelValue":V[0]||(V[0]=oe=>e.message=oe),placeholder:"发送弹幕",onKeyup:t2(I,["enter"])},null,8,["modelValue","onKeyup"])]),_:1}),mn(G,null,{default:zn(()=>[mn(W,{type:"primary",onClick:I},{default:zn(()=>[Mu("发送")]),_:1})]),_:1})]),_:1},8,["model","rules","disabled"])])}}});const _6=s2(C6,[["__scopeId","data-v-c1dc70a2"]]);export{_6 as default};
